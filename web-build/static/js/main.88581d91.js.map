{"version":3,"file":"static/js/main.88581d91.js","mappings":"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","sources":["src/screens/SplashScreen.js","src/services/authService.js","src/screens/LoginScreen.js","src/services/usernameService.js","src/screens/UsernameScreen.js","src/screens/OnboardingScreen.js","src/services/firestoreService.js","src/services/leaderboardService.js","src/components/TopBar.js","src/components/FeaturedCarousel.js","src/components/QuestsWidget.js","src/components/LeaderboardWidget.js","src/components/TournamentsWidget.js","src/screens/MainHubScreen.js","src/screens/GamesScreen.js","src/config/firebase.js","src/screens/ForgeScreen.js","src/screens/ProfileScreen.js","src/screens/StickerAlbumScreen.js","src/screens/StoreScreen.js","src/screens/SeasonPassScreen.js","src/navigation/TabNavigator.js","src/screens/WalletScreen.js","src/screens/ReferralScreen.js","src/screens/SettingsScreen.js","src/screens/LeaderboardScreen.js","src/screens/TournamentScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ImageBackground,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst SplashScreen = ({ navigation }) => {\r\n  const handleGetStarted = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Space Nebula Background */}\r\n      <ImageBackground\r\n        source={{\r\n          uri: 'https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80'\r\n        }}\r\n        style={styles.backgroundImage}\r\n        resizeMode=\"cover\"\r\n      >\r\n        {/* Gradient Overlay for better text readability */}\r\n        <LinearGradient\r\n          colors={['rgba(0,0,0,0.3)', 'rgba(0,0,0,0.6)', 'rgba(0,0,0,0.8)']}\r\n          style={styles.gradientOverlay}\r\n        >\r\n          {/* Main Content */}\r\n          <View style={styles.content}>\r\n            {/* Title */}\r\n            <Text style={styles.title}>PLANET LEAGUE</Text>\r\n            \r\n            {/* Tagline */}\r\n            <Text style={styles.tagline}>Play. Earn. Own.</Text>\r\n          </View>\r\n\r\n          {/* Bottom Button */}\r\n          <View style={styles.buttonContainer}>\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              onPress={handleGetStarted}\r\n              activeOpacity={0.8}\r\n            >\r\n              <LinearGradient\r\n                colors={['#4A90E2', '#357ABD']}\r\n                style={styles.buttonGradient}\r\n                start={{ x: 0, y: 0 }}\r\n                end={{ x: 1, y: 0 }}\r\n              >\r\n                <Text style={styles.buttonText}>GET STARTED</Text>\r\n              </LinearGradient>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </LinearGradient>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    width: width,\r\n    height: height,\r\n  },\r\n  gradientOverlay: {\r\n    flex: 1,\r\n    justifyContent: 'space-between',\r\n    paddingVertical: 60,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  title: {\r\n    fontSize: 42,\r\n    fontWeight: 'bold',\r\n    color: '#FFFFFF',\r\n    textAlign: 'center',\r\n    letterSpacing: 4,\r\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n    textShadowOffset: { width: 2, height: 2 },\r\n    textShadowRadius: 4,\r\n    marginBottom: 16,\r\n  },\r\n  tagline: {\r\n    fontSize: 18,\r\n    color: '#E0E0E0',\r\n    textAlign: 'center',\r\n    letterSpacing: 2,\r\n    fontWeight: '300',\r\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\r\n    textShadowOffset: { width: 1, height: 1 },\r\n    textShadowRadius: 2,\r\n  },\r\n  buttonContainer: {\r\n    paddingHorizontal: 40,\r\n    paddingBottom: 40,\r\n  },\r\n  button: {\r\n    borderRadius: 12,\r\n    overflow: 'hidden',\r\n    elevation: 8,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 8,\r\n  },\r\n  buttonGradient: {\r\n    paddingVertical: 18,\r\n    paddingHorizontal: 40,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 1,\r\n  },\r\n});\r\n\r\nexport default SplashScreen; ","// Simulated Authentication Service\r\n// This mimics Firebase behavior for development/testing\r\n\r\n// Simulated user database\r\nlet users = [\r\n  {\r\n    id: '1',\r\n    email: 'test@example.com',\r\n    password: 'password123',\r\n    username: 'testuser',\r\n    isNewUser: false,\r\n    createdAt: '2024-01-01T00:00:00Z',\r\n    lastSignIn: '2024-01-15T00:00:00Z'\r\n  }\r\n];\r\n\r\n// Simulated current user\r\nlet currentUser = null;\r\n\r\n// Email validation helper\r\nconst isValidEmail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\n// Password validation helper\r\nconst isValidPassword = (password) => {\r\n  return password && password.length >= 6;\r\n};\r\n\r\nexport const authService = {\r\n  // Simulate Google Sign In\r\n  signInWithGoogle: async () => {\r\n    // Simulate network delay\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // Simulate successful Google sign in\r\n    const mockUser = {\r\n      id: 'google-user-1',\r\n      email: 'user@gmail.com',\r\n      displayName: 'Google User',\r\n      isNewUser: Math.random() > 0.5, // Randomly decide if new user\r\n      createdAt: new Date().toISOString(),\r\n      lastSignIn: new Date().toISOString()\r\n    };\r\n    \r\n    currentUser = mockUser;\r\n    \r\n    return {\r\n      success: true,\r\n      user: mockUser\r\n    };\r\n  },\r\n\r\n  // Simulate X (Twitter) Sign In\r\n  signInWithX: async () => {\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    const mockUser = {\r\n      id: 'x-user-1',\r\n      email: 'user@x.com',\r\n      displayName: 'X User',\r\n      isNewUser: Math.random() > 0.5,\r\n      createdAt: new Date().toISOString(),\r\n      lastSignIn: new Date().toISOString()\r\n    };\r\n    \r\n    currentUser = mockUser;\r\n    \r\n    return {\r\n      success: true,\r\n      user: mockUser\r\n    };\r\n  },\r\n\r\n  // Simulate Email/Password Sign In\r\n  signInWithEmail: async (email, password) => {\r\n    await new Promise(resolve => setTimeout(resolve, 800));\r\n    \r\n    // Validate email format\r\n    if (!isValidEmail(email)) {\r\n      return {\r\n        success: false,\r\n        error: 'auth/invalid-email',\r\n        message: 'Please enter a valid email address'\r\n      };\r\n    }\r\n    \r\n    // Validate password\r\n    if (!isValidPassword(password)) {\r\n      return {\r\n        success: false,\r\n        error: 'auth/wrong-password',\r\n        message: 'Password must be at least 6 characters long'\r\n      };\r\n    }\r\n    \r\n    // Find user by email\r\n    const user = users.find(u => u.email.toLowerCase() === email.toLowerCase());\r\n    \r\n    if (!user) {\r\n      return {\r\n        success: false,\r\n        error: 'auth/user-not-found',\r\n        message: 'No account found with this email address'\r\n      };\r\n    }\r\n    \r\n    // Check password\r\n    if (user.password !== password) {\r\n      return {\r\n        success: false,\r\n        error: 'auth/wrong-password',\r\n        message: 'Incorrect password. Please try again.'\r\n      };\r\n    }\r\n    \r\n    // Success - update last sign in\r\n    user.lastSignIn = new Date().toISOString();\r\n    currentUser = user;\r\n    \r\n    return {\r\n      success: true,\r\n      user: user\r\n    };\r\n  },\r\n\r\n  // Simulate Create User with Email\r\n  createUserWithEmail: async (email, password) => {\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // Validate email format\r\n    if (!isValidEmail(email)) {\r\n      return {\r\n        success: false,\r\n        error: 'auth/invalid-email',\r\n        message: 'Please enter a valid email address'\r\n      };\r\n    }\r\n    \r\n    // Validate password\r\n    if (!isValidPassword(password)) {\r\n      return {\r\n        success: false,\r\n        error: 'auth/weak-password',\r\n        message: 'Password must be at least 6 characters long'\r\n      };\r\n    }\r\n    \r\n    // Check if user already exists\r\n    const existingUser = users.find(u => u.email.toLowerCase() === email.toLowerCase());\r\n    if (existingUser) {\r\n      return {\r\n        success: false,\r\n        error: 'auth/email-already-in-use',\r\n        message: 'An account with this email already exists'\r\n      };\r\n    }\r\n    \r\n    // Create new user\r\n    const newUser = {\r\n      id: `user-${Date.now()}`,\r\n      email: email.toLowerCase(),\r\n      password: password,\r\n      username: null, // Will be set later\r\n      isNewUser: true,\r\n      createdAt: new Date().toISOString(),\r\n      lastSignIn: new Date().toISOString()\r\n    };\r\n    \r\n    users.push(newUser);\r\n    currentUser = newUser;\r\n    \r\n    return {\r\n      success: true,\r\n      user: newUser\r\n    };\r\n  },\r\n\r\n  // Get current user\r\n  getCurrentUser: () => {\r\n    return currentUser;\r\n  },\r\n\r\n  // Update username (now integrates with username service)\r\n  updateUsername: async (username) => {\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    \r\n    if (currentUser) {\r\n      currentUser.username = username;\r\n      currentUser.isNewUser = false;\r\n      \r\n      // Update in users array if it's an email user\r\n      const userIndex = users.findIndex(u => u.id === currentUser.id);\r\n      if (userIndex !== -1) {\r\n        users[userIndex] = currentUser;\r\n      }\r\n    }\r\n    \r\n    return {\r\n      success: true,\r\n      user: currentUser\r\n    };\r\n  },\r\n\r\n  // Sign out\r\n  signOut: async () => {\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n    currentUser = null;\r\n    return { success: true };\r\n  },\r\n\r\n  // Check if user is new\r\n  isNewUser: (user) => {\r\n    return user.isNewUser || user.username === null;\r\n  },\r\n\r\n  // Get all users (for testing)\r\n  getAllUsers: () => {\r\n    return [...users];\r\n  },\r\n\r\n  // Reset users (for testing)\r\n  resetUsers: () => {\r\n    users = [\r\n      {\r\n        id: '1',\r\n        email: 'test@example.com',\r\n        password: 'password123',\r\n        username: 'testuser',\r\n        isNewUser: false,\r\n        createdAt: '2024-01-01T00:00:00Z',\r\n        lastSignIn: '2024-01-15T00:00:00Z'\r\n      }\r\n    ];\r\n    currentUser = null;\r\n  }\r\n};\r\n\r\nexport default authService; ","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  ActivityIndicator,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { authService } from '../services/authService';\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleGoogleSignIn = async () => {\n    setLoading(true);\n    try {\n      const result = await authService.signInWithGoogle();\n      if (result.success) {\n        // Check if user is new or returning\n        const isNewUser = authService.isNewUser(result.user);\n        if (isNewUser) {\n          navigation.navigate('Username');\n        } else {\n          navigation.navigate('MainApp');\n        }\n      } else {\n        Alert.alert('Google Sign-In Error', result.error || 'Failed to sign in with Google');\n      }\n    } catch (error) {\n      Alert.alert('Error', 'Failed to sign in with Google. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleXSignIn = async () => {\n    setLoading(true);\n    try {\n      const result = await authService.signInWithX();\n      if (result.success) {\n        const isNewUser = authService.isNewUser(result.user);\n        if (isNewUser) {\n          navigation.navigate('Username');\n        } else {\n          navigation.navigate('MainApp');\n        }\n      } else {\n        Alert.alert('X Sign-In Error', result.error || 'Failed to sign in with X');\n      }\n    } catch (error) {\n      Alert.alert('Error', 'Failed to sign in with X. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEmailSignIn = async () => {\n    // Clear any previous errors\n    if (!email.trim() || !password.trim()) {\n      Alert.alert('Missing Information', 'Please fill in both email and password fields.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // First try to sign in\n      let result = await authService.signInWithEmail(email.trim(), password);\n      \n      if (result.success) {\n        // User exists and password is correct, check if they need to set username\n        const isNewUser = authService.isNewUser(result.user);\n        if (isNewUser) {\n          navigation.navigate('Username');\n        } else {\n          navigation.navigate('MainApp');\n        }\n      } else {\n        // Handle different error scenarios\n        switch (result.error) {\n          case 'auth/invalid-email':\n            Alert.alert('Invalid Email', result.message || 'Please enter a valid email address.');\n            break;\n          case 'auth/wrong-password':\n            Alert.alert('Incorrect Password', result.message || 'The password you entered is incorrect. Please try again.');\n            break;\n          case 'auth/user-not-found':\n            // User doesn't exist, try to create account\n            const createResult = await authService.createUserWithEmail(email.trim(), password);\n            if (createResult.success) {\n              // New user created successfully\n              navigation.navigate('Username');\n            } else {\n              // Handle signup errors\n              switch (createResult.error) {\n                case 'auth/invalid-email':\n                  Alert.alert('Invalid Email', createResult.message || 'Please enter a valid email address.');\n                  break;\n                case 'auth/weak-password':\n                  Alert.alert('Weak Password', createResult.message || 'Password must be at least 6 characters long.');\n                  break;\n                case 'auth/email-already-in-use':\n                  Alert.alert('Account Exists', createResult.message || 'An account with this email already exists. Please try signing in instead.');\n                  break;\n                default:\n                  Alert.alert('Sign Up Error', createResult.message || 'Failed to create account. Please try again.');\n              }\n            }\n            break;\n          default:\n            Alert.alert('Sign In Error', result.message || 'Failed to sign in. Please try again.');\n        }\n      }\n    } catch (error) {\n      Alert.alert('Network Error', 'Unable to connect to the server. Please check your internet connection and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBack = () => {\n    navigation.goBack();\n  };\n\n  return (\n    <KeyboardAvoidingView \n      style={styles.container} \n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n    >\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        {/* Background Gradient */}\n        <LinearGradient\n          colors={['#1a1a2e', '#16213e', '#0f3460']}\n          style={styles.background}\n        >\n          {/* Header */}\n          <View style={styles.header}>\n            <TouchableOpacity onPress={handleBack} style={styles.backButton}>\n              <Text style={styles.backButtonText}>← Back</Text>\n            </TouchableOpacity>\n          </View>\n\n          {/* Logo */}\n          <View style={styles.logoContainer}>\n            <View style={styles.logo}>\n              <Text style={styles.logoText}>PL</Text>\n            </View>\n            <Text style={styles.logoTitle}>Planet League</Text>\n          </View>\n\n          {/* Social Login Buttons */}\n          <View style={styles.socialContainer}>\n            <TouchableOpacity\n              style={[styles.socialButton, styles.googleButton]}\n              onPress={handleGoogleSignIn}\n              disabled={loading}\n            >\n              <Text style={styles.googleButtonText}>Continue with Google</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={[styles.socialButton, styles.xButton]}\n              onPress={handleXSignIn}\n              disabled={loading}\n            >\n              <Text style={styles.xButtonText}>Continue with X</Text>\n            </TouchableOpacity>\n          </View>\n\n          {/* Divider */}\n          <View style={styles.divider}>\n            <View style={styles.dividerLine} />\n            <Text style={styles.dividerText}>or</Text>\n            <View style={styles.dividerLine} />\n          </View>\n\n          {/* Email/Password Inputs */}\n          <View style={styles.inputContainer}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Email\"\n              placeholderTextColor=\"#888\"\n              value={email}\n              onChangeText={setEmail}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n              editable={!loading}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Password\"\n              placeholderTextColor=\"#888\"\n              value={password}\n              onChangeText={setPassword}\n              secureTextEntry\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n              editable={!loading}\n            />\n          </View>\n\n          {/* Test Account Info */}\n          <View style={styles.testInfo}>\n            <Text style={styles.testInfoText}>Test Account:</Text>\n            <Text style={styles.testInfoText}>Email: test@example.com</Text>\n            <Text style={styles.testInfoText}>Password: password123</Text>\n            <Text style={styles.testInfoText}>Try wrong password: \"wrongpass\"</Text>\n          </View>\n\n          {/* Sign Up/Login Button */}\n          <TouchableOpacity\n            style={styles.primaryButton}\n            onPress={handleEmailSignIn}\n            disabled={loading}\n          >\n            <LinearGradient\n              colors={['#4A90E2', '#357ABD']}\n              style={styles.primaryButtonGradient}\n            >\n              {loading ? (\n                <ActivityIndicator color=\"#FFFFFF\" />\n              ) : (\n                <Text style={styles.primaryButtonText}>Sign Up / Login</Text>\n              )}\n            </LinearGradient>\n          </TouchableOpacity>\n\n          {/* Footer Text */}\n          <Text style={styles.footerText}>\n            By continuing, you agree to our Terms of Service and Privacy Policy\n          </Text>\n        </LinearGradient>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scrollContainer: {\n    flexGrow: 1,\n  },\n  background: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    paddingTop: 60,\n    paddingBottom: 20,\n  },\n  backButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n  },\n  backButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 40,\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    backgroundColor: '#4A90E2',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 16,\n    elevation: 8,\n    shadowColor: '#4A90E2',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  logoText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  logoTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    letterSpacing: 1,\n  },\n  socialContainer: {\n    marginBottom: 30,\n  },\n  socialButton: {\n    paddingVertical: 16,\n    paddingHorizontal: 20,\n    borderRadius: 12,\n    marginBottom: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n  },\n  googleButton: {\n    backgroundColor: '#FFFFFF',\n  },\n  googleButtonText: {\n    color: '#333333',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  xButton: {\n    backgroundColor: '#000000',\n  },\n  xButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  divider: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 30,\n  },\n  dividerLine: {\n    flex: 1,\n    height: 1,\n    backgroundColor: '#444',\n  },\n  dividerText: {\n    color: '#888',\n    fontSize: 14,\n    marginHorizontal: 16,\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  input: {\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: 12,\n    paddingVertical: 16,\n    paddingHorizontal: 20,\n    marginBottom: 12,\n    fontSize: 16,\n    color: '#FFFFFF',\n    borderWidth: 1,\n    borderColor: 'rgba(255, 255, 255, 0.2)',\n  },\n  testInfo: {\n    backgroundColor: 'rgba(74, 144, 226, 0.1)',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(74, 144, 226, 0.3)',\n  },\n  testInfoText: {\n    color: '#4A90E2',\n    fontSize: 12,\n    textAlign: 'center',\n    marginBottom: 2,\n  },\n  primaryButton: {\n    borderRadius: 12,\n    overflow: 'hidden',\n    marginBottom: 20,\n    elevation: 8,\n    shadowColor: '#4A90E2',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  primaryButtonGradient: {\n    paddingVertical: 18,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  primaryButtonText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold',\n    letterSpacing: 1,\n  },\n  footerText: {\n    color: '#888',\n    fontSize: 12,\n    textAlign: 'center',\n    lineHeight: 18,\n    marginBottom: 40,\n  },\n});\n\nexport default LoginScreen; ","// Simulated Username Service\r\n// This mimics Firebase Cloud Functions for username operations\r\n\r\n// Simulated usernames database\r\nlet takenUsernames = [\r\n  'admin',\r\n  'testuser',\r\n  'gamer123',\r\n  'player1',\r\n  'coolguy',\r\n  'proplayer',\r\n  'gamingmaster',\r\n  'planetleague',\r\n  'spacegamer',\r\n  'cosmicplayer'\r\n];\r\n\r\n// Debounce utility function\r\nconst debounce = (func, delay) => {\r\n  let timeoutId;\r\n  return (...args) => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => func.apply(null, args), delay);\r\n  };\r\n};\r\n\r\nexport const usernameService = {\r\n  // Simulate Firebase Cloud Function: checkUsername\r\n  checkUsername: async (username) => {\r\n    // Simulate network delay\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    \r\n    // Username validation rules\r\n    const minLength = 3;\r\n    const maxLength = 20;\r\n    const validChars = /^[a-zA-Z0-9_]+$/;\r\n    \r\n    // Check length\r\n    if (username.length < minLength) {\r\n      return {\r\n        available: false,\r\n        error: `Username must be at least ${minLength} characters long`\r\n      };\r\n    }\r\n    \r\n    if (username.length > maxLength) {\r\n      return {\r\n        available: false,\r\n        error: `Username must be ${maxLength} characters or less`\r\n      };\r\n    }\r\n    \r\n    // Check for valid characters\r\n    if (!validChars.test(username)) {\r\n      return {\r\n        available: false,\r\n        error: 'Username can only contain letters, numbers, and underscores'\r\n      };\r\n    }\r\n    \r\n    // Check if username is taken\r\n    const isTaken = takenUsernames.some(\r\n      taken => taken.toLowerCase() === username.toLowerCase()\r\n    );\r\n    \r\n    if (isTaken) {\r\n      return {\r\n        available: false,\r\n        error: 'Username is already taken'\r\n      };\r\n    }\r\n    \r\n    return {\r\n      available: true,\r\n      error: null\r\n    };\r\n  },\r\n\r\n  // Simulate Firebase Cloud Function: setUsername\r\n  setUsername: async (username, userId) => {\r\n    // Simulate network delay\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // Check if username is still available (race condition protection)\r\n    const availabilityCheck = await usernameService.checkUsername(username);\r\n    if (!availabilityCheck.available) {\r\n      return {\r\n        success: false,\r\n        error: availabilityCheck.error\r\n      };\r\n    }\r\n    \r\n    // Add username to taken list\r\n    takenUsernames.push(username.toLowerCase());\r\n    \r\n    // Here you would typically update the user's Firestore document\r\n    // For now, we'll just return success\r\n    \r\n    return {\r\n      success: true,\r\n      user: {\r\n        id: userId,\r\n        username: username,\r\n        updatedAt: new Date().toISOString()\r\n      }\r\n    };\r\n  },\r\n\r\n  // Create debounced version of checkUsername\r\n  debouncedCheckUsername: debounce(async (username, callback) => {\r\n    if (!username || username.length < 3) {\r\n      callback({ available: false, error: null, loading: false });\r\n      return;\r\n    }\r\n    \r\n    callback({ available: false, error: null, loading: true });\r\n    \r\n    try {\r\n      const result = await usernameService.checkUsername(username);\r\n      callback({ ...result, loading: false });\r\n    } catch (error) {\r\n      callback({ available: false, error: 'Network error', loading: false });\r\n    }\r\n  }, 500), // 500ms debounce delay\r\n\r\n  // Get all taken usernames (for testing)\r\n  getTakenUsernames: () => {\r\n    return [...takenUsernames];\r\n  },\r\n\r\n  // Reset taken usernames (for testing)\r\n  resetTakenUsernames: () => {\r\n    takenUsernames = [\r\n      'admin',\r\n      'testuser',\r\n      'gamer123',\r\n      'player1',\r\n      'coolguy',\r\n      'proplayer',\r\n      'gamingmaster',\r\n      'planetleague',\r\n      'spacegamer',\r\n      'cosmicplayer'\r\n    ];\r\n  }\r\n};\r\n\r\nexport default usernameService; ","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  ActivityIndicator,\n  Animated,\n} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { authService } from '../services/authService';\nimport { usernameService } from '../services/usernameService';\n\nconst UsernameScreen = ({ navigation }) => {\n  const [username, setUsername] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [availability, setAvailability] = useState({\n    available: false,\n    error: null,\n    loading: false\n  });\n  const [fadeAnim] = useState(new Animated.Value(0));\n\n  // Debounced username check\n  const debouncedCheck = useCallback(\n    usernameService.debouncedCheckUsername,\n    []\n  );\n\n  // Handle username input changes\n  const handleUsernameChange = (text) => {\n    setUsername(text);\n    \n    // Clear previous availability state\n    setAvailability({ available: false, error: null, loading: false });\n    \n    // Trigger debounced check\n    debouncedCheck(text, (result) => {\n      setAvailability(result);\n      \n      // Animate the result\n      if (result.loading === false) {\n        Animated.timing(fadeAnim, {\n          toValue: 1,\n          duration: 300,\n          useNativeDriver: true,\n        }).start();\n      }\n    });\n  };\n\n  // Handle confirm button press\n  const handleConfirm = async () => {\n    if (!username.trim()) {\n      Alert.alert('Error', 'Please enter a username');\n      return;\n    }\n\n    if (!availability.available) {\n      Alert.alert('Error', availability.error || 'Please choose a valid username');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const currentUser = authService.getCurrentUser();\n      if (!currentUser) {\n        Alert.alert('Error', 'User session not found');\n        return;\n      }\n\n      // Call the setUsername Cloud Function\n      const result = await usernameService.setUsername(username.trim(), currentUser.id);\n      \n      if (result.success) {\n        // Update the user's username in our auth service\n        await authService.updateUsername(username.trim());\n        \n        // Navigate to MainApp\n        navigation.navigate('MainApp');\n      } else {\n        Alert.alert('Error', result.error || 'Failed to set username');\n      }\n    } catch (error) {\n      Alert.alert('Error', 'Something went wrong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset animation when username changes\n  useEffect(() => {\n    fadeAnim.setValue(0);\n  }, [username, fadeAnim]);\n\n  // Render availability indicator\n  const renderAvailabilityIndicator = () => {\n    if (availability.loading) {\n      return (\n        <View style={styles.indicator}>\n          <ActivityIndicator size=\"small\" color=\"#4A90E2\" />\n        </View>\n      );\n    }\n\n    if (username.length >= 3) {\n      if (availability.available) {\n        return (\n          <Animated.View style={[styles.indicator, { opacity: fadeAnim }]}>\n            <Text style={styles.checkmark}>✓</Text>\n          </Animated.View>\n        );\n      } else if (availability.error) {\n        return (\n          <Animated.View style={[styles.indicator, { opacity: fadeAnim }]}>\n            <Text style={styles.xmark}>✗</Text>\n          </Animated.View>\n        );\n      }\n    }\n\n    return null;\n  };\n\n  // Render error message\n  const renderErrorMessage = () => {\n    if (availability.error && username.length >= 3) {\n      return (\n        <Animated.Text style={[styles.errorText, { opacity: fadeAnim }]}>\n          {availability.error}\n        </Animated.Text>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <View style={styles.container}>\n      <LinearGradient\n        colors={['#1a1a2e', '#16213e', '#0f3460']}\n        style={styles.background}\n      >\n        <View style={styles.content}>\n          <Text style={styles.title}>Choose Your Username</Text>\n          <Text style={styles.subtitle}>\n            This will be your display name in Planet League\n          </Text>\n          \n          <View style={styles.inputContainer}>\n            <View style={styles.inputWrapper}>\n              <TextInput\n                style={[\n                  styles.input,\n                  availability.available && styles.inputSuccess,\n                  availability.error && styles.inputError\n                ]}\n                placeholder=\"Enter username\"\n                placeholderTextColor=\"#888\"\n                value={username}\n                onChangeText={handleUsernameChange}\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n                maxLength={20}\n                autoFocus\n              />\n              {renderAvailabilityIndicator()}\n            </View>\n            {renderErrorMessage()}\n          </View>\n\n          {/* Test Info */}\n          <View style={styles.testInfo}>\n            <Text style={styles.testInfoText}>Test usernames:</Text>\n            <Text style={styles.testInfoText}>Available: \"newuser\", \"gamer2024\"</Text>\n            <Text style={styles.testInfoText}>Taken: \"testuser\", \"admin\", \"gamer123\"</Text>\n          </View>\n          \n          <TouchableOpacity\n            style={[\n              styles.button,\n              (!availability.available || loading) && styles.buttonDisabled\n            ]}\n            onPress={handleConfirm}\n            disabled={!availability.available || loading}\n          >\n            <LinearGradient\n              colors={availability.available ? ['#4A90E2', '#357ABD'] : ['#666', '#555']}\n              style={styles.buttonGradient}\n            >\n              {loading ? (\n                <ActivityIndicator color=\"#FFFFFF\" />\n              ) : (\n                <Text style={styles.buttonText}>Confirm</Text>\n              )}\n            </LinearGradient>\n          </TouchableOpacity>\n        </View>\n      </LinearGradient>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  background: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n  },\n  content: {\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 12,\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#CCCCCC',\n    marginBottom: 40,\n    textAlign: 'center',\n    lineHeight: 24,\n  },\n  inputContainer: {\n    width: '100%',\n    marginBottom: 20,\n  },\n  inputWrapper: {\n    position: 'relative',\n    width: '100%',\n  },\n  input: {\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: 12,\n    paddingVertical: 16,\n    paddingHorizontal: 20,\n    paddingRight: 50, // Space for indicator\n    fontSize: 16,\n    color: '#FFFFFF',\n    borderWidth: 1,\n    borderColor: 'rgba(255, 255, 255, 0.2)',\n    width: '100%',\n    textAlign: 'center',\n  },\n  inputSuccess: {\n    borderColor: '#4CAF50',\n    backgroundColor: 'rgba(76, 175, 80, 0.1)',\n  },\n  inputError: {\n    borderColor: '#F44336',\n    backgroundColor: 'rgba(244, 67, 54, 0.1)',\n  },\n  indicator: {\n    position: 'absolute',\n    right: 15,\n    top: '50%',\n    transform: [{ translateY: -10 }],\n    width: 20,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  checkmark: {\n    color: '#4CAF50',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  xmark: {\n    color: '#F44336',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  errorText: {\n    color: '#F44336',\n    fontSize: 12,\n    textAlign: 'center',\n    marginTop: 8,\n    paddingHorizontal: 10,\n  },\n  testInfo: {\n    backgroundColor: 'rgba(74, 144, 226, 0.1)',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 30,\n    borderWidth: 1,\n    borderColor: 'rgba(74, 144, 226, 0.3)',\n    width: '100%',\n  },\n  testInfoText: {\n    color: '#4A90E2',\n    fontSize: 12,\n    textAlign: 'center',\n    marginBottom: 2,\n  },\n  button: {\n    borderRadius: 12,\n    overflow: 'hidden',\n    width: '100%',\n    elevation: 8,\n    shadowColor: '#4A90E2',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  buttonDisabled: {\n    elevation: 0,\n    shadowOpacity: 0,\n  },\n  buttonGradient: {\n    paddingVertical: 18,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold',\n    letterSpacing: 1,\n  },\n});\n\nexport default UsernameScreen; ","import React from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst OnboardingScreen = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <LinearGradient\n        colors={['#1a1a2e', '#16213e', '#0f3460']}\n        style={styles.background}\n      >\n        <View style={styles.content}>\n          <Text style={styles.title}>Welcome to Planet League!</Text>\n          <Text style={styles.subtitle}>\n            Your journey to becoming a gaming legend starts here.\n          </Text>\n          \n          <View style={styles.featuresContainer}>\n            <Text style={styles.featureText}>🎮 Play hundreds of fun games</Text>\n            <Text style={styles.featureText}>💎 Earn Elements and Stickers</Text>\n            <Text style={styles.featureText}>⚒️ Craft crypto tokens</Text>\n            <Text style={styles.featureText}>🏪 Trade with other players</Text>\n          </View>\n          \n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => navigation.navigate('MainApp')}\n          >\n            <LinearGradient\n              colors={['#4A90E2', '#357ABD']}\n              style={styles.buttonGradient}\n            >\n              <Text style={styles.buttonText}>Start Your Adventure</Text>\n            </LinearGradient>\n          </TouchableOpacity>\n        </View>\n      </LinearGradient>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  background: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n  },\n  content: {\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#CCCCCC',\n    marginBottom: 40,\n    textAlign: 'center',\n    lineHeight: 24,\n  },\n  featuresContainer: {\n    marginBottom: 50,\n    alignItems: 'center',\n  },\n  featureText: {\n    fontSize: 16,\n    color: '#FFFFFF',\n    marginBottom: 12,\n    textAlign: 'center',\n  },\n  button: {\n    borderRadius: 12,\n    overflow: 'hidden',\n    width: '100%',\n    elevation: 8,\n    shadowColor: '#4A90E2',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  buttonGradient: {\n    paddingVertical: 18,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold',\n    letterSpacing: 1,\n  },\n});\n\nexport default OnboardingScreen; ","// Simulated Firestore Service\r\n// This mimics Firestore behavior for development/testing\r\n\r\n// Simulated data\r\nlet userData = {\r\n  id: '1',\r\n  username: 'CosmicExplorer',\r\n  level: 15,\r\n  xp: 1250,\r\n  pltBalance: 1250,\r\n  profileIcon: '👨‍🚀',\r\n  gamesPlayed: 47,\r\n  stickersCollected: 23,\r\n  achievements: 8,\r\n};\r\n\r\nlet featuredContent = [\r\n  {\r\n    id: '1',\r\n    title: 'Space Runner Challenge',\r\n    description: 'Navigate through asteroid fields and collect cosmic rewards',\r\n    icon: '🚀',\r\n    reward: '50 PLT',\r\n    gradient: ['#4A90E2', '#357ABD'],\r\n    badge: 'FEATURED',\r\n    duration: '5 min',\r\n    players: '1-4',\r\n    active: true,\r\n    priority: 1,\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Planet Defender Tournament',\r\n    description: 'Protect your homeworld from alien invaders',\r\n    icon: '🛡️',\r\n    reward: '75 PLT',\r\n    gradient: ['#E74C3C', '#C0392B'],\r\n    badge: 'TOURNAMENT',\r\n    duration: '10 min',\r\n    players: '2-8',\r\n    active: true,\r\n    priority: 2,\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Stellar Puzzle Master',\r\n    description: 'Solve cosmic puzzles to unlock rare stickers',\r\n    icon: '🧩',\r\n    reward: '100 PLT',\r\n    gradient: ['#9B59B6', '#8E44AD'],\r\n    badge: 'NEW',\r\n    duration: '15 min',\r\n    players: '1',\r\n    active: true,\r\n    priority: 3,\r\n  },\r\n];\r\n\r\nlet userQuests = [\r\n  {\r\n    id: '1',\r\n    userId: '1',\r\n    title: 'First Steps',\r\n    description: 'Complete your first game',\r\n    icon: '👣',\r\n    progress: 1,\r\n    target: 1,\r\n    reward: 25,\r\n    status: 'completed',\r\n    createdAt: '2024-01-15T00:00:00Z',\r\n  },\r\n  {\r\n    id: '2',\r\n    userId: '1',\r\n    title: 'Sticker Collector',\r\n    description: 'Collect 10 different stickers',\r\n    icon: '📱',\r\n    progress: 7,\r\n    target: 10,\r\n    reward: 50,\r\n    status: 'active',\r\n    createdAt: '2024-01-20T00:00:00Z',\r\n  },\r\n  {\r\n    id: '3',\r\n    userId: '1',\r\n    title: 'Craft Master',\r\n    description: 'Craft your first epic sticker',\r\n    icon: '⚒️',\r\n    progress: 0,\r\n    target: 1,\r\n    reward: 100,\r\n    status: 'active',\r\n    createdAt: '2024-01-25T00:00:00Z',\r\n  },\r\n];\r\n\r\nlet featuredGames = [\r\n  {\r\n    id: '1',\r\n    title: 'Space Runner',\r\n    description: 'Navigate through asteroid fields',\r\n    icon: '🚀',\r\n    reward: '50 PLT',\r\n    duration: '5 min',\r\n    players: '1-4',\r\n    featured: true,\r\n    active: true,\r\n    popularity: 95,\r\n    gradient: ['#2c3e50', '#34495e'],\r\n    isNew: false,\r\n    isPopular: true,\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Planet Defender',\r\n    description: 'Protect your homeworld',\r\n    icon: '🛡️',\r\n    reward: '75 PLT',\r\n    duration: '10 min',\r\n    players: '2-8',\r\n    featured: true,\r\n    active: true,\r\n    popularity: 88,\r\n    gradient: ['#e74c3c', '#c0392b'],\r\n    isNew: false,\r\n    isPopular: true,\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Stellar Puzzle',\r\n    description: 'Solve cosmic puzzles',\r\n    icon: '🧩',\r\n    reward: '100 PLT',\r\n    duration: '15 min',\r\n    players: '1',\r\n    featured: true,\r\n    active: true,\r\n    popularity: 92,\r\n    gradient: ['#9b59b6', '#8e44ad'],\r\n    isNew: true,\r\n    isPopular: false,\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Galaxy Racing',\r\n    description: 'Race through nebulas',\r\n    icon: '🏎️',\r\n    reward: '60 PLT',\r\n    duration: '8 min',\r\n    players: '1-6',\r\n    featured: true,\r\n    active: true,\r\n    popularity: 85,\r\n    gradient: ['#f39c12', '#e67e22'],\r\n    isNew: false,\r\n    isPopular: false,\r\n  },\r\n];\r\n\r\nclass FirestoreService {\r\n  // Get user data in real-time (simulated)\r\n  subscribeToUserData(userId, callback) {\r\n    if (!userId) {\r\n      console.warn('No userId provided for user data subscription');\r\n      return () => {};\r\n    }\r\n\r\n    // Simulate real-time updates\r\n    const interval = setInterval(() => {\r\n      callback(userData);\r\n    }, 100);\r\n\r\n    return () => clearInterval(interval);\r\n  }\r\n\r\n  // Get featured content in real-time (simulated)\r\n  subscribeToFeaturedContent(callback) {\r\n    // Simulate real-time updates\r\n    const interval = setInterval(() => {\r\n      callback(featuredContent);\r\n    }, 100);\r\n\r\n    return () => clearInterval(interval);\r\n  }\r\n\r\n  // Get user quests in real-time (simulated)\r\n  subscribeToUserQuests(userId, callback) {\r\n    if (!userId) {\r\n      console.warn('No userId provided for quests subscription');\r\n      return () => {};\r\n    }\r\n\r\n    // Simulate real-time updates\r\n    const interval = setInterval(() => {\r\n      callback(userQuests);\r\n    }, 100);\r\n\r\n    return () => clearInterval(interval);\r\n  }\r\n\r\n  // Get featured games in real-time (simulated)\r\n  subscribeToFeaturedGames(callback) {\r\n    // Simulate real-time updates\r\n    const interval = setInterval(() => {\r\n      callback(featuredGames);\r\n    }, 100);\r\n\r\n    return () => clearInterval(interval);\r\n  }\r\n\r\n  // Get all games (simulated)\r\n  subscribeToAllGames(callback) {\r\n    // Simulate real-time updates\r\n    const interval = setInterval(() => {\r\n      callback(featuredGames);\r\n    }, 100);\r\n\r\n    return () => clearInterval(interval);\r\n  }\r\n\r\n  // Get all quests for a user (simulated)\r\n  subscribeToAllQuests(userId, callback) {\r\n    if (!userId) {\r\n      console.warn('No userId provided for all quests subscription');\r\n      return () => {};\r\n    }\r\n\r\n    // Simulate real-time updates\r\n    const interval = setInterval(() => {\r\n      callback(userQuests);\r\n    }, 100);\r\n\r\n    return () => clearInterval(interval);\r\n  }\r\n\r\n  // Update user data (simulated)\r\n  async updateUserData(userId, updates) {\r\n    try {\r\n      // Simulate network delay\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // Update user data\r\n      userData = { ...userData, ...updates };\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Error updating user data:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  }\r\n\r\n  // Complete a quest (simulated)\r\n  async completeQuest(questId, userId) {\r\n    try {\r\n      // Simulate network delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Find the quest\r\n      const questIndex = userQuests.findIndex(q => q.id === questId);\r\n      if (questIndex === -1) {\r\n        throw new Error('Quest not found');\r\n      }\r\n\r\n      const quest = userQuests[questIndex];\r\n      \r\n      // Update quest status\r\n      userQuests[questIndex] = {\r\n        ...quest,\r\n        status: 'completed',\r\n        progress: quest.target,\r\n        completedAt: new Date().toISOString(),\r\n      };\r\n      \r\n      // Update user XP and PLT\r\n      userData.xp += quest.reward;\r\n      userData.pltBalance += quest.reward;\r\n      userData.level = Math.floor(userData.xp / 1000) + 1;\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Error completing quest:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  }\r\n\r\n  // Crafting functions\r\n  async getCraftingPreview(elementIds) {\r\n    try {\r\n      // For now, simulate the Cloud Function call\r\n      // In production, this would call the actual Cloud Function\r\n      const filledSlots = elementIds;\r\n      \r\n      if (filledSlots.length === 0) {\r\n        return { success: true, preview: null };\r\n      }\r\n\r\n      // Simulated preview logic\r\n      const elementTypes = filledSlots;\r\n      const uniqueElements = [...new Set(elementTypes)];\r\n      \r\n      if (uniqueElements.length === 2 && elementTypes.length === 2) {\r\n        const combinations = {\r\n          'fire,water': { name: 'Steam Element', icon: '💨', rarity: 'Rare', successRate: 0.8, reward: 50 },\r\n          'fire,earth': { name: 'Lava Element', icon: '🌋', rarity: 'Rare', successRate: 0.7, reward: 60 },\r\n          'water,earth': { name: 'Mud Element', icon: '🌊', rarity: 'Common', successRate: 0.9, reward: 30 },\r\n          'air,fire': { name: 'Flame Element', icon: '🔥', rarity: 'Rare', successRate: 0.75, reward: 55 },\r\n          'lightning,water': { name: 'Storm Element', icon: '⛈️', rarity: 'Epic', successRate: 0.6, reward: 100 },\r\n          'ice,fire': { name: 'Steam Element', icon: '💨', rarity: 'Rare', successRate: 0.8, reward: 50 },\r\n        };\r\n        \r\n        const key = elementTypes.sort().join(',');\r\n        const preview = combinations[key];\r\n        \r\n        if (preview) {\r\n          return {\r\n            success: true,\r\n            preview: {\r\n              ...preview,\r\n              elements: filledSlots,\r\n            }\r\n          };\r\n        } else {\r\n          return {\r\n            success: true,\r\n            preview: {\r\n              name: 'Unknown Combination',\r\n              icon: '❓',\r\n              rarity: 'Unknown',\r\n              successRate: 0.3,\r\n              reward: 10,\r\n              elements: filledSlots,\r\n            }\r\n          };\r\n        }\r\n      } else if (uniqueElements.length === 3 && elementTypes.length === 3) {\r\n        return {\r\n          success: true,\r\n          preview: {\r\n            name: 'Complex Element',\r\n            icon: '🌟',\r\n            rarity: 'Epic',\r\n            successRate: 0.5,\r\n            reward: 150,\r\n            elements: filledSlots,\r\n          }\r\n        };\r\n      } else {\r\n        return {\r\n          success: true,\r\n          preview: {\r\n            name: 'Mixed Elements',\r\n            icon: '🌀',\r\n            rarity: 'Common',\r\n            successRate: 0.4,\r\n            reward: 20,\r\n            elements: filledSlots,\r\n          }\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting crafting preview:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  }\r\n\r\n  async performCraft(elementIds) {\r\n    try {\r\n      // For now, simulate the Cloud Function call\r\n      // In production, this would call the actual Cloud Function\r\n      \r\n      // Simulate crafting success/failure\r\n      const isSuccess = Math.random() < 0.7; // 70% success rate for demo\r\n      const reward = isSuccess ? Math.floor(Math.random() * 100) + 20 : 0;\r\n      \r\n      // Simulate delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      if (isSuccess) {\r\n        return {\r\n          success: true,\r\n          reward: reward,\r\n          message: `Crafting successful! You earned ${reward} $PLT!`\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          reward: 0,\r\n          message: 'Crafting failed! Elements were consumed.'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error performing craft:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  }\r\n\r\n  // Get user elements from Firestore\r\n  subscribeToUserElements(userId, callback) {\r\n    if (!userId) {\r\n      console.warn('No userId provided for user elements subscription');\r\n      return null;\r\n    }\r\n\r\n    // For now, simulate user elements data with a good variety for testing\r\n    const simulatedElements = [\r\n      { id: 'fire', name: 'Fire Element', icon: '🔥', rarity: 'Common', count: 8 },\r\n      { id: 'water', name: 'Water Element', icon: '💧', rarity: 'Common', count: 6 },\r\n      { id: 'earth', name: 'Earth Element', icon: '🌍', rarity: 'Common', count: 7 },\r\n      { id: 'air', name: 'Air Element', icon: '💨', rarity: 'Common', count: 5 },\r\n      { id: 'lightning', name: 'Lightning Element', icon: '⚡', rarity: 'Rare', count: 3 },\r\n      { id: 'ice', name: 'Ice Element', icon: '❄️', rarity: 'Rare', count: 4 },\r\n      { id: 'shadow', name: 'Shadow Element', icon: '🌑', rarity: 'Epic', count: 2 },\r\n      { id: 'light', name: 'Light Element', icon: '✨', rarity: 'Epic', count: 2 },\r\n    ];\r\n    \r\n    // Simulate real-time updates\r\n    const interval = setInterval(() => {\r\n      callback(simulatedElements);\r\n    }, 100);\r\n\r\n    return () => clearInterval(interval);\r\n  }\r\n}\r\n\r\nexport const firestoreService = new FirestoreService(); ","// Shared data service for leaderboard and tournaments\r\n// This ensures data consistency between hub widgets and individual screens\r\n\r\n// Simulated global leaderboard data\r\nconst GLOBAL_LEADERBOARD_DATA = [\r\n  { id: '1', rank: 1, username: 'ProGamer123', totalScore: 15420, level: 25, gamesPlayed: 156, profileIcon: '👑', winRate: 78 },\r\n  { id: '2', rank: 2, username: 'SpaceWarrior', totalScore: 12850, level: 22, gamesPlayed: 134, profileIcon: '🚀', winRate: 72 },\r\n  { id: '3', rank: 3, username: 'GalacticHero', totalScore: 11230, level: 20, gamesPlayed: 98, profileIcon: '⭐', winRate: 68 },\r\n  { id: '4', rank: 4, username: 'CosmicExplorer', totalScore: 9870, level: 18, gamesPlayed: 87, profileIcon: '🌌', winRate: 65 },\r\n  { id: '5', rank: 5, username: 'NebulaGuardian', totalScore: 8450, level: 16, gamesPlayed: 76, profileIcon: '🛡️', winRate: 61 },\r\n  { id: '6', rank: 6, username: 'QuantumWizard', totalScore: 7230, level: 15, gamesPlayed: 65, profileIcon: '🔮', winRate: 58 },\r\n  { id: '7', rank: 7, username: 'StellarDragon', totalScore: 6540, level: 14, gamesPlayed: 58, profileIcon: '🐉', winRate: 55 },\r\n  { id: '8', rank: 8, username: 'MeteorMiner', totalScore: 5890, level: 13, gamesPlayed: 52, profileIcon: '⛏️', winRate: 52 },\r\n  { id: '9', rank: 9, username: 'AlienBotanist', totalScore: 5340, level: 12, gamesPlayed: 47, profileIcon: '🌱', winRate: 49 },\r\n  { id: '10', rank: 10, username: 'RocketPup', totalScore: 4870, level: 11, gamesPlayed: 43, profileIcon: '🐕', winRate: 46 },\r\n  { id: '11', rank: 11, username: 'AstroCat', totalScore: 4450, level: 10, gamesPlayed: 39, profileIcon: '🐱', winRate: 43 },\r\n  { id: '12', rank: 12, username: 'CosmicRacer', totalScore: 4080, level: 9, gamesPlayed: 36, profileIcon: '🏎️', winRate: 40 },\r\n  { id: '13', rank: 13, username: 'NebulaPilot', totalScore: 3740, level: 8, gamesPlayed: 33, profileIcon: '✈️', winRate: 37 },\r\n  { id: '14', rank: 14, username: 'StellarKnight', totalScore: 3420, level: 7, gamesPlayed: 30, profileIcon: '⚔️', winRate: 34 },\r\n  { id: '15', rank: 15, username: 'QuantumMage', totalScore: 3120, level: 6, gamesPlayed: 28, profileIcon: '🧙‍♂️', winRate: 31 },\r\n];\r\n\r\n// Simulated tournaments data\r\nconst TOURNAMENTS_DATA = [\r\n  {\r\n    id: 't1',\r\n    name: 'Galactic Championship',\r\n    game: 'Space Warriors',\r\n    prizePool: 5000,\r\n    entryFee: 50,\r\n    status: 'active',\r\n    maxParticipants: 100,\r\n    currentParticipants: 67,\r\n    startDate: new Date(),\r\n    endDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\r\n    description: 'The ultimate space combat championship! Compete against the best pilots in the galaxy.',\r\n    rewards: {\r\n      first: 2500,\r\n      second: 1500,\r\n      third: 1000\r\n    }\r\n  },\r\n  {\r\n    id: 't2',\r\n    name: 'Cosmic Rumble',\r\n    game: 'Nebula Fighters',\r\n    prizePool: 3000,\r\n    entryFee: 25,\r\n    status: 'upcoming',\r\n    maxParticipants: 64,\r\n    currentParticipants: 23,\r\n    startDate: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000),\r\n    endDate: new Date(Date.now() + 9 * 24 * 60 * 60 * 1000),\r\n    description: 'A fierce battle in the nebula! Only the strongest fighters will survive.',\r\n    rewards: {\r\n      first: 1500,\r\n      second: 900,\r\n      third: 600\r\n    }\r\n  },\r\n  {\r\n    id: 't3',\r\n    name: 'Stellar Showdown',\r\n    game: 'Quantum Quest',\r\n    prizePool: 7500,\r\n    entryFee: 100,\r\n    status: 'upcoming',\r\n    maxParticipants: 32,\r\n    currentParticipants: 8,\r\n    startDate: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\r\n    endDate: new Date(Date.now() + 12 * 24 * 60 * 60 * 1000),\r\n    description: 'The most prestigious tournament in the universe! Elite players only.',\r\n    rewards: {\r\n      first: 3750,\r\n      second: 2250,\r\n      third: 1500\r\n    }\r\n  },\r\n  {\r\n    id: 't4',\r\n    name: 'Meteor Madness',\r\n    game: 'Asteroid Miner',\r\n    prizePool: 1500,\r\n    entryFee: 10,\r\n    status: 'active',\r\n    maxParticipants: 50,\r\n    currentParticipants: 34,\r\n    startDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),\r\n    endDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),\r\n    description: 'Mine your way to victory! Collect the most valuable asteroids.',\r\n    rewards: {\r\n      first: 750,\r\n      second: 450,\r\n      third: 300\r\n    }\r\n  },\r\n  {\r\n    id: 't5',\r\n    name: 'Alien Invasion',\r\n    game: 'Space Defenders',\r\n    prizePool: 2000,\r\n    entryFee: 15,\r\n    status: 'upcoming',\r\n    maxParticipants: 80,\r\n    currentParticipants: 12,\r\n    startDate: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),\r\n    endDate: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000),\r\n    description: 'Defend Earth from alien invaders! Team up with other defenders.',\r\n    rewards: {\r\n      first: 1000,\r\n      second: 600,\r\n      third: 400\r\n    }\r\n  },\r\n  {\r\n    id: 't6',\r\n    name: 'Quantum Racing',\r\n    game: 'Hyper Speed',\r\n    prizePool: 4000,\r\n    entryFee: 30,\r\n    status: 'upcoming',\r\n    maxParticipants: 40,\r\n    currentParticipants: 5,\r\n    startDate: new Date(Date.now() + 4 * 24 * 60 * 60 * 1000),\r\n    endDate: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000),\r\n    description: 'Race through quantum tunnels at impossible speeds!',\r\n    rewards: {\r\n      first: 2000,\r\n      second: 1200,\r\n      third: 800\r\n    }\r\n  }\r\n];\r\n\r\nclass LeaderboardService {\r\n  // Get top 5 players for hub widget\r\n  getTopLeaderboard() {\r\n    return GLOBAL_LEADERBOARD_DATA.slice(0, 5);\r\n  }\r\n\r\n  // Get full leaderboard for leaderboard screen\r\n  getFullLeaderboard() {\r\n    return GLOBAL_LEADERBOARD_DATA;\r\n  }\r\n\r\n  // Get user rank (simulated)\r\n  getUserRank(userId) {\r\n    // Simulate user rank - in real app this would be calculated from Firestore\r\n    const userInLeaderboard = GLOBAL_LEADERBOARD_DATA.find(player => player.id === userId);\r\n    return userInLeaderboard ? userInLeaderboard.rank : 42; // Default rank if not in top 15\r\n  }\r\n\r\n  // Get active tournaments for hub widget\r\n  getActiveTournaments() {\r\n    return TOURNAMENTS_DATA.filter(t => t.status === 'active');\r\n  }\r\n\r\n  // Get upcoming tournaments for hub widget\r\n  getUpcomingTournaments() {\r\n    return TOURNAMENTS_DATA.filter(t => t.status === 'upcoming');\r\n  }\r\n\r\n  // Get all tournaments for tournaments screen\r\n  getAllTournaments() {\r\n    return TOURNAMENTS_DATA;\r\n  }\r\n\r\n  // Get tournaments for hub widget (mix of active and upcoming)\r\n  getTournamentsForHub() {\r\n    const active = this.getActiveTournaments();\r\n    const upcoming = this.getUpcomingTournaments();\r\n    return [...active, ...upcoming].slice(0, 3);\r\n  }\r\n\r\n  // Get tournament by ID\r\n  getTournamentById(tournamentId) {\r\n    return TOURNAMENTS_DATA.find(t => t.id === tournamentId);\r\n  }\r\n\r\n  // Simulate tournament entry\r\n  async enterTournament(tournamentId, userId) {\r\n    const tournament = this.getTournamentById(tournamentId);\r\n    if (!tournament) {\r\n      throw new Error('Tournament not found');\r\n    }\r\n\r\n    if (tournament.currentParticipants >= tournament.maxParticipants) {\r\n      throw new Error('Tournament is full');\r\n    }\r\n\r\n    // In real app, this would update Firestore\r\n    // For now, just simulate success\r\n    return { success: true, message: `Successfully entered ${tournament.name}` };\r\n  }\r\n}\r\n\r\nexport default new LeaderboardService(); ","import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst TopBar = ({ userData, onProfilePress }) => {\r\n  const navigation = useNavigation();\r\n  const { username, level = 1, xp = 0, pltBalance = 0, profileIcon = '👨‍🚀' } = userData || {};\r\n  \r\n  // Calculate XP progress (assuming 1000 XP per level)\r\n  const xpPerLevel = 1000;\r\n  const currentLevelXp = xp % xpPerLevel;\r\n  const xpProgress = (currentLevelXp / xpPerLevel) * 100;\r\n\r\n  const handleWalletPress = () => {\r\n    navigation.navigate('WalletScreen');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* User Profile Section */}\r\n      <TouchableOpacity style={styles.profileSection} onPress={onProfilePress}>\r\n        <View style={styles.profileIcon}>\r\n          <Text style={styles.profileIconText}>{profileIcon}</Text>\r\n        </View>\r\n        <View style={styles.userInfo}>\r\n          <Text style={styles.username}>{username || 'Player'}</Text>\r\n          <Text style={styles.level}>Level {level}</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      {/* XP Bar */}\r\n      <View style={styles.xpSection}>\r\n        <View style={styles.xpBarContainer}>\r\n          <View style={styles.xpBar}>\r\n            <View \r\n              style={[\r\n                styles.xpBarFill,\r\n                { width: `${xpProgress}%` }\r\n              ]}\r\n            />\r\n          </View>\r\n          <Text style={styles.xpText}>{currentLevelXp}/{xpPerLevel} XP</Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* PLT Balance - Now Clickable */}\r\n      <TouchableOpacity style={styles.pltSection} onPress={handleWalletPress}>\r\n        <View style={styles.pltContainer}>\r\n          <Text style={styles.pltIcon}>💎</Text>\r\n          <Text style={styles.pltAmount}>{pltBalance.toLocaleString()}</Text>\r\n          <Text style={styles.pltLabel}>PLT</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 16,\r\n    backgroundColor: '#1a1a1a',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#333333',\r\n  },\r\n  profileSection: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n  },\r\n  profileIcon: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: '#333333',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginRight: 12,\r\n  },\r\n  profileIconText: {\r\n    fontSize: 20,\r\n  },\r\n  userInfo: {\r\n    flex: 1,\r\n  },\r\n  username: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 2,\r\n  },\r\n  level: {\r\n    fontSize: 12,\r\n    color: '#00ff88',\r\n    fontWeight: '600',\r\n  },\r\n  xpSection: {\r\n    flex: 2,\r\n    marginHorizontal: 16,\r\n  },\r\n  xpBarContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  xpBar: {\r\n    width: '100%',\r\n    height: 6,\r\n    backgroundColor: '#333333',\r\n    borderRadius: 3,\r\n    marginBottom: 4,\r\n    overflow: 'hidden',\r\n  },\r\n  xpBarFill: {\r\n    height: '100%',\r\n    backgroundColor: '#00ff88',\r\n    borderRadius: 3,\r\n  },\r\n  xpText: {\r\n    fontSize: 10,\r\n    color: '#888888',\r\n    fontWeight: '500',\r\n  },\r\n  pltSection: {\r\n    alignItems: 'flex-end',\r\n  },\r\n  pltContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  pltIcon: {\r\n    fontSize: 16,\r\n    marginBottom: 2,\r\n  },\r\n  pltAmount: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: '#00ff88',\r\n    marginBottom: 1,\r\n  },\r\n  pltLabel: {\r\n    fontSize: 10,\r\n    color: '#888888',\r\n    fontWeight: '500',\r\n  },\r\n});\r\n\r\nexport default TopBar; ","import React, { useState, useRef } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Image,\r\n} from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst { width: screenWidth } = Dimensions.get('window');\r\nconst cardWidth = screenWidth * 0.85;\r\nconst cardSpacing = 16;\r\n\r\nconst FeaturedCarousel = ({ featuredContent = [], onItemPress }) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const scrollViewRef = useRef(null);\r\n\r\n  const handleScroll = (event) => {\r\n    const scrollPosition = event.nativeEvent.contentOffset.x;\r\n    const index = Math.round(scrollPosition / (cardWidth + cardSpacing));\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  const scrollToIndex = (index) => {\r\n    scrollViewRef.current?.scrollTo({\r\n      x: index * (cardWidth + cardSpacing),\r\n      animated: true,\r\n    });\r\n  };\r\n\r\n  const renderFeaturedItem = (item, index) => (\r\n    <TouchableOpacity\r\n      key={item.id}\r\n      style={styles.carouselItem}\r\n      onPress={() => onItemPress?.(item)}\r\n    >\r\n      <View style={styles.cardContainer}>\r\n        <LinearGradient\r\n          colors={item.gradient || ['#4A90E2', '#357ABD']}\r\n          style={styles.cardGradient}\r\n        >\r\n          <View style={styles.cardContent}>\r\n            <View style={styles.cardHeader}>\r\n              <Text style={styles.cardBadge}>{item.badge || 'FEATURED'}</Text>\r\n              <Text style={styles.cardReward}>{item.reward || '50 PLT'}</Text>\r\n            </View>\r\n            \r\n            <View style={styles.cardMain}>\r\n              <Text style={styles.cardIcon}>{item.icon || '🎮'}</Text>\r\n              <Text style={styles.cardTitle}>{item.title}</Text>\r\n              <Text style={styles.cardDescription}>{item.description}</Text>\r\n            </View>\r\n\r\n            <View style={styles.cardFooter}>\r\n              <View style={styles.cardStats}>\r\n                <Text style={styles.statText}>⏱️ {item.duration || '5 min'}</Text>\r\n                <Text style={styles.statText}>👥 {item.players || '1-4'}</Text>\r\n              </View>\r\n              <View style={styles.playButton}>\r\n                <Text style={styles.playButtonText}>PLAY NOW</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const renderPagination = () => (\r\n    <View style={styles.pagination}>\r\n      {featuredContent.map((_, index) => (\r\n        <TouchableOpacity\r\n          key={index}\r\n          style={[\r\n            styles.paginationDot,\r\n            index === activeIndex && styles.paginationDotActive,\r\n          ]}\r\n          onPress={() => scrollToIndex(index)}\r\n        />\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n  if (featuredContent.length === 0) {\r\n    return (\r\n      <View style={styles.emptyContainer}>\r\n        <Text style={styles.emptyText}>No featured content available</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Featured</Text>\r\n        <TouchableOpacity>\r\n          <Text style={styles.seeAllText}>See All</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      \r\n      <ScrollView\r\n        ref={scrollViewRef}\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        contentContainerStyle={styles.scrollContent}\r\n        onScroll={handleScroll}\r\n        scrollEventThrottle={16}\r\n        decelerationRate=\"fast\"\r\n        snapToInterval={cardWidth + cardSpacing}\r\n        snapToAlignment=\"center\"\r\n      >\r\n        {featuredContent.map(renderFeaturedItem)}\r\n      </ScrollView>\r\n      \r\n      {renderPagination()}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 20,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n  },\r\n  seeAllText: {\r\n    fontSize: 14,\r\n    color: '#00ff88',\r\n    fontWeight: '600',\r\n  },\r\n  scrollContent: {\r\n    paddingHorizontal: 20,\r\n  },\r\n  carouselItem: {\r\n    width: cardWidth,\r\n    marginRight: cardSpacing,\r\n  },\r\n  cardContainer: {\r\n    borderRadius: 16,\r\n    overflow: 'hidden',\r\n    elevation: 8,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 4 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 8,\r\n  },\r\n  cardGradient: {\r\n    padding: 20,\r\n    minHeight: 200,\r\n  },\r\n  cardContent: {\r\n    flex: 1,\r\n  },\r\n  cardHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  cardBadge: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 4,\r\n    borderRadius: 12,\r\n  },\r\n  cardReward: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    color: '#00ff88',\r\n  },\r\n  cardMain: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  cardIcon: {\r\n    fontSize: 48,\r\n    marginBottom: 12,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  cardDescription: {\r\n    fontSize: 14,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    opacity: 0.9,\r\n    lineHeight: 20,\r\n  },\r\n  cardFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  cardStats: {\r\n    flexDirection: 'row',\r\n    gap: 12,\r\n  },\r\n  statText: {\r\n    fontSize: 12,\r\n    color: '#ffffff',\r\n    opacity: 0.8,\r\n  },\r\n  playButton: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 20,\r\n  },\r\n  playButtonText: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n  },\r\n  pagination: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 16,\r\n    gap: 8,\r\n  },\r\n  paginationDot: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: 4,\r\n    backgroundColor: '#333333',\r\n  },\r\n  paginationDotActive: {\r\n    backgroundColor: '#00ff88',\r\n    width: 24,\r\n  },\r\n  emptyContainer: {\r\n    padding: 40,\r\n    alignItems: 'center',\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: '#888888',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default FeaturedCarousel; ","import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst QuestsWidget = ({ quests = [], onQuestPress, onSeeAllPress }) => {\r\n  const renderQuestItem = (quest) => {\r\n    const progressPercentage = (quest.progress / quest.target) * 100;\r\n    const isCompleted = quest.progress >= quest.target;\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        key={quest.id}\r\n        style={styles.questItem}\r\n        onPress={() => onQuestPress?.(quest)}\r\n      >\r\n        <View style={styles.questHeader}>\r\n          <View style={styles.questIconContainer}>\r\n            <Text style={styles.questIcon}>{quest.icon}</Text>\r\n          </View>\r\n          <View style={styles.questInfo}>\r\n            <Text style={styles.questTitle}>{quest.title}</Text>\r\n            <Text style={styles.questDescription}>{quest.description}</Text>\r\n          </View>\r\n          <View style={styles.questReward}>\r\n            <Text style={styles.rewardAmount}>{quest.reward}</Text>\r\n            <Text style={styles.rewardLabel}>PLT</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.progressContainer}>\r\n          <View style={styles.progressBar}>\r\n            <View \r\n              style={[\r\n                styles.progressFill,\r\n                { width: `${Math.min(progressPercentage, 100)}%` },\r\n                isCompleted && styles.progressFillCompleted,\r\n              ]}\r\n            />\r\n          </View>\r\n          <Text style={styles.progressText}>\r\n            {quest.progress}/{quest.target}\r\n          </Text>\r\n        </View>\r\n\r\n        {isCompleted && (\r\n          <View style={styles.completedBadge}>\r\n            <Text style={styles.completedText}>COMPLETED</Text>\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  const displayedQuests = quests.slice(0, 3); // Show only first 3 quests\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>My Quests</Text>\r\n        <TouchableOpacity onPress={onSeeAllPress}>\r\n          <Text style={styles.seeAllText}>See All</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {displayedQuests.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyIcon}>📋</Text>\r\n          <Text style={styles.emptyTitle}>No Active Quests</Text>\r\n          <Text style={styles.emptyDescription}>\r\n            Complete games to unlock new quests and earn rewards!\r\n          </Text>\r\n        </View>\r\n      ) : (\r\n        <ScrollView \r\n          style={styles.questsList}\r\n          showsVerticalScrollIndicator={false}\r\n        >\r\n          {displayedQuests.map(renderQuestItem)}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 20,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n  },\r\n  seeAllText: {\r\n    fontSize: 14,\r\n    color: '#00ff88',\r\n    fontWeight: '600',\r\n  },\r\n  questsList: {\r\n    paddingHorizontal: 20,\r\n  },\r\n  questItem: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    marginBottom: 12,\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  questHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 12,\r\n  },\r\n  questIconContainer: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: '#333333',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginRight: 12,\r\n  },\r\n  questIcon: {\r\n    fontSize: 20,\r\n  },\r\n  questInfo: {\r\n    flex: 1,\r\n  },\r\n  questTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 4,\r\n  },\r\n  questDescription: {\r\n    fontSize: 12,\r\n    color: '#cccccc',\r\n    lineHeight: 16,\r\n  },\r\n  questReward: {\r\n    alignItems: 'center',\r\n  },\r\n  rewardAmount: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#00ff88',\r\n  },\r\n  rewardLabel: {\r\n    fontSize: 10,\r\n    color: '#888888',\r\n  },\r\n  progressContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: 12,\r\n  },\r\n  progressBar: {\r\n    flex: 1,\r\n    height: 6,\r\n    backgroundColor: '#333333',\r\n    borderRadius: 3,\r\n    overflow: 'hidden',\r\n  },\r\n  progressFill: {\r\n    height: '100%',\r\n    backgroundColor: '#4A90E2',\r\n    borderRadius: 3,\r\n  },\r\n  progressFillCompleted: {\r\n    backgroundColor: '#00ff88',\r\n  },\r\n  progressText: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n    fontWeight: '500',\r\n    minWidth: 40,\r\n    textAlign: 'right',\r\n  },\r\n  completedBadge: {\r\n    position: 'absolute',\r\n    top: 12,\r\n    right: 12,\r\n    backgroundColor: '#00ff88',\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 4,\r\n    borderRadius: 12,\r\n  },\r\n  completedText: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    color: '#000000',\r\n  },\r\n  emptyContainer: {\r\n    padding: 40,\r\n    alignItems: 'center',\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 12,\r\n    marginHorizontal: 20,\r\n  },\r\n  emptyIcon: {\r\n    fontSize: 48,\r\n    marginBottom: 16,\r\n  },\r\n  emptyTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 8,\r\n  },\r\n  emptyDescription: {\r\n    fontSize: 14,\r\n    color: '#888888',\r\n    textAlign: 'center',\r\n    lineHeight: 20,\r\n  },\r\n});\r\n\r\nexport default QuestsWidget; ","import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst LeaderboardWidget = ({ leaderboardData = [], userRank, onSeeAllPress }) => {\r\n  const renderLeaderboardItem = ({ item, index }) => (\r\n    <View style={styles.leaderboardItem}>\r\n      <View style={styles.rankContainer}>\r\n        <Text style={[\r\n          styles.rankText,\r\n          index < 3 ? styles.topRankText : null\r\n        ]}>\r\n          #{item.rank}\r\n        </Text>\r\n        {index < 3 && (\r\n          <Ionicons \r\n            name=\"trophy\" \r\n            size={16} \r\n            color={index === 0 ? '#FFD700' : index === 1 ? '#C0C0C0' : '#CD7F32'} \r\n          />\r\n        )}\r\n      </View>\r\n      \r\n      <View style={styles.playerInfo}>\r\n        <Text style={styles.playerIcon}>{item.profileIcon}</Text>\r\n        <View style={styles.playerDetails}>\r\n          <Text style={styles.playerName}>{item.username}</Text>\r\n          <Text style={styles.playerStats}>\r\n            Level {item.level} • {item.gamesPlayed} games\r\n          </Text>\r\n        </View>\r\n      </View>\r\n      \r\n      <View style={styles.scoreContainer}>\r\n        <Text style={styles.scoreText}>{item.totalScore.toLocaleString()}</Text>\r\n        <Text style={styles.scoreLabel}>pts</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const displayedLeaderboard = leaderboardData.slice(0, 5); // Show only top 5\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Leaderboard</Text>\r\n        <TouchableOpacity onPress={onSeeAllPress}>\r\n          <Text style={styles.seeAllText}>See All</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {userRank && (\r\n        <View style={styles.userRankCard}>\r\n          <Text style={styles.userRankTitle}>Your Rank</Text>\r\n          <Text style={styles.userRankText}>#{userRank}</Text>\r\n        </View>\r\n      )}\r\n\r\n      {displayedLeaderboard.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyIcon}>🏆</Text>\r\n          <Text style={styles.emptyTitle}>No Leaderboard Data</Text>\r\n          <Text style={styles.emptyDescription}>\r\n            Play games to climb the leaderboard!\r\n          </Text>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.leaderboardList}>\r\n          {displayedLeaderboard.map((item, index) => renderLeaderboardItem({ item, index }))}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 20,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n  },\r\n  seeAllText: {\r\n    fontSize: 14,\r\n    color: '#00ff88',\r\n    fontWeight: '600',\r\n  },\r\n  userRankCard: {\r\n    backgroundColor: '#1a1a1a',\r\n    padding: 16,\r\n    borderRadius: 12,\r\n    marginHorizontal: 20,\r\n    marginBottom: 16,\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  userRankTitle: {\r\n    color: '#888888',\r\n    fontSize: 12,\r\n    marginBottom: 4,\r\n  },\r\n  userRankText: {\r\n    color: '#00ff88',\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  leaderboardList: {\r\n    paddingHorizontal: 20,\r\n  },\r\n  leaderboardItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#1a1a1a',\r\n    padding: 12,\r\n    borderRadius: 8,\r\n    marginBottom: 8,\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  rankContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: 40,\r\n  },\r\n  rankText: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: '#888888',\r\n    marginRight: 4,\r\n  },\r\n  topRankText: {\r\n    color: '#FFD700',\r\n  },\r\n  playerInfo: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginLeft: 8,\r\n  },\r\n  playerIcon: {\r\n    fontSize: 20,\r\n    marginRight: 8,\r\n  },\r\n  playerDetails: {\r\n    flex: 1,\r\n  },\r\n  playerName: {\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n    color: '#fff',\r\n    marginBottom: 2,\r\n  },\r\n  playerStats: {\r\n    fontSize: 10,\r\n    color: '#888888',\r\n  },\r\n  scoreContainer: {\r\n    alignItems: 'flex-end',\r\n  },\r\n  scoreText: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: '#00ff88',\r\n  },\r\n  scoreLabel: {\r\n    fontSize: 10,\r\n    color: '#888888',\r\n  },\r\n  emptyContainer: {\r\n    alignItems: 'center',\r\n    paddingVertical: 30,\r\n    paddingHorizontal: 20,\r\n  },\r\n  emptyIcon: {\r\n    fontSize: 36,\r\n    marginBottom: 12,\r\n  },\r\n  emptyTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 6,\r\n  },\r\n  emptyDescription: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n    textAlign: 'center',\r\n    lineHeight: 16,\r\n  },\r\n});\r\n\r\nexport default LeaderboardWidget; ","import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Image,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst TournamentsWidget = ({ tournaments = [], onTournamentPress, onSeeAllPress }) => {\r\n  const renderTournamentItem = (tournament) => {\r\n    const isActive = tournament.status === 'active';\r\n    const isUpcoming = tournament.status === 'upcoming';\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        key={tournament.id}\r\n        style={styles.tournamentCard}\r\n        onPress={() => onTournamentPress?.(tournament)}\r\n      >\r\n        <View style={styles.tournamentHeader}>\r\n          <View style={styles.tournamentIconContainer}>\r\n            <Ionicons name=\"trophy\" size={24} color=\"#FFD700\" />\r\n          </View>\r\n          <View style={[\r\n            styles.statusBadge,\r\n            { backgroundColor: isActive ? '#00ff88' : isUpcoming ? '#ffaa00' : '#888888' }\r\n          ]}>\r\n            <Text style={styles.statusText}>{tournament.status.toUpperCase()}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <Text style={styles.tournamentName}>{tournament.name}</Text>\r\n        <Text style={styles.tournamentGame}>{tournament.game}</Text>\r\n\r\n        <View style={styles.tournamentDetails}>\r\n          <View style={styles.detailRow}>\r\n            <Ionicons name=\"trophy\" size={16} color=\"#FFD700\" />\r\n            <Text style={styles.detailText}>{tournament.prizePool.toLocaleString()} $PLT</Text>\r\n          </View>\r\n          \r\n          <View style={styles.detailRow}>\r\n            <Ionicons name=\"people\" size={16} color=\"#00ff88\" />\r\n            <Text style={styles.detailText}>\r\n              {tournament.currentParticipants}/{tournament.maxParticipants}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n\r\n        {tournament.entryFee > 0 && (\r\n          <View style={styles.entryFeeContainer}>\r\n            <Text style={styles.entryFeeText}>Entry: {tournament.entryFee} $PLT</Text>\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  const displayedTournaments = tournaments.slice(0, 3); // Show only first 3 tournaments\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Active Tournaments</Text>\r\n        <TouchableOpacity onPress={onSeeAllPress}>\r\n          <Text style={styles.seeAllText}>See All</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {displayedTournaments.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyIcon}>🏆</Text>\r\n          <Text style={styles.emptyTitle}>No Active Tournaments</Text>\r\n          <Text style={styles.emptyDescription}>\r\n            Check back soon for exciting tournament opportunities!\r\n          </Text>\r\n        </View>\r\n      ) : (\r\n        <ScrollView \r\n          horizontal\r\n          style={styles.tournamentsList}\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={styles.tournamentsContent}\r\n        >\r\n          {displayedTournaments.map(renderTournamentItem)}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 20,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n  },\r\n  seeAllText: {\r\n    fontSize: 14,\r\n    color: '#00ff88',\r\n    fontWeight: '600',\r\n  },\r\n  tournamentsList: {\r\n    paddingLeft: 20,\r\n  },\r\n  tournamentsContent: {\r\n    paddingRight: 20,\r\n  },\r\n  tournamentCard: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    marginRight: 16,\r\n    width: 280,\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  tournamentHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 12,\r\n  },\r\n  tournamentIconContainer: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: '#333333',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  statusBadge: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 4,\r\n    borderRadius: 6,\r\n  },\r\n  statusText: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n  },\r\n  tournamentName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 4,\r\n  },\r\n  tournamentGame: {\r\n    fontSize: 14,\r\n    color: '#00ff88',\r\n    marginBottom: 12,\r\n  },\r\n  tournamentDetails: {\r\n    marginBottom: 12,\r\n  },\r\n  detailRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 6,\r\n  },\r\n  detailText: {\r\n    fontSize: 14,\r\n    color: '#cccccc',\r\n    marginLeft: 8,\r\n  },\r\n  entryFeeContainer: {\r\n    backgroundColor: '#2a2a2a',\r\n    padding: 8,\r\n    borderRadius: 6,\r\n    alignItems: 'center',\r\n  },\r\n  entryFeeText: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    color: '#ffaa00',\r\n  },\r\n  emptyContainer: {\r\n    alignItems: 'center',\r\n    paddingVertical: 40,\r\n    paddingHorizontal: 20,\r\n  },\r\n  emptyIcon: {\r\n    fontSize: 48,\r\n    marginBottom: 16,\r\n  },\r\n  emptyTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 8,\r\n  },\r\n  emptyDescription: {\r\n    fontSize: 14,\r\n    color: '#888888',\r\n    textAlign: 'center',\r\n    lineHeight: 20,\r\n  },\r\n});\r\n\r\nexport default TournamentsWidget; ","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  ScrollView,\n  RefreshControl,\n} from 'react-native';\nimport { authService } from '../services/authService';\nimport { firestoreService } from '../services/firestoreService';\nimport leaderboardService from '../services/leaderboardService';\nimport TopBar from '../components/TopBar';\nimport FeaturedCarousel from '../components/FeaturedCarousel';\nimport QuestsWidget from '../components/QuestsWidget';\nimport LeaderboardWidget from '../components/LeaderboardWidget';\nimport TournamentsWidget from '../components/TournamentsWidget';\n\nconst MainHubScreen = ({ navigation }) => {\n  const [userData, setUserData] = useState(null);\n  const [featuredContent, setFeaturedContent] = useState([]);\n  const [userQuests, setUserQuests] = useState([]);\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [tournaments, setTournaments] = useState([]);\n  const [userRank, setUserRank] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n\n  useEffect(() => {\n    const currentUser = authService.getCurrentUser();\n    if (!currentUser) {\n      Alert.alert('Error', 'User not authenticated');\n      return;\n    }\n\n    const unsubscribeUser = firestoreService.subscribeToUserData(\n      currentUser.id,\n      (data) => {\n        setUserData(data);\n        setLoading(false);\n      }\n    );\n\n    const unsubscribeFeatured = firestoreService.subscribeToFeaturedContent(\n      (content) => {\n        setFeaturedContent(content);\n      }\n    );\n\n    const unsubscribeQuests = firestoreService.subscribeToUserQuests(\n      currentUser.id,\n      (quests) => {\n        setUserQuests(quests);\n      }\n    );\n\n    // Load leaderboard data\n    loadLeaderboardData();\n    \n    // Load tournaments data\n    loadTournamentsData();\n\n    return () => {\n      unsubscribeUser();\n      unsubscribeFeatured();\n      unsubscribeQuests();\n    };\n  }, []);\n\n  const loadLeaderboardData = async () => {\n    try {\n      // Use the shared service for consistent data\n      const topLeaderboard = leaderboardService.getTopLeaderboard();\n      setLeaderboardData(topLeaderboard);\n      \n      // Get user rank from service\n      const currentUser = authService.getCurrentUser();\n      if (currentUser) {\n        const rank = leaderboardService.getUserRank(currentUser.uid);\n        setUserRank(rank);\n      }\n    } catch (error) {\n      console.error('Error loading leaderboard data:', error);\n    }\n  };\n\n  const loadTournamentsData = async () => {\n    try {\n      // Use the shared service for consistent data\n      const hubTournaments = leaderboardService.getTournamentsForHub();\n      setTournaments(hubTournaments);\n    } catch (error) {\n      console.error('Error loading tournaments data:', error);\n    }\n  };\n\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    await loadLeaderboardData();\n    await loadTournamentsData();\n    setTimeout(() => setRefreshing(false), 1000);\n  };\n\n  const handleProfilePress = () => {\n    navigation.navigate('Profile');\n  };\n\n  const handleFeaturedItemPress = (item) => {\n    Alert.alert('Featured Content', `Selected: ${item.title}`);\n  };\n\n  const handleQuestPress = (quest) => {\n    if (quest.status === 'completed') {\n      Alert.alert('Quest Completed', `You've completed: ${quest.title}`);\n    } else {\n      Alert.alert('Quest Details', `Quest: ${quest.title}\\nProgress: ${quest.progress}/${quest.target}`);\n    }\n  };\n\n  const handleQuestSeeAll = () => {\n    Alert.alert('Quests', 'Navigate to full quests screen');\n  };\n\n  const handleLeaderboardSeeAll = () => {\n    navigation.navigate('LeaderboardScreen');\n  };\n\n  const handleTournamentPress = (tournament) => {\n    if (tournament.status === 'active') {\n      // Navigate to active tournament screen\n      navigation.navigate('TournamentScreen', { tournamentId: tournament.id });\n    } else {\n      Alert.alert('Tournament', `${tournament.name} starts on ${tournament.startDate.toLocaleDateString()}`);\n    }\n  };\n\n  const handleTournamentsSeeAll = () => {\n    navigation.navigate('LeaderboardScreen', { initialTab: 'tournaments' });\n  };\n\n  const handleFeaturedSeeAll = () => {\n    Alert.alert('Featured', 'Navigate to full featured content screen');\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <Text style={styles.loadingText}>Loading...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <TopBar \n        userData={userData} \n        onProfilePress={handleProfilePress}\n      />\n      \n      <ScrollView\n        style={styles.content}\n        showsVerticalScrollIndicator={false}\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={handleRefresh}\n            tintColor=\"#00ff88\"\n            colors={[\"#00ff88\"]}\n          />\n        }\n      >\n        <FeaturedCarousel\n          featuredContent={featuredContent}\n          onItemPress={handleFeaturedItemPress}\n          onSeeAllPress={handleFeaturedSeeAll}\n        />\n\n        <QuestsWidget\n          quests={userQuests}\n          onQuestPress={handleQuestPress}\n          onSeeAllPress={handleQuestSeeAll}\n        />\n\n        <LeaderboardWidget\n          leaderboardData={leaderboardData}\n          userRank={userRank}\n          onSeeAllPress={handleLeaderboardSeeAll}\n        />\n\n        <TournamentsWidget\n          tournaments={tournaments}\n          onTournamentPress={handleTournamentPress}\n          onSeeAllPress={handleTournamentsSeeAll}\n        />\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0a0a0a',\n  },\n  loadingContainer: {\n    flex: 1,\n    backgroundColor: '#0a0a0a',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    fontSize: 18,\n    color: '#ffffff',\n  },\n  content: {\n    flex: 1,\n  },\n});\n\nexport default MainHubScreen; ","import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Image,\r\n} from 'react-native';\r\n\r\nconst GamesScreen = () => {\r\n  const games = [\r\n    {\r\n      id: 1,\r\n      name: 'Space Runner',\r\n      description: 'Navigate through asteroid fields and collect cosmic rewards',\r\n      icon: '🚀',\r\n      status: 'Available',\r\n      reward: '50 PLT',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Planet Defender',\r\n      description: 'Protect your homeworld from alien invaders',\r\n      icon: '🛡️',\r\n      status: 'Available',\r\n      reward: '75 PLT',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Stellar Puzzle',\r\n      description: 'Solve cosmic puzzles to unlock rare stickers',\r\n      icon: '🧩',\r\n      status: 'Coming Soon',\r\n      reward: '100 PLT',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Galaxy Racing',\r\n      description: 'Race through nebulas and wormholes',\r\n      icon: '🏎️',\r\n      status: 'Coming Soon',\r\n      reward: '60 PLT',\r\n    },\r\n  ];\r\n\r\n  const renderGameCard = (game) => (\r\n    <TouchableOpacity\r\n      key={game.id}\r\n      style={[\r\n        styles.gameCard,\r\n        game.status === 'Coming Soon' && styles.comingSoonCard,\r\n      ]}\r\n      disabled={game.status === 'Coming Soon'}\r\n    >\r\n      <View style={styles.gameHeader}>\r\n        <Text style={styles.gameIcon}>{game.icon}</Text>\r\n        <View style={styles.gameInfo}>\r\n          <Text style={styles.gameName}>{game.name}</Text>\r\n          <Text style={styles.gameStatus}>{game.status}</Text>\r\n        </View>\r\n        <View style={styles.rewardContainer}>\r\n          <Text style={styles.rewardText}>{game.reward}</Text>\r\n        </View>\r\n      </View>\r\n      <Text style={styles.gameDescription}>{game.description}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Games</Text>\r\n        <Text style={styles.subtitle}>Choose your adventure</Text>\r\n      </View>\r\n      \r\n      <ScrollView style={styles.gamesList} showsVerticalScrollIndicator={false}>\r\n        {games.map(renderGameCard)}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#0a0a0a',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    paddingTop: 60,\r\n    backgroundColor: '#1a1a1a',\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 8,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#888888',\r\n  },\r\n  gamesList: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  gameCard: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 16,\r\n    padding: 20,\r\n    marginBottom: 16,\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  comingSoonCard: {\r\n    opacity: 0.6,\r\n    borderColor: '#666666',\r\n  },\r\n  gameHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 12,\r\n  },\r\n  gameIcon: {\r\n    fontSize: 32,\r\n    marginRight: 16,\r\n  },\r\n  gameInfo: {\r\n    flex: 1,\r\n  },\r\n  gameName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 4,\r\n  },\r\n  gameStatus: {\r\n    fontSize: 14,\r\n    color: '#00ff88',\r\n  },\r\n  rewardContainer: {\r\n    backgroundColor: '#00ff88',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 20,\r\n  },\r\n  rewardText: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    color: '#000000',\r\n  },\r\n  gameDescription: {\r\n    fontSize: 14,\r\n    color: '#cccccc',\r\n    lineHeight: 20,\r\n  },\r\n});\r\n\r\nexport default GamesScreen; ","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDSEN9MOKdlovmyHr0lslO54FV5AOXeBAI\",\n  authDomain: \"planet-league-b7e70.firebaseapp.com\",\n  projectId: \"planet-league-b7e70\",\n  storageBucket: \"planet-league-b7e70.firebasestorage.app\",\n  messagingSenderId: \"809466588896\",\n  appId: \"1:809466588896:web:4f126a4368d8696b9daa85\",\n  measurementId: \"G-RRT4LVZ41T\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\n// Google Auth Provider\nexport const googleProvider = new GoogleAuthProvider();\n\n// Authentication functions\nexport const signInWithGoogle = async () => {\n  try {\n    const result = await signInWithPopup(auth, googleProvider);\n    return { success: true, user: result.user };\n  } catch (error) {\n    return { success: false, error: error.message };\n  }\n};\n\nexport const signInWithEmail = async (email, password) => {\n  try {\n    const result = await signInWithEmailAndPassword(auth, email, password);\n    return { success: true, user: result.user };\n  } catch (error) {\n    return { success: false, error: error.message };\n  }\n};\n\nexport const createUserWithEmail = async (email, password) => {\n  try {\n    const result = await createUserWithEmailAndPassword(auth, email, password);\n    return { success: true, user: result.user };\n  } catch (error) {\n    return { success: false, error: error.message };\n  }\n};\n\nexport { auth, db };\nexport default app; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Alert,\r\n  ActivityIndicator,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\r\nimport Animated, {\r\n  useSharedValue,\r\n  useAnimatedStyle,\r\n  useAnimatedGestureHandler,\r\n  runOnJS,\r\n  withSpring,\r\n} from 'react-native-reanimated';\r\nimport { doc, collection, onSnapshot, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';\r\nimport { db } from '../config/firebase';\r\nimport { auth } from '../config/firebase';\r\nimport { firestoreService } from '../services/firestoreService';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst RECIPES = [\r\n  // 2-element\r\n  { elements: ['fire', 'water'], name: 'Steam Element', icon: '💨', rarity: 'Rare', successRate: 0.8 },\r\n  { elements: ['fire', 'earth'], name: 'Lava Element', icon: '🌋', rarity: 'Rare', successRate: 0.7 },\r\n  { elements: ['water', 'earth'], name: 'Mud Element', icon: '🌊', rarity: 'Common', successRate: 0.9 },\r\n  { elements: ['air', 'fire'], name: 'Flame Element', icon: '🔥', rarity: 'Rare', successRate: 0.75 },\r\n  { elements: ['lightning', 'water'], name: 'Storm Element', icon: '⛈️', rarity: 'Epic', successRate: 0.6 },\r\n  { elements: ['ice', 'fire'], name: 'Steam Element', icon: '💨', rarity: 'Rare', successRate: 0.8 },\r\n  { elements: ['lightning', 'earth'], name: 'Crystal Element', icon: '💎', rarity: 'Epic', successRate: 0.65 },\r\n  { elements: ['shadow', 'light'], name: 'Balance Element', icon: '⚖️', rarity: 'Legendary', successRate: 0.4 },\r\n  // 3-element\r\n  { elements: ['fire', 'water', 'earth'], name: 'Life Element', icon: '🌱', rarity: 'Epic', successRate: 0.5 },\r\n  { elements: ['air', 'fire', 'lightning'], name: 'Storm Element', icon: '🌪️', rarity: 'Epic', successRate: 0.55 },\r\n  { elements: ['ice', 'water', 'air'], name: 'Frost Element', icon: '❄️', rarity: 'Rare', successRate: 0.7 },\r\n  // 4-element\r\n  { elements: ['fire', 'water', 'earth', 'air'], name: 'Primal Element', icon: '🌟', rarity: 'Legendary', successRate: 0.3 },\r\n  { elements: ['lightning', 'ice', 'shadow', 'light'], name: 'Cosmic Element', icon: '🌌', rarity: 'Mythic', successRate: 0.2 },\r\n];\r\n\r\nconst ELEMENT_ICONS = {\r\n  fire: '🔥',\r\n  water: '💧',\r\n  earth: '🌍',\r\n  air: '💨',\r\n  lightning: '⚡',\r\n  ice: '❄️',\r\n  shadow: '🌑',\r\n  light: '✨',\r\n};\r\n\r\nconst ForgeScreen = () => {\r\n  const [userElements, setUserElements] = useState([]);\r\n  const [craftingSlots, setCraftingSlots] = useState([null, null, null, null, null]);\r\n  const [craftingPreview, setCraftingPreview] = useState(null);\r\n  const [isCrafting, setIsCrafting] = useState(false);\r\n  const [craftingResult, setCraftingResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Always load simulated elements for demo\r\n    const unsubscribe = firestoreService.subscribeToUserElements('demo', setUserElements);\r\n    return () => { if (unsubscribe) unsubscribe(); };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Get crafting preview when slots change\r\n    const getCraftingPreview = async () => {\r\n      const filledSlots = craftingSlots.filter(slot => slot !== null);\r\n      \r\n      if (filledSlots.length === 0) {\r\n        setCraftingPreview(null);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const elementIds = filledSlots.map(slot => slot.id);\r\n        const result = await firestoreService.getCraftingPreview(elementIds);\r\n        \r\n        if (result.success) {\r\n          setCraftingPreview(result.preview);\r\n        } else {\r\n          console.error('Error getting crafting preview:', result.error);\r\n          setCraftingPreview(null);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error getting crafting preview:', error);\r\n        setCraftingPreview(null);\r\n      }\r\n    };\r\n\r\n    getCraftingPreview();\r\n  }, [craftingSlots]);\r\n\r\n  const addElementToSlot = (element, slotIndex) => {\r\n    if (craftingSlots[slotIndex] === null) {\r\n      const newSlots = [...craftingSlots];\r\n      newSlots[slotIndex] = element;\r\n      setCraftingSlots(newSlots);\r\n      \r\n      // Update user inventory\r\n      const updatedElements = userElements.map(el => \r\n        el.id === element.id ? { ...el, count: el.count - 1 } : el\r\n      );\r\n      setUserElements(updatedElements);\r\n    }\r\n  };\r\n\r\n  const removeElementFromSlot = (slotIndex) => {\r\n    const element = craftingSlots[slotIndex];\r\n    if (element) {\r\n      const newSlots = [...craftingSlots];\r\n      newSlots[slotIndex] = null;\r\n      setCraftingSlots(newSlots);\r\n      \r\n      // Return element to inventory\r\n      const updatedElements = userElements.map(el => \r\n        el.id === element.id ? { ...el, count: el.count + 1 } : el\r\n      );\r\n      setUserElements(updatedElements);\r\n    }\r\n  };\r\n\r\n  const clearAllSlots = () => {\r\n    const filledSlots = craftingSlots.filter(slot => slot !== null);\r\n    const newSlots = [null, null, null, null, null];\r\n    setCraftingSlots(newSlots);\r\n    \r\n    // Return all elements to inventory\r\n    const updatedElements = [...userElements];\r\n    filledSlots.forEach(element => {\r\n      const elementIndex = updatedElements.findIndex(el => el.id === element.id);\r\n      if (elementIndex !== -1) {\r\n        updatedElements[elementIndex].count += 1;\r\n      }\r\n    });\r\n    setUserElements(updatedElements);\r\n  };\r\n\r\n  const performCraft = async () => {\r\n    if (!craftingPreview) return;\r\n    \r\n    setIsCrafting(true);\r\n    setCraftingResult(null);\r\n    \r\n    try {\r\n      const elementIds = craftingSlots.filter(slot => slot !== null).map(slot => slot.id);\r\n      const result = await firestoreService.performCraft(elementIds);\r\n      \r\n      setCraftingResult({\r\n        success: result.success,\r\n        message: result.message,\r\n        reward: result.reward,\r\n      });\r\n      \r\n      // Clear slots after crafting\r\n      setCraftingSlots([null, null, null, null, null]);\r\n    } catch (error) {\r\n      setCraftingResult({\r\n        success: false,\r\n        message: 'Crafting failed due to an error.',\r\n      });\r\n    } finally {\r\n      setIsCrafting(false);\r\n    }\r\n  };\r\n\r\n  const DraggableElement = ({ element, onDragEnd }) => {\r\n    const translateX = useSharedValue(0);\r\n    const translateY = useSharedValue(0);\r\n    const scale = useSharedValue(1);\r\n\r\n    const gestureHandler = useAnimatedGestureHandler({\r\n      onStart: () => {\r\n        scale.value = withSpring(1.1);\r\n      },\r\n      onActive: (event) => {\r\n        translateX.value = event.translationX;\r\n        translateY.value = event.translationY;\r\n      },\r\n      onEnd: (event) => {\r\n        scale.value = withSpring(1);\r\n        runOnJS(onDragEnd)(event.absoluteX, event.absoluteY);\r\n      },\r\n    });\r\n\r\n    const animatedStyle = useAnimatedStyle(() => ({\r\n      transform: [\r\n        { translateX: translateX.value },\r\n        { translateY: translateY.value },\r\n        { scale: scale.value },\r\n      ],\r\n    }));\r\n\r\n    return (\r\n      <PanGestureHandler onGestureEvent={gestureHandler}>\r\n        <Animated.View style={[styles.draggableElement, animatedStyle]}>\r\n          <Text style={styles.elementIcon}>{element.icon}</Text>\r\n          <Text style={styles.elementName}>{element.name}</Text>\r\n          <Text style={styles.elementCount}>{element.count}</Text>\r\n        </Animated.View>\r\n      </PanGestureHandler>\r\n    );\r\n  };\r\n\r\n  const CraftingSlot = ({ element, slotIndex, onRemove }) => {\r\n    return (\r\n      <View style={styles.craftingSlot}>\r\n        {element ? (\r\n          <TouchableOpacity\r\n            style={styles.filledSlot}\r\n            onPress={() => onRemove(slotIndex)}\r\n          >\r\n            <Text style={styles.slotElementIcon}>{element.icon}</Text>\r\n            <Text style={styles.slotElementName}>{element.name}</Text>\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <View style={styles.emptySlot}>\r\n            <Text style={styles.emptySlotText}>+</Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const handleElementDragEnd = (element, absoluteX, absoluteY) => {\r\n    // Find which slot the element was dropped on\r\n    const slotSize = 80;\r\n    const slotSpacing = 20;\r\n    const startX = (width - (5 * slotSize + 4 * slotSpacing)) / 2;\r\n    \r\n    for (let i = 0; i < 5; i++) {\r\n      const slotX = startX + i * (slotSize + slotSpacing);\r\n      const slotY = height * 0.4; // Approximate Y position of crafting area\r\n      \r\n      if (absoluteX >= slotX && absoluteX <= slotX + slotSize &&\r\n          absoluteY >= slotY && absoluteY <= slotY + slotSize) {\r\n        addElementToSlot(element, i);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Forge</Text>\r\n        <Text style={styles.subtitle}>Craft new elements from your collection</Text>\r\n      </View>\r\n\r\n      <View style={styles.mainContent}>\r\n        {/* Inventory Panel - Right Side */}\r\n        <View style={styles.inventoryPanel}>\r\n          <Text style={styles.panelTitle}>Your Elements</Text>\r\n          <ScrollView style={styles.inventoryScroll} showsVerticalScrollIndicator={false}>\r\n            {userElements.map((element) => (\r\n              <TouchableOpacity\r\n                key={element.id}\r\n                style={styles.elementCard}\r\n                onPress={() => {\r\n                  // Find first empty slot\r\n                  const emptySlotIndex = craftingSlots.findIndex(slot => slot === null);\r\n                  if (emptySlotIndex !== -1 && element.count > 0) {\r\n                    addElementToSlot(element, emptySlotIndex);\r\n                  }\r\n                }}\r\n                disabled={element.count === 0}\r\n              >\r\n                <Text style={styles.elementIcon}>{element.icon}</Text>\r\n                <Text style={styles.elementName}>{element.name}</Text>\r\n                <Text style={styles.elementCount}>{element.count}</Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </ScrollView>\r\n        </View>\r\n\r\n        {/* Crafting Area - Center */}\r\n        <View style={styles.craftingArea}>\r\n          <Text style={styles.craftingTitle}>Crafting Slots</Text>\r\n          \r\n          <View style={styles.craftingSlots}>\r\n            {craftingSlots.map((element, index) => (\r\n              <CraftingSlot\r\n                key={index}\r\n                element={element}\r\n                slotIndex={index}\r\n                onRemove={removeElementFromSlot}\r\n              />\r\n            ))}\r\n          </View>\r\n\r\n          {/* Crafting Preview */}\r\n          {craftingPreview && (\r\n            <View style={styles.previewContainer}>\r\n              <Text style={styles.previewTitle}>Preview</Text>\r\n              <View style={styles.previewContent}>\r\n                <Text style={styles.previewIcon}>{craftingPreview.icon}</Text>\r\n                <Text style={styles.previewName}>{craftingPreview.name}</Text>\r\n                <Text style={styles.previewRarity}>{craftingPreview.rarity}</Text>\r\n                <Text style={styles.previewSuccessRate}>\r\n                  Success Rate: {(craftingPreview.successRate * 100).toFixed(0)}%\r\n                </Text>\r\n                <Text style={styles.previewReward}>\r\n                  Potential Reward: {craftingPreview.reward} $PLT\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          )}\r\n\r\n          {/* Craft Button */}\r\n          <View style={styles.craftButtonContainer}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.craftButton,\r\n                (!craftingPreview || isCrafting) && styles.craftButtonDisabled,\r\n              ]}\r\n              onPress={performCraft}\r\n              disabled={!craftingPreview || isCrafting}\r\n            >\r\n              {isCrafting ? (\r\n                <ActivityIndicator color=\"#000\" />\r\n              ) : (\r\n                <Text style={styles.craftButtonText}>CRAFT</Text>\r\n              )}\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity\r\n              style={styles.clearButton}\r\n              onPress={clearAllSlots}\r\n            >\r\n              <Text style={styles.clearButtonText}>Clear All</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          {/* Crafting Result */}\r\n          {craftingResult && (\r\n            <View style={[\r\n              styles.resultContainer,\r\n              craftingResult.success ? styles.successResult : styles.failureResult,\r\n            ]}>\r\n              <Text style={styles.resultText}>{craftingResult.message}</Text>\r\n              {craftingResult.success && (\r\n                <Text style={styles.rewardText}>+{craftingResult.reward} $PLT</Text>\r\n              )}\r\n            </View>\r\n          )}\r\n        </View>\r\n\r\n        <View style={{ marginTop: 32 }}>\r\n          <Text style={{ color: '#fff', fontWeight: 'bold', fontSize: 18, marginBottom: 12 }}>Crafting Recipes</Text>\r\n          <ScrollView style={{ maxHeight: 220 }}>\r\n            {RECIPES.map((r, idx) => (\r\n              <View key={idx} style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10, backgroundColor: '#181818', borderRadius: 8, padding: 8 }}>\r\n                <Text style={{ fontSize: 22, marginRight: 10 }}>{r.icon}</Text>\r\n                <Text style={{ color: '#fff', fontWeight: 'bold', minWidth: 120 }}>{r.name}</Text>\r\n                <Text style={{ color: '#aaa', marginRight: 10, marginLeft: 10 }}>\r\n                  {r.elements.map(e => ELEMENT_ICONS[e]).join(' + ')}\r\n                </Text>\r\n                <Text style={{ color: '#00ff88', marginRight: 10 }}>{r.rarity}</Text>\r\n                <Text style={{ color: '#ffaa00' }}>{Math.round(r.successRate * 100)}%</Text>\r\n              </View>\r\n            ))}\r\n          </ScrollView>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#0a0a0a',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    paddingTop: 60,\r\n    backgroundColor: '#1a1a1a',\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 8,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#888888',\r\n  },\r\n  mainContent: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  inventoryPanel: {\r\n    width: width * 0.3,\r\n    backgroundColor: '#1a1a1a',\r\n    borderRightWidth: 1,\r\n    borderRightColor: '#333333',\r\n  },\r\n  panelTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    padding: 16,\r\n    textAlign: 'center',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#333333',\r\n  },\r\n  inventoryScroll: {\r\n    flex: 1,\r\n    padding: 8,\r\n  },\r\n  draggableElement: {\r\n    backgroundColor: '#2a2a2a',\r\n    borderRadius: 12,\r\n    padding: 12,\r\n    marginBottom: 8,\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderColor: '#444444',\r\n  },\r\n  elementIcon: {\r\n    fontSize: 24,\r\n    marginBottom: 4,\r\n  },\r\n  elementName: {\r\n    fontSize: 12,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    marginBottom: 2,\r\n  },\r\n  elementCount: {\r\n    fontSize: 10,\r\n    color: '#00ff88',\r\n    fontWeight: 'bold',\r\n  },\r\n  craftingArea: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  craftingTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  craftingSlots: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    marginBottom: 30,\r\n  },\r\n  craftingSlot: {\r\n    width: 80,\r\n    height: 80,\r\n    margin: 10,\r\n  },\r\n  emptySlot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderWidth: 2,\r\n    borderColor: '#444444',\r\n    borderStyle: 'dashed',\r\n    borderRadius: 12,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#1a1a1a',\r\n  },\r\n  emptySlotText: {\r\n    fontSize: 24,\r\n    color: '#666666',\r\n  },\r\n  filledSlot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: '#2a2a2a',\r\n    borderRadius: 12,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderColor: '#00ff88',\r\n  },\r\n  slotElementIcon: {\r\n    fontSize: 20,\r\n    marginBottom: 2,\r\n  },\r\n  slotElementName: {\r\n    fontSize: 8,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n  },\r\n  previewContainer: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 16,\r\n    padding: 20,\r\n    marginBottom: 20,\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  previewTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 12,\r\n    textAlign: 'center',\r\n  },\r\n  previewContent: {\r\n    alignItems: 'center',\r\n  },\r\n  previewIcon: {\r\n    fontSize: 32,\r\n    marginBottom: 8,\r\n  },\r\n  previewName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 4,\r\n  },\r\n  previewRarity: {\r\n    fontSize: 14,\r\n    color: '#00ff88',\r\n    marginBottom: 8,\r\n  },\r\n  previewSuccessRate: {\r\n    fontSize: 14,\r\n    color: '#cccccc',\r\n    marginBottom: 4,\r\n  },\r\n  previewReward: {\r\n    fontSize: 14,\r\n    color: '#ffaa00',\r\n    fontWeight: 'bold',\r\n  },\r\n  craftButtonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  craftButton: {\r\n    backgroundColor: '#00ff88',\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 15,\r\n    borderRadius: 25,\r\n    marginRight: 15,\r\n    minWidth: 120,\r\n    alignItems: 'center',\r\n  },\r\n  craftButtonDisabled: {\r\n    backgroundColor: '#666666',\r\n  },\r\n  craftButtonText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#000000',\r\n  },\r\n  clearButton: {\r\n    backgroundColor: '#ff4444',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 15,\r\n    borderRadius: 25,\r\n  },\r\n  clearButtonText: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n  },\r\n  resultContainer: {\r\n    padding: 16,\r\n    borderRadius: 12,\r\n    alignItems: 'center',\r\n  },\r\n  successResult: {\r\n    backgroundColor: '#1a2a1a',\r\n    borderWidth: 1,\r\n    borderColor: '#00ff88',\r\n  },\r\n  failureResult: {\r\n    backgroundColor: '#2a1a1a',\r\n    borderWidth: 1,\r\n    borderColor: '#ff4444',\r\n  },\r\n  resultText: {\r\n    fontSize: 16,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  rewardText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#00ff88',\r\n  },\r\n  elementCard: {\r\n    backgroundColor: '#2a2a2a',\r\n    borderRadius: 12,\r\n    padding: 12,\r\n    marginBottom: 8,\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderColor: '#444444',\r\n  },\r\n});\r\n\r\nexport default ForgeScreen; ","import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Image,\r\n  Alert,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\nimport authService from '../services/authService';\r\n\r\n// Simulated user data\r\nconst USER = {\r\n  username: 'astro_player',\r\n  // Using a simple emoji avatar instead of external URL\r\n  avatar: '👨‍🚀',\r\n};\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    label: 'Wallet',\r\n    icon: 'wallet',\r\n    screen: 'WalletScreen',\r\n  },\r\n  {\r\n    label: 'Refer a Friend',\r\n    icon: 'person-add',\r\n    screen: 'ReferralScreen',\r\n  },\r\n  {\r\n    label: 'Settings',\r\n    icon: 'settings',\r\n    screen: 'SettingsScreen',\r\n  },\r\n  {\r\n    label: 'Support',\r\n    icon: 'help-circle',\r\n    url: 'https://help.planetleague.gg',\r\n  },\r\n  {\r\n    label: 'Logout',\r\n    icon: 'log-out',\r\n    action: 'logout',\r\n  },\r\n];\r\n\r\nconst ProfileScreen = () => {\r\n  const navigation = useNavigation();\r\n\r\n  const userStats = {\r\n    username: 'CosmicExplorer',\r\n    level: 15,\r\n    experience: 1250,\r\n    nextLevelExp: 2000,\r\n    totalPLT: 1250,\r\n    gamesPlayed: 47,\r\n    stickersCollected: 23,\r\n    achievements: 8,\r\n  };\r\n\r\n  const achievements = [\r\n    {\r\n      id: 1,\r\n      name: 'First Steps',\r\n      description: 'Complete your first game',\r\n      icon: '👣',\r\n      unlocked: true,\r\n      date: '2024-01-15',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Sticker Collector',\r\n      description: 'Collect 10 different stickers',\r\n      icon: '📱',\r\n      unlocked: true,\r\n      date: '2024-01-20',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Craft Master',\r\n      description: 'Craft your first epic sticker',\r\n      icon: '⚒️',\r\n      unlocked: false,\r\n      progress: '0/1',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'PLT Millionaire',\r\n      description: 'Earn 10,000 PLT tokens',\r\n      icon: '💰',\r\n      unlocked: false,\r\n      progress: '1250/10000',\r\n    },\r\n  ];\r\n\r\n  const progressPercentage = (userStats.experience / userStats.nextLevelExp) * 100;\r\n\r\n  const handleMenuPress = (item) => {\r\n    if (item.screen) {\r\n      navigation.navigate(item.screen);\r\n    } else if (item.url) {\r\n      Linking.openURL(item.url);\r\n    } else if (item.action === 'logout') {\r\n      Alert.alert(\r\n        'Logout',\r\n        'Are you sure you want to log out?',\r\n        [\r\n          { text: 'Cancel', style: 'cancel' },\r\n          {\r\n            text: 'Logout',\r\n            style: 'destructive',\r\n            onPress: async () => {\r\n              try {\r\n                console.log('Starting logout process...');\r\n                await authService.signOut();\r\n                console.log('User signed out successfully, attempting navigation...');\r\n                \r\n                // Try multiple navigation approaches\r\n                try {\r\n                  // First try: replace the current screen\r\n                  navigation.replace('Login');\r\n                  console.log('Navigation replace completed');\r\n                } catch (navError) {\r\n                  console.error('Navigation replace failed:', navError);\r\n                  // Second try: reset navigation\r\n                  navigation.reset({\r\n                    index: 0,\r\n                    routes: [{ name: 'Login' }],\r\n                  });\r\n                  console.log('Navigation reset completed');\r\n                }\r\n              } catch (e) {\r\n                console.error('Logout error:', e);\r\n                Alert.alert('Logout Failed', e.message || 'Please try again.');\r\n              }\r\n            },\r\n          },\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderAchievement = (achievement) => (\r\n    <View\r\n      key={achievement.id}\r\n      style={[\r\n        styles.achievementCard,\r\n        !achievement.unlocked && styles.lockedAchievement,\r\n      ]}\r\n    >\r\n      <View style={styles.achievementHeader}>\r\n        <Text style={styles.achievementIcon}>{achievement.icon}</Text>\r\n        <View style={styles.achievementInfo}>\r\n          <Text style={styles.achievementName}>{achievement.name}</Text>\r\n          <Text style={styles.achievementDescription}>\r\n            {achievement.description}\r\n          </Text>\r\n        </View>\r\n        {achievement.unlocked ? (\r\n          <View style={styles.unlockedBadge}>\r\n            <Text style={styles.unlockedText}>✓</Text>\r\n          </View>\r\n        ) : (\r\n          <Text style={styles.progressText}>{achievement.progress}</Text>\r\n        )}\r\n      </View>\r\n      {achievement.unlocked && (\r\n        <Text style={styles.achievementDate}>Unlocked {achievement.date}</Text>\r\n      )}\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Profile</Text>\r\n      </View>\r\n      \r\n      <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>\r\n        {/* User Stats Card */}\r\n        <View style={styles.statsCard}>\r\n          <View style={styles.userInfo}>\r\n            <View style={styles.avatarContainer}>\r\n              <Text style={styles.avatar}>{USER.avatar}</Text>\r\n            </View>\r\n            <View style={styles.userDetails}>\r\n              <Text style={styles.username}>{userStats.username}</Text>\r\n              <Text style={styles.level}>Level {userStats.level}</Text>\r\n            </View>\r\n          </View>\r\n          \r\n          <View style={styles.progressContainer}>\r\n            <View style={styles.progressBar}>\r\n              <View \r\n                style={[\r\n                  styles.progressFill,\r\n                  { width: `${progressPercentage}%` }\r\n                ]}\r\n              />\r\n            </View>\r\n            <Text style={styles.progressText}>\r\n              {userStats.experience} / {userStats.nextLevelExp} XP\r\n            </Text>\r\n          </View>\r\n\r\n          <View style={styles.statsGrid}>\r\n            <View style={styles.statItem}>\r\n              <Text style={styles.statNumber}>{userStats.totalPLT}</Text>\r\n              <Text style={styles.statLabel}>PLT Tokens</Text>\r\n            </View>\r\n            <View style={styles.statItem}>\r\n              <Text style={styles.statNumber}>{userStats.gamesPlayed}</Text>\r\n              <Text style={styles.statLabel}>Games Played</Text>\r\n            </View>\r\n            <View style={styles.statItem}>\r\n              <Text style={styles.statNumber}>{userStats.stickersCollected}</Text>\r\n              <Text style={styles.statLabel}>Stickers</Text>\r\n            </View>\r\n            <View style={styles.statItem}>\r\n              <Text style={styles.statNumber}>{userStats.achievements}</Text>\r\n              <Text style={styles.statLabel}>Achievements</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Menu Items Section */}\r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>Menu</Text>\r\n          {MENU_ITEMS.map((item, index) => (\r\n            <TouchableOpacity\r\n              key={index}\r\n              style={styles.menuItem}\r\n              onPress={() => handleMenuPress(item)}\r\n            >\r\n              <View style={styles.menuItemContent}>\r\n                <Ionicons name={item.icon} size={24} color=\"#00ff88\" style={styles.menuIcon} />\r\n                <Text style={styles.menuLabel}>{item.label}</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#888888\" />\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n\r\n        {/* Achievements Section */}\r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>Achievements</Text>\r\n          {achievements.map(renderAchievement)}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#0a0a0a',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    paddingTop: 60,\r\n    backgroundColor: '#1a1a1a',\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  statsCard: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 16,\r\n    padding: 20,\r\n    marginBottom: 24,\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  userInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  avatarContainer: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 30,\r\n    backgroundColor: '#333333',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginRight: 16,\r\n  },\r\n  avatar: {\r\n    fontSize: 40,\r\n  },\r\n  userDetails: {\r\n    flex: 1,\r\n  },\r\n  username: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 4,\r\n  },\r\n  level: {\r\n    fontSize: 14,\r\n    color: '#00ff88',\r\n    fontWeight: 'bold',\r\n  },\r\n  progressContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  progressBar: {\r\n    height: 8,\r\n    backgroundColor: '#333333',\r\n    borderRadius: 4,\r\n    marginBottom: 8,\r\n  },\r\n  progressFill: {\r\n    height: '100%',\r\n    backgroundColor: '#00ff88',\r\n    borderRadius: 4,\r\n  },\r\n  progressText: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n    textAlign: 'center',\r\n  },\r\n  statsGrid: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  statItem: {\r\n    alignItems: 'center',\r\n    flex: 1,\r\n  },\r\n  statNumber: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#00ff88',\r\n    marginBottom: 4,\r\n  },\r\n  statLabel: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n  },\r\n  section: {\r\n    marginBottom: 24,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 16,\r\n  },\r\n  achievementCard: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    marginBottom: 12,\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  lockedAchievement: {\r\n    opacity: 0.6,\r\n    borderColor: '#666666',\r\n  },\r\n  achievementHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  achievementIcon: {\r\n    fontSize: 24,\r\n    marginRight: 12,\r\n  },\r\n  achievementInfo: {\r\n    flex: 1,\r\n  },\r\n  achievementName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 4,\r\n  },\r\n  achievementDescription: {\r\n    fontSize: 14,\r\n    color: '#cccccc',\r\n  },\r\n  unlockedBadge: {\r\n    backgroundColor: '#00ff88',\r\n    width: 24,\r\n    height: 24,\r\n    borderRadius: 12,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  unlockedText: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: '#000000',\r\n  },\r\n  achievementDate: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n    marginTop: 8,\r\n    fontStyle: 'italic',\r\n  },\r\n  menuItem: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    marginBottom: 8,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  menuItemContent: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  menuIcon: {\r\n    marginRight: 12,\r\n  },\r\n  menuLabel: {\r\n    fontSize: 16,\r\n    color: '#ffffff',\r\n  },\r\n});\r\n\r\nexport default ProfileScreen; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Modal,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Alert,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\n// Use emoji placeholders for stickers and crowns\r\nconst GENERIC_STICKER = '🪐';\r\nconst GENERIC_CROWN = '👑';\r\n\r\n// Simulated global sticker definitions for the current season\r\nconst STICKERS = Array.from({ length: 15 }, (_, i) => ({\r\n  id: `s${i + 1}`,\r\n  name: `Sticker ${i + 1}`,\r\n  rarity: ['Common', 'Uncommon', 'Rare', 'Epic'][i % 4],\r\n  season: 1,\r\n}));\r\n\r\n// Simulated user's owned stickers\r\nconst USER_STICKERS = {\r\n  's1': 2, // Owned 2 copies\r\n  's3': 1, // Owned 1 copy\r\n  's5': 3, // Owned 3 copies\r\n  's7': 1, // Owned 1 copy\r\n};\r\n\r\nconst StickerAlbumScreen = () => {\r\n  const [stickers, setStickers] = useState(STICKERS);\r\n  const [userStickers, setUserStickers] = useState(USER_STICKERS);\r\n  const [selectedSticker, setSelectedSticker] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const itemsPerPage = 15;\r\n  const totalPages = Math.ceil(stickers.length / itemsPerPage);\r\n\r\n  useEffect(() => {\r\n    // TODO: Fetch stickers from Firestore\r\n    // TODO: Fetch user's owned stickers from Firestore\r\n  }, []);\r\n\r\n  const isOwned = (stickerId) => {\r\n    return userStickers[stickerId] && userStickers[stickerId] > 0;\r\n  };\r\n\r\n  const getOwnedCount = (stickerId) => {\r\n    return userStickers[stickerId] || 0;\r\n  };\r\n\r\n  const handleStickerPress = (sticker) => {\r\n    setSelectedSticker(sticker);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleListOnMarketplace = () => {\r\n    if (selectedSticker && getOwnedCount(selectedSticker.id) > 1) {\r\n      Alert.alert(\r\n        'List on Marketplace',\r\n        `List ${selectedSticker.name} on the marketplace?`,\r\n        [\r\n          { text: 'Cancel', style: 'cancel' },\r\n          { text: 'List', onPress: () => {\r\n            // TODO: Call Cloud Function to list sticker\r\n            Alert.alert('Success', 'Sticker listed on marketplace!');\r\n            setModalVisible(false);\r\n          }},\r\n        ]\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderSticker = ({ item }) => {\r\n    const owned = isOwned(item.id);\r\n    const count = getOwnedCount(item.id);\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        style={styles.stickerCard}\r\n        onPress={() => handleStickerPress(item)}\r\n      >\r\n        <View style={styles.stickerImageContainer}>\r\n          <View style={[\r\n            styles.stickerImage,\r\n            owned ? styles.stickerOwned : styles.stickerSilhouette\r\n          ]}>\r\n            <Text style={styles.stickerText}>\r\n              {owned ? item.name.charAt(0) : '?'}\r\n            </Text>\r\n          </View>\r\n          {count > 1 && (\r\n            <View style={styles.crownContainer}>\r\n              <View style={styles.crown}>\r\n                <Text style={styles.crownText}>👑</Text>\r\n              </View>\r\n            </View>\r\n          )}\r\n        </View>\r\n        <Text style={styles.stickerName} numberOfLines={2}>\r\n          {item.name}\r\n        </Text>\r\n        <Text style={styles.stickerRarity}>{item.rarity}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  const renderPageIndicator = () => {\r\n    return (\r\n      <View style={styles.pageIndicator}>\r\n        {Array.from({ length: totalPages }, (_, i) => (\r\n          <View\r\n            key={i}\r\n            style={[\r\n              styles.pageDot,\r\n              i === currentPage && styles.pageDotActive\r\n            ]}\r\n          />\r\n        ))}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Sticker Album</Text>\r\n      <Text style={styles.subtitle}>Season 1 Collection</Text>\r\n      \r\n      <FlatList\r\n        data={stickers.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage)}\r\n        renderItem={renderSticker}\r\n        keyExtractor={(item) => item.id}\r\n        numColumns={3}\r\n        columnWrapperStyle={styles.stickerRow}\r\n        showsVerticalScrollIndicator={false}\r\n        contentContainerStyle={styles.stickerGrid}\r\n      />\r\n\r\n      {renderPageIndicator()}\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.modalContent}>\r\n            {selectedSticker && (\r\n              <>\r\n                <View style={styles.modalStickerContainer}>\r\n                  <View style={[\r\n                    styles.modalStickerImage,\r\n                    isOwned(selectedSticker.id) ? styles.stickerOwned : styles.stickerSilhouette\r\n                  ]}>\r\n                    <Text style={styles.modalStickerText}>\r\n                      {isOwned(selectedSticker.id) ? selectedSticker.name.charAt(0) : '?'}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n                <Text style={styles.modalStickerName}>{selectedSticker.name}</Text>\r\n                <Text style={styles.modalStickerRarity}>{selectedSticker.rarity}</Text>\r\n                <Text style={styles.modalStickerCount}>\r\n                  Owned: {getOwnedCount(selectedSticker.id)}\r\n                </Text>\r\n                \r\n                {getOwnedCount(selectedSticker.id) > 1 && (\r\n                  <TouchableOpacity\r\n                    style={styles.listButton}\r\n                    onPress={handleListOnMarketplace}\r\n                  >\r\n                    <Text style={styles.listButtonText}>List on Marketplace</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </>\r\n            )}\r\n            \r\n            <TouchableOpacity\r\n              style={styles.closeButton}\r\n              onPress={() => setModalVisible(false)}\r\n            >\r\n              <Text style={styles.closeButtonText}>Close</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#181c24',\r\n    paddingTop: 40,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#7ad7ff',\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  stickerGrid: {\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  stickerRow: {\r\n    justifyContent: 'space-between',\r\n    marginBottom: 15,\r\n  },\r\n  stickerCard: {\r\n    width: (width - 60) / 3,\r\n    backgroundColor: '#23283a',\r\n    borderRadius: 12,\r\n    padding: 12,\r\n    alignItems: 'center',\r\n    elevation: 2,\r\n  },\r\n  stickerImageContainer: {\r\n    position: 'relative',\r\n    marginBottom: 8,\r\n  },\r\n  stickerImage: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  stickerOwned: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  stickerSilhouette: {\r\n    backgroundColor: '#666',\r\n  },\r\n  stickerText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n  crownContainer: {\r\n    position: 'absolute',\r\n    top: -5,\r\n    right: -5,\r\n  },\r\n  crown: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: 10,\r\n    backgroundColor: '#FFD700',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  crownText: {\r\n    fontSize: 12,\r\n  },\r\n  stickerName: {\r\n    fontSize: 12,\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    fontWeight: '500',\r\n    marginBottom: 4,\r\n  },\r\n  stickerRarity: {\r\n    fontSize: 10,\r\n    color: '#7ad7ff',\r\n    textAlign: 'center',\r\n  },\r\n  pageIndicator: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: 20,\r\n  },\r\n  pageDot: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: 4,\r\n    backgroundColor: '#444',\r\n    marginHorizontal: 4,\r\n  },\r\n  pageDotActive: {\r\n    backgroundColor: '#7ad7ff',\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: '#23283a',\r\n    borderRadius: 16,\r\n    padding: 24,\r\n    alignItems: 'center',\r\n    marginHorizontal: 40,\r\n  },\r\n  modalStickerContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  modalStickerImage: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 16,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  modalStickerText: {\r\n    fontSize: 40,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n  modalStickerName: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 8,\r\n  },\r\n  modalStickerRarity: {\r\n    fontSize: 16,\r\n    color: '#7ad7ff',\r\n    marginBottom: 8,\r\n  },\r\n  modalStickerCount: {\r\n    fontSize: 14,\r\n    color: '#ccc',\r\n    marginBottom: 20,\r\n  },\r\n  listButton: {\r\n    backgroundColor: '#7ad7ff',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 12,\r\n    borderRadius: 8,\r\n    marginBottom: 16,\r\n  },\r\n  listButtonText: {\r\n    color: '#181c24',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n  closeButton: {\r\n    backgroundColor: '#444',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 12,\r\n    borderRadius: 8,\r\n  },\r\n  closeButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default StickerAlbumScreen; ","import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, ActivityIndicator, FlatList, Dimensions } from 'react-native';\r\n\r\n// Simulated store items data\r\nconst STORE_ITEMS = [\r\n  // Featured\r\n  { id: 'f1', tab: 'Featured', name: 'Starter Element Pack', contents: '10 Random Elements', price: 50 },\r\n  { id: 'f2', tab: 'Featured', name: 'Sticker Mega Pack', contents: '5 Random Stickers', price: 120 },\r\n  // Element Packs\r\n  { id: 'e1', tab: 'Element Packs', name: 'Small Element Pack', contents: '5 Elements', price: 25 },\r\n  { id: 'e2', tab: 'Element Packs', name: 'Large Element Pack', contents: '20 Elements', price: 90 },\r\n  // Sticker Packs\r\n  { id: 's1', tab: 'Sticker Packs', name: 'Sticker Duo', contents: '2 Stickers', price: 40 },\r\n  { id: 's2', tab: 'Sticker Packs', name: 'Sticker Collector', contents: '10 Stickers', price: 180 },\r\n];\r\n\r\nconst TABS = ['Featured', 'Element Packs', 'Sticker Packs'];\r\nconst { width } = Dimensions.get('window');\r\n\r\nconst StoreScreen = () => {\r\n  const [activeTab, setActiveTab] = useState('Featured');\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState(null); // { success: true/false, message: string }\r\n  const [userBalance, setUserBalance] = useState(200); // Simulated user balance\r\n\r\n  const items = STORE_ITEMS.filter(item => item.tab === activeTab);\r\n\r\n  const handleBuy = async () => {\r\n    setLoading(true);\r\n    setResult(null);\r\n    // Simulate Cloud Function call\r\n    setTimeout(() => {\r\n      if (userBalance >= selectedItem.price) {\r\n        setUserBalance(userBalance - selectedItem.price);\r\n        setResult({ success: true, message: 'Purchase successful!' });\r\n      } else {\r\n        setResult({ success: false, message: 'Insufficient $PLT balance.' });\r\n      }\r\n      setLoading(false);\r\n    }, 1200);\r\n  };\r\n\r\n  const renderItem = ({ item }) => (\r\n    <View style={styles.card}>\r\n      <Text style={styles.itemName}>{item.name}</Text>\r\n      <Text style={styles.itemContents}>{item.contents}</Text>\r\n      <Text style={styles.itemPrice}>{item.price} $PLT</Text>\r\n      <TouchableOpacity\r\n        style={styles.buyButton}\r\n        onPress={() => {\r\n          setSelectedItem(item);\r\n          setModalVisible(true);\r\n          setResult(null);\r\n        }}\r\n      >\r\n        <Text style={styles.buyButtonText}>Buy</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Store</Text>\r\n      <View style={styles.balanceBar}>\r\n        <Text style={styles.balanceText}>Balance: {userBalance} $PLT</Text>\r\n      </View>\r\n      <View style={styles.tabBar}>\r\n        {TABS.map(tab => (\r\n          <TouchableOpacity\r\n            key={tab}\r\n            style={[styles.tab, activeTab === tab && styles.tabActive]}\r\n            onPress={() => setActiveTab(tab)}\r\n          >\r\n            <Text style={[styles.tabText, activeTab === tab && styles.tabTextActive]}>{tab}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n      <FlatList\r\n        data={items}\r\n        renderItem={renderItem}\r\n        keyExtractor={item => item.id}\r\n        contentContainerStyle={styles.list}\r\n        numColumns={width > 600 ? 2 : 1}\r\n        showsVerticalScrollIndicator={false}\r\n      />\r\n      <Modal\r\n        visible={modalVisible}\r\n        transparent\r\n        animationType=\"fade\"\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={styles.modalBackdrop}>\r\n          <View style={styles.modalContent}>\r\n            {selectedItem && !loading && !result && (\r\n              <>\r\n                <Text style={styles.modalTitle}>Confirm Purchase</Text>\r\n                <Text style={styles.modalItemName}>{selectedItem.name}</Text>\r\n                <Text style={styles.modalItemContents}>{selectedItem.contents}</Text>\r\n                <Text style={styles.modalItemPrice}>{selectedItem.price} $PLT</Text>\r\n                <View style={styles.modalButtonRow}>\r\n                  <TouchableOpacity\r\n                    style={[styles.modalButton, { backgroundColor: '#222' }]}\r\n                    onPress={handleBuy}\r\n                  >\r\n                    <Text style={styles.modalButtonText}>Confirm</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    style={[styles.modalButton, { backgroundColor: '#eee' }]}\r\n                    onPress={() => setModalVisible(false)}\r\n                  >\r\n                    <Text style={[styles.modalButtonText, { color: '#222' }]}>Cancel</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </>\r\n            )}\r\n            {loading && <ActivityIndicator size=\"large\" color=\"#222\" style={{ marginVertical: 24 }} />}\r\n            {result && (\r\n              <>\r\n                <Text style={[styles.resultText, { color: result.success ? '#1abc9c' : '#e74c3c' }]}>{result.message}</Text>\r\n                <TouchableOpacity\r\n                  style={[styles.modalButton, { backgroundColor: '#222', marginTop: 18 }]}\r\n                  onPress={() => setModalVisible(false)}\r\n                >\r\n                  <Text style={styles.modalButtonText}>Close</Text>\r\n                </TouchableOpacity>\r\n              </>\r\n            )}\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fafbfc',\r\n    alignItems: 'center',\r\n    paddingTop: 40,\r\n    paddingHorizontal: 0,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#222',\r\n    marginBottom: 18,\r\n    fontFamily: 'System',\r\n    textAlign: 'center',\r\n    letterSpacing: 0.2,\r\n  },\r\n  balanceBar: {\r\n    marginBottom: 18,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 12,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 24,\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.08,\r\n    shadowRadius: 6,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    elevation: 2,\r\n  },\r\n  balanceText: {\r\n    fontSize: 16,\r\n    color: '#1abc9c',\r\n    fontWeight: '600',\r\n    letterSpacing: 0.1,\r\n  },\r\n  tabBar: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 18,\r\n    backgroundColor: '#f0f1f3',\r\n    borderRadius: 10,\r\n    padding: 4,\r\n    width: '90%',\r\n    maxWidth: 500,\r\n    alignSelf: 'center',\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    marginHorizontal: 2,\r\n  },\r\n  tabActive: {\r\n    backgroundColor: '#fff',\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.08,\r\n    shadowRadius: 4,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    elevation: 1,\r\n  },\r\n  tabText: {\r\n    fontSize: 16,\r\n    color: '#888',\r\n    fontWeight: '600',\r\n  },\r\n  tabTextActive: {\r\n    color: '#222',\r\n  },\r\n  list: {\r\n    alignItems: 'center',\r\n    paddingBottom: 40,\r\n  },\r\n  card: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 18,\r\n    padding: 24,\r\n    margin: 12,\r\n    width: width > 600 ? 320 : 320,\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.10,\r\n    shadowRadius: 10,\r\n    shadowOffset: { width: 0, height: 4 },\r\n    elevation: 3,\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderColor: '#e5e7eb',\r\n  },\r\n  itemName: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#222',\r\n    marginBottom: 8,\r\n    textAlign: 'center',\r\n  },\r\n  itemContents: {\r\n    fontSize: 15,\r\n    color: '#555',\r\n    marginBottom: 12,\r\n    textAlign: 'center',\r\n  },\r\n  itemPrice: {\r\n    fontSize: 16,\r\n    color: '#1abc9c',\r\n    fontWeight: '600',\r\n    marginBottom: 18,\r\n  },\r\n  buyButton: {\r\n    backgroundColor: '#222',\r\n    borderRadius: 8,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 32,\r\n    marginTop: 4,\r\n  },\r\n  buyButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n  },\r\n  modalBackdrop: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.25)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 22,\r\n    padding: 32,\r\n    alignItems: 'center',\r\n    width: 340,\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.18,\r\n    shadowRadius: 16,\r\n    shadowOffset: { width: 0, height: 6 },\r\n    elevation: 6,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    color: '#222',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  modalItemName: {\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    color: '#222',\r\n    marginBottom: 4,\r\n    textAlign: 'center',\r\n  },\r\n  modalItemContents: {\r\n    fontSize: 15,\r\n    color: '#555',\r\n    marginBottom: 8,\r\n    textAlign: 'center',\r\n  },\r\n  modalItemPrice: {\r\n    fontSize: 16,\r\n    color: '#1abc9c',\r\n    fontWeight: '600',\r\n    marginBottom: 18,\r\n    textAlign: 'center',\r\n  },\r\n  modalButtonRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    gap: 16,\r\n  },\r\n  modalButton: {\r\n    borderRadius: 8,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 24,\r\n    marginHorizontal: 6,\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n  },\r\n  modalButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n  },\r\n  resultText: {\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    marginVertical: 18,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default StoreScreen; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Alert,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\n// Simulated season pass rewards data\r\nconst SEASON_PASS_REWARDS = Array.from({ length: 50 }, (_, i) => ({\r\n  level: i + 1,\r\n  free: {\r\n    type: i % 3 === 0 ? 'plt' : i % 3 === 1 ? 'element' : 'sticker',\r\n    amount: i % 3 === 0 ? Math.floor(Math.random() * 50) + 10 : 1,\r\n    itemId: i % 3 === 1 ? `element_${i}` : i % 3 === 2 ? `sticker_${i}` : null,\r\n    rarity: i % 3 === 1 ? ['common', 'uncommon', 'rare'][i % 3] : null,\r\n  },\r\n  premium: {\r\n    type: i % 4 === 0 ? 'plt' : i % 4 === 1 ? 'element' : i % 4 === 2 ? 'sticker' : 'exclusive',\r\n    amount: i % 4 === 0 ? Math.floor(Math.random() * 100) + 50 : 1,\r\n    itemId: i % 4 === 1 ? `premium_element_${i}` : i % 4 === 2 ? `premium_sticker_${i}` : i % 4 === 3 ? `exclusive_${i}` : null,\r\n    rarity: i % 4 === 1 ? ['rare', 'epic', 'legendary'][i % 3] : null,\r\n  },\r\n}));\r\n\r\n// Simulated user data\r\nconst USER_DATA = {\r\n  seasonPassLevel: 15,\r\n  hasPremiumPass: false,\r\n  claimedRewards: {\r\n    free: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\r\n    premium: [], // Premium rewards are not claimed until user has premium pass\r\n  },\r\n};\r\n\r\nconst SeasonPassScreen = () => {\r\n  const [rewards, setRewards] = useState(SEASON_PASS_REWARDS);\r\n  const [userData, setUserData] = useState(USER_DATA);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // TODO: Fetch season pass rewards from Firestore\r\n    // TODO: Fetch user season pass data from Firestore\r\n  }, []);\r\n\r\n  const getRewardIcon = (type) => {\r\n    switch (type) {\r\n      case 'plt':\r\n        return 'logo-bitcoin';\r\n      case 'element':\r\n        return 'flame';\r\n      case 'sticker':\r\n        return 'star';\r\n      case 'exclusive':\r\n        return 'diamond';\r\n      default:\r\n        return 'gift';\r\n    }\r\n  };\r\n\r\n  const getRewardColor = (type) => {\r\n    switch (type) {\r\n      case 'plt':\r\n        return '#FFD700';\r\n      case 'element':\r\n        return '#FF6B6B';\r\n      case 'sticker':\r\n        return '#4ECDC4';\r\n      case 'exclusive':\r\n        return '#9B59B6';\r\n      default:\r\n        return '#95A5A6';\r\n    }\r\n  };\r\n\r\n  const getRewardText = (reward) => {\r\n    if (reward.type === 'plt') {\r\n      return `${reward.amount} $PLT`;\r\n    } else if (reward.type === 'element') {\r\n      return `${reward.rarity} Element`;\r\n    } else if (reward.type === 'sticker') {\r\n      return `${reward.rarity} Sticker`;\r\n    } else if (reward.type === 'exclusive') {\r\n      return 'Exclusive Item';\r\n    }\r\n    return 'Reward';\r\n  };\r\n\r\n  const isClaimed = (level, track) => {\r\n    return userData.claimedRewards[track].includes(level);\r\n  };\r\n\r\n  const isClaimable = (level, track) => {\r\n    if (track === 'premium' && !userData.hasPremiumPass) return false;\r\n    return level <= userData.seasonPassLevel && !isClaimed(level, track);\r\n  };\r\n\r\n  const isFuture = (level) => {\r\n    return level > userData.seasonPassLevel;\r\n  };\r\n\r\n  const handleClaimReward = (level, track) => {\r\n    if (!isClaimable(level, track)) return;\r\n    \r\n    Alert.alert(\r\n      'Claim Reward',\r\n      `Claim ${track} reward for level ${level}?`,\r\n      [\r\n        { text: 'Cancel', style: 'cancel' },\r\n        {\r\n          text: 'Claim',\r\n          onPress: () => {\r\n            // TODO: Call Cloud Function to claim reward\r\n            console.log(`Claiming ${track} reward for level ${level}`);\r\n            // Simulate claiming the reward\r\n            setUserData(prev => ({\r\n              ...prev,\r\n              claimedRewards: {\r\n                ...prev.claimedRewards,\r\n                [track]: [...prev.claimedRewards[track], level]\r\n              }\r\n            }));\r\n          },\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  const handleUpgradeToPremium = () => {\r\n    console.log('Upgrade button pressed'); // Debug log\r\n    Alert.alert(\r\n      'Upgrade to Premium',\r\n      'Purchase Premium Season Pass for 1000 $PLT?',\r\n      [\r\n        { text: 'Cancel', style: 'cancel' },\r\n        {\r\n          text: 'Purchase',\r\n          onPress: () => {\r\n            console.log('Purchase confirmed'); // Debug log\r\n            setLoading(true);\r\n            // TODO: Call Cloud Function to purchase premium pass\r\n            setTimeout(() => {\r\n              console.log('Updating user data to premium'); // Debug log\r\n              setUserData(prev => ({ \r\n                ...prev, \r\n                hasPremiumPass: true,\r\n                claimedRewards: {\r\n                  ...prev.claimedRewards,\r\n                  premium: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15] // Auto-claim first 15 premium rewards\r\n                }\r\n              }));\r\n              setLoading(false);\r\n              Alert.alert('Success', 'Premium Season Pass purchased! You can now claim premium rewards.');\r\n            }, 1000);\r\n          },\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  const RewardItem = ({ reward, level, track, isClaimed, isClaimable, isFuture, isPremiumLocked }) => {\r\n    const icon = getRewardIcon(reward.type);\r\n    const color = getRewardColor(reward.type);\r\n    const text = getRewardText(reward);\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.rewardItem,\r\n          isClaimed && styles.rewardClaimed,\r\n          isClaimable && styles.rewardClaimable,\r\n          isFuture && styles.rewardFuture,\r\n          isPremiumLocked && styles.rewardLocked,\r\n        ]}\r\n        onPress={() => handleClaimReward(level, track)}\r\n        disabled={!isClaimable || isPremiumLocked}\r\n      >\r\n        <View style={[styles.rewardIcon, { backgroundColor: color }]}>\r\n          {isPremiumLocked ? (\r\n            <Ionicons name=\"lock-closed\" size={16} color=\"#FFF\" />\r\n          ) : (\r\n            <Ionicons name={icon} size={16} color=\"#FFF\" />\r\n          )}\r\n        </View>\r\n        <Text style={[\r\n          styles.rewardText,\r\n          isClaimed && styles.rewardTextClaimed,\r\n          isFuture && styles.rewardTextFuture,\r\n          isPremiumLocked && styles.rewardTextLocked,\r\n        ]}>\r\n          {text}\r\n        </Text>\r\n        {isClaimed && (\r\n          <Ionicons name=\"checkmark-circle\" size={16} color=\"#27AE60\" style={styles.claimedIcon} />\r\n        )}\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  const LevelItem = ({ level, freeReward, premiumReward }) => {\r\n    const isFreeClaimed = isClaimed(level, 'free');\r\n    const isFreeClaimable = isClaimable(level, 'free');\r\n    const isPremiumClaimed = isClaimed(level, 'premium');\r\n    const isPremiumClaimable = isClaimable(level, 'premium');\r\n    const isFutureLevel = isFuture(level);\r\n    const isPremiumLocked = !userData.hasPremiumPass;\r\n\r\n    return (\r\n      <View style={styles.levelContainer}>\r\n        <View style={styles.levelHeader}>\r\n          <View style={[\r\n            styles.levelBadge,\r\n            level <= userData.seasonPassLevel && styles.levelBadgeCompleted,\r\n          ]}>\r\n            <Text style={[\r\n              styles.levelText,\r\n              level <= userData.seasonPassLevel && styles.levelTextCompleted,\r\n            ]}>\r\n              {level}\r\n            </Text>\r\n          </View>\r\n          {level <= userData.seasonPassLevel && (\r\n            <View style={styles.progressLine} />\r\n          )}\r\n        </View>\r\n        \r\n        <View style={styles.rewardsContainer}>\r\n          <View style={styles.rewardRow}>\r\n            <Text style={styles.trackLabel}>Free</Text>\r\n            <RewardItem\r\n              reward={freeReward}\r\n              level={level}\r\n              track=\"free\"\r\n              isClaimed={isFreeClaimed}\r\n              isClaimable={isFreeClaimable}\r\n              isFuture={isFutureLevel}\r\n            />\r\n          </View>\r\n          \r\n          <View style={styles.rewardRow}>\r\n            <Text style={styles.trackLabel}>Premium</Text>\r\n            <RewardItem\r\n              reward={premiumReward}\r\n              level={level}\r\n              track=\"premium\"\r\n              isClaimed={isPremiumClaimed}\r\n              isClaimable={isPremiumClaimable}\r\n              isFuture={isFutureLevel}\r\n              isPremiumLocked={isPremiumLocked}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Season Pass</Text>\r\n        <View style={styles.levelInfo}>\r\n          <Text style={styles.levelLabel}>Level {userData.seasonPassLevel}</Text>\r\n          <Text style={styles.progressText}>Progress: {userData.seasonPassLevel}/50</Text>\r\n        </View>\r\n        {!userData.hasPremiumPass && (\r\n          <TouchableOpacity\r\n            style={[styles.upgradeButton, loading && styles.upgradeButtonDisabled]}\r\n            onPress={handleUpgradeToPremium}\r\n            disabled={loading}\r\n          >\r\n            <Ionicons name=\"medal\" size={16} color=\"#FFF\" />\r\n            <Text style={styles.upgradeButtonText}>\r\n              {loading ? 'Processing...' : 'Upgrade to Premium'}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n\r\n      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\r\n        <View style={styles.trackContainer}>\r\n          {rewards.map((levelData) => (\r\n            <LevelItem\r\n              key={levelData.level}\r\n              level={levelData.level}\r\n              freeReward={levelData.free}\r\n              premiumReward={levelData.premium}\r\n            />\r\n          ))}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#1a1a1a',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    paddingTop: 60,\r\n    backgroundColor: '#2d2d2d',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#404040',\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#FFF',\r\n    marginBottom: 10,\r\n  },\r\n  levelInfo: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  levelLabel: {\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    color: '#FFD700',\r\n  },\r\n  progressText: {\r\n    fontSize: 14,\r\n    color: '#CCC',\r\n  },\r\n  upgradeButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#9B59B6',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 25,\r\n    gap: 8,\r\n  },\r\n  upgradeButtonDisabled: {\r\n    opacity: 0.6,\r\n  },\r\n  upgradeButtonText: {\r\n    color: '#FFF',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n  scrollView: {\r\n    flex: 1,\r\n  },\r\n  trackContainer: {\r\n    padding: 20,\r\n  },\r\n  levelContainer: {\r\n    marginBottom: 30,\r\n  },\r\n  levelHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  levelBadge: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: '#404040',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginRight: 15,\r\n  },\r\n  levelBadgeCompleted: {\r\n    backgroundColor: '#27AE60',\r\n  },\r\n  levelText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#CCC',\r\n  },\r\n  levelTextCompleted: {\r\n    color: '#FFF',\r\n  },\r\n  progressLine: {\r\n    flex: 1,\r\n    height: 2,\r\n    backgroundColor: '#27AE60',\r\n  },\r\n  rewardsContainer: {\r\n    marginLeft: 55,\r\n  },\r\n  rewardRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  trackLabel: {\r\n    width: 60,\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n    color: '#CCC',\r\n  },\r\n  rewardItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#2d2d2d',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 8,\r\n    flex: 1,\r\n    marginLeft: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#404040',\r\n  },\r\n  rewardClaimed: {\r\n    backgroundColor: '#1e3a1e',\r\n    borderColor: '#27AE60',\r\n  },\r\n  rewardClaimable: {\r\n    backgroundColor: '#2d2d2d',\r\n    borderColor: '#FFD700',\r\n    shadowColor: '#FFD700',\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4,\r\n    elevation: 4,\r\n  },\r\n  rewardFuture: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderColor: '#333',\r\n  },\r\n  rewardLocked: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderColor: '#333',\r\n    opacity: 0.6,\r\n  },\r\n  rewardIcon: {\r\n    width: 24,\r\n    height: 24,\r\n    borderRadius: 12,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginRight: 8,\r\n  },\r\n  rewardText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    color: '#FFF',\r\n    fontWeight: '500',\r\n  },\r\n  rewardTextClaimed: {\r\n    color: '#27AE60',\r\n  },\r\n  rewardTextFuture: {\r\n    color: '#666',\r\n  },\r\n  rewardTextLocked: {\r\n    color: '#666',\r\n  },\r\n  claimedIcon: {\r\n    marginLeft: 8,\r\n  },\r\n});\r\n\r\nexport default SeasonPassScreen; ","import React from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n// Import screens\r\nimport MainHubScreen from '../screens/MainHubScreen';\r\nimport GamesScreen from '../screens/GamesScreen';\r\nimport ForgeScreen from '../screens/ForgeScreen';\r\nimport ProfileScreen from '../screens/ProfileScreen';\r\nimport StickerAlbumScreen from '../screens/StickerAlbumScreen';\r\nimport StoreScreen from '../screens/StoreScreen';\r\nimport SeasonPassScreen from '../screens/SeasonPassScreen';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst TabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === 'Hub') {\r\n            iconName = focused ? 'home' : 'home-outline';\r\n          } else if (route.name === 'Games') {\r\n            iconName = focused ? 'game-controller' : 'game-controller-outline';\r\n          } else if (route.name === 'Album') {\r\n            iconName = focused ? 'images' : 'images-outline';\r\n          } else if (route.name === 'Forge') {\r\n            iconName = focused ? 'hammer' : 'hammer-outline';\r\n          } else if (route.name === 'Store') {\r\n            iconName = focused ? 'cart' : 'cart-outline';\r\n          } else if (route.name === 'Season Pass') {\r\n            iconName = focused ? 'trophy' : 'trophy-outline';\r\n          } else if (route.name === 'Profile') {\r\n            iconName = focused ? 'person' : 'person-outline';\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: '#00ff88',\r\n        tabBarInactiveTintColor: '#888888',\r\n        tabBarStyle: {\r\n          backgroundColor: '#1a1a1a',\r\n          borderTopColor: '#333333',\r\n          borderTopWidth: 1,\r\n          paddingBottom: 5,\r\n          paddingTop: 5,\r\n          height: 60,\r\n        },\r\n        tabBarLabelStyle: {\r\n          fontSize: 12,\r\n          fontWeight: '600',\r\n        },\r\n        headerShown: false,\r\n      })}\r\n    >\r\n      <Tab.Screen \r\n        name=\"Hub\" \r\n        component={MainHubScreen}\r\n        options={{\r\n          title: 'Hub',\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Games\" \r\n        component={GamesScreen}\r\n        options={{\r\n          title: 'Games',\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Album\" \r\n        component={StickerAlbumScreen}\r\n        options={{\r\n          title: 'Album',\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Forge\" \r\n        component={ForgeScreen}\r\n        options={{\r\n          title: 'Forge',\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Store\" \r\n        component={StoreScreen}\r\n        options={{\r\n          title: 'Store',\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Season Pass\" \r\n        component={SeasonPassScreen}\r\n        options={{\r\n          title: 'Season Pass',\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Profile\" \r\n        component={ProfileScreen}\r\n        options={{\r\n          title: 'Profile',\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default TabNavigator; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Alert,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport authService from '../services/authService';\r\n\r\n// Import Firebase functions\r\nimport { getFunctions, httpsCallable } from 'firebase/functions';\r\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\r\nimport app from '../config/firebase';\r\n\r\nconst functions = getFunctions(app);\r\nconst firestore = getFirestore(app);\r\n\r\n// Simulated data - replace with actual Firestore calls\r\nconst USER_DATA = {\r\n  plt_balance: 1250.75,\r\n  wallet_connected: false,\r\n  wallet_address: null,\r\n  on_chain_balance: 0,\r\n};\r\n\r\n// Simulated $PLT contract - replace with actual Web3 integration\r\nconst PLT_CONTRACT = {\r\n  balanceOf: async (address) => {\r\n    // Simulate blockchain call\r\n    return Math.floor(Math.random() * 1000) + 100;\r\n  },\r\n};\r\n\r\nconst WalletScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [userData, setUserData] = useState(USER_DATA);\r\n  const [withdrawalAmount, setWithdrawalAmount] = useState('');\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [isWithdrawing, setIsWithdrawing] = useState(false);\r\n  const [loadingBalance, setLoadingBalance] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadUserData();\r\n  }, []);\r\n\r\n  const loadUserData = async () => {\r\n    try {\r\n      const currentUser = authService.getCurrentUser();\r\n      if (currentUser) {\r\n        const userDocRef = doc(firestore, 'users', currentUser.uid);\r\n        const userDoc = await getDoc(userDocRef);\r\n        \r\n        if (userDoc.exists()) {\r\n          const userDocData = userDoc.data();\r\n          setUserData(prev => ({\r\n            ...prev,\r\n            plt_balance: userDocData.plt_balance || 0,\r\n          }));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading user data:', error);\r\n    }\r\n  };\r\n\r\n  const handleConnectWallet = async () => {\r\n    setIsConnecting(true);\r\n    try {\r\n      // TODO: Implement actual WalletConnect integration\r\n      // const connector = new WalletConnect({\r\n      //   bridge: \"https://bridge.walletconnect.org\",\r\n      //   clientMeta: {\r\n      //     name: \"Planet League\",\r\n      //     description: \"Gaming Platform\",\r\n      //     url: \"https://planetleague.gg\",\r\n      //     icons: [\"https://planetleague.gg/icon.png\"]\r\n      //   }\r\n      // });\r\n      \r\n      // Simulate wallet connection\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      const mockAddress = '0x' + Math.random().toString(16).substr(2, 40);\r\n      const onChainBalance = await PLT_CONTRACT.balanceOf(mockAddress);\r\n      \r\n      setUserData(prev => ({\r\n        ...prev,\r\n        wallet_connected: true,\r\n        wallet_address: mockAddress,\r\n        on_chain_balance: onChainBalance,\r\n      }));\r\n      \r\n      Alert.alert('Success', 'Wallet connected successfully!');\r\n    } catch (error) {\r\n      Alert.alert('Error', 'Failed to connect wallet. Please try again.');\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const handleDisconnectWallet = () => {\r\n    setUserData(prev => ({\r\n      ...prev,\r\n      wallet_connected: false,\r\n      wallet_address: null,\r\n      on_chain_balance: 0,\r\n    }));\r\n    Alert.alert('Disconnected', 'Wallet disconnected successfully.');\r\n  };\r\n\r\n  const handleRefreshBalance = async () => {\r\n    if (!userData.wallet_connected) return;\r\n    \r\n    setLoadingBalance(true);\r\n    try {\r\n      const onChainBalance = await PLT_CONTRACT.balanceOf(userData.wallet_address);\r\n      setUserData(prev => ({\r\n        ...prev,\r\n        on_chain_balance: onChainBalance,\r\n      }));\r\n    } catch (error) {\r\n      Alert.alert('Error', 'Failed to refresh balance.');\r\n    } finally {\r\n      setLoadingBalance(false);\r\n    }\r\n  };\r\n\r\n  const handleWithdraw = async () => {\r\n    if (!userData.wallet_connected) {\r\n      Alert.alert('Error', 'Please connect your wallet first.');\r\n      return;\r\n    }\r\n\r\n    const amount = parseFloat(withdrawalAmount);\r\n    if (isNaN(amount) || amount <= 0) {\r\n      Alert.alert('Error', 'Please enter a valid amount.');\r\n      return;\r\n    }\r\n\r\n    if (amount > userData.plt_balance) {\r\n      Alert.alert('Error', 'Insufficient balance for withdrawal.');\r\n      return;\r\n    }\r\n\r\n    setIsWithdrawing(true);\r\n    try {\r\n      // Call the actual Cloud Function\r\n      const initiateWithdrawalFunction = httpsCallable(functions, 'initiateWithdrawal');\r\n      const result = await initiateWithdrawalFunction({\r\n        amount,\r\n        walletAddress: userData.wallet_address,\r\n      });\r\n      \r\n      const { data } = result;\r\n      \r\n      if (data.success) {\r\n        Alert.alert(\r\n          'Withdrawal Initiated',\r\n          `Withdrawal of ${amount} $PLT has been initiated.\\nTransaction ID: ${data.transactionId}`,\r\n          [\r\n            {\r\n              text: 'OK',\r\n              onPress: () => {\r\n                setWithdrawalAmount('');\r\n                // Update local balance\r\n                setUserData(prev => ({\r\n                  ...prev,\r\n                  plt_balance: data.newBalance,\r\n                }));\r\n              },\r\n            },\r\n          ]\r\n        );\r\n      } else {\r\n        Alert.alert('Error', 'Withdrawal failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Withdrawal error:', error);\r\n      Alert.alert('Error', 'Withdrawal failed. Please try again.');\r\n    } finally {\r\n      setIsWithdrawing(false);\r\n    }\r\n  };\r\n\r\n  const formatAddress = (address) => {\r\n    if (!address) return '';\r\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Header with Back Button */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <Text style={styles.headerTitle}>Wallet</Text>\r\n        <View style={styles.headerSpacer} />\r\n      </View>\r\n\r\n      <ScrollView style={styles.content}>\r\n        <View style={styles.balanceSection}>\r\n          <Text style={styles.balanceTitle}>Your $PLT Balance</Text>\r\n          <Text style={styles.balanceAmount}>{userData.plt_balance.toLocaleString()}</Text>\r\n          <Text style={styles.balanceLabel}>Planet League Tokens</Text>\r\n        </View>\r\n\r\n        {/* Wallet Connection Section */}\r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>External Wallet</Text>\r\n          \r\n          {!userData.wallet_connected ? (\r\n            <TouchableOpacity\r\n              style={styles.connectButton}\r\n              onPress={handleConnectWallet}\r\n              disabled={isConnecting}\r\n            >\r\n              {isConnecting ? (\r\n                <ActivityIndicator color=\"#fff\" />\r\n              ) : (\r\n                <>\r\n                  <Ionicons name=\"wallet\" size={20} color=\"#fff\" style={styles.buttonIcon} />\r\n                  <Text style={styles.connectButtonText}>Connect Wallet</Text>\r\n                </>\r\n              )}\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <View style={styles.walletInfo}>\r\n              <View style={styles.walletAddress}>\r\n                <Text style={styles.walletLabel}>Connected Address:</Text>\r\n                <Text style={styles.walletAddressText}>{formatAddress(userData.wallet_address)}</Text>\r\n              </View>\r\n              \r\n              <View style={styles.onChainBalance}>\r\n                <Text style={styles.onChainLabel}>On-Chain Balance:</Text>\r\n                <View style={styles.balanceRow}>\r\n                  <Text style={styles.onChainAmount}>{userData.on_chain_balance}</Text>\r\n                  <Text style={styles.onChainSymbol}>$PLT</Text>\r\n                  <TouchableOpacity onPress={handleRefreshBalance} disabled={loadingBalance}>\r\n                    <Ionicons \r\n                      name=\"refresh\" \r\n                      size={16} \r\n                      color={loadingBalance ? \"#666\" : \"#00ff88\"} \r\n                    />\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n              \r\n              <TouchableOpacity\r\n                style={styles.disconnectButton}\r\n                onPress={handleDisconnectWallet}\r\n              >\r\n                <Text style={styles.disconnectButtonText}>Disconnect Wallet</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        </View>\r\n\r\n        {/* Withdrawal Section */}\r\n        {userData.wallet_connected && (\r\n          <View style={styles.section}>\r\n            <Text style={styles.sectionTitle}>Withdraw to Wallet</Text>\r\n            \r\n            <View style={styles.withdrawalInput}>\r\n              <Text style={styles.inputLabel}>Amount ($PLT)</Text>\r\n              <TextInput\r\n                style={styles.amountInput}\r\n                value={withdrawalAmount}\r\n                onChangeText={setWithdrawalAmount}\r\n                placeholder=\"0.00\"\r\n                placeholderTextColor=\"#666\"\r\n                keyboardType=\"numeric\"\r\n              />\r\n            </View>\r\n            \r\n            <TouchableOpacity\r\n              style={[styles.withdrawButton, !withdrawalAmount && styles.withdrawButtonDisabled]}\r\n              onPress={handleWithdraw}\r\n              disabled={!withdrawalAmount || isWithdrawing}\r\n            >\r\n              {isWithdrawing ? (\r\n                <ActivityIndicator color=\"#fff\" />\r\n              ) : (\r\n                <Text style={styles.withdrawButtonText}>Withdraw</Text>\r\n              )}\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#181c24',\r\n    paddingTop: 40,\r\n  },\r\n  header: {\r\n    paddingHorizontal: 20,\r\n    marginBottom: 20,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginLeft: 16,\r\n  },\r\n  headerSpacer: {\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    padding: 20,\r\n  },\r\n  balanceSection: {\r\n    backgroundColor: '#23283a',\r\n    padding: 20,\r\n    borderRadius: 16,\r\n    marginBottom: 20,\r\n  },\r\n  balanceTitle: {\r\n    fontSize: 16,\r\n    color: '#7ad7ff',\r\n    fontWeight: '500',\r\n    marginBottom: 8,\r\n  },\r\n  balanceAmount: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 4,\r\n  },\r\n  balanceLabel: {\r\n    fontSize: 14,\r\n    color: '#7ad7ff',\r\n    fontWeight: '500',\r\n  },\r\n  section: {\r\n    backgroundColor: '#23283a',\r\n    padding: 20,\r\n    borderRadius: 16,\r\n    marginBottom: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 16,\r\n    color: '#7ad7ff',\r\n    fontWeight: '500',\r\n    marginBottom: 8,\r\n  },\r\n  connectButton: {\r\n    backgroundColor: '#7ad7ff',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 8,\r\n  },\r\n  connectButtonText: {\r\n    color: '#181c24',\r\n    fontWeight: 'bold',\r\n    marginLeft: 8,\r\n  },\r\n  walletInfo: {\r\n    gap: 12,\r\n  },\r\n  walletAddress: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  walletLabel: {\r\n    fontSize: 14,\r\n    color: '#ccc',\r\n    marginRight: 8,\r\n  },\r\n  walletAddressText: {\r\n    fontSize: 14,\r\n    color: '#fff',\r\n    fontFamily: 'monospace',\r\n  },\r\n  onChainBalance: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  onChainLabel: {\r\n    fontSize: 14,\r\n    color: '#ccc',\r\n  },\r\n  balanceRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: 8,\r\n  },\r\n  onChainAmount: {\r\n    fontSize: 16,\r\n    color: '#4CAF50',\r\n    fontWeight: 'bold',\r\n  },\r\n  onChainSymbol: {\r\n    fontSize: 14,\r\n    color: '#ccc',\r\n  },\r\n  disconnectButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 16,\r\n    borderRadius: 6,\r\n    backgroundColor: '#FF6B6B20',\r\n    alignSelf: 'flex-start',\r\n  },\r\n  disconnectButtonText: {\r\n    color: '#FF6B6B',\r\n    fontWeight: '500',\r\n    marginLeft: 4,\r\n  },\r\n  withdrawalInput: {\r\n    marginBottom: 16,\r\n  },\r\n  inputLabel: {\r\n    fontSize: 14,\r\n    color: '#ccc',\r\n    marginBottom: 8,\r\n  },\r\n  amountInput: {\r\n    backgroundColor: '#181c24',\r\n    borderWidth: 1,\r\n    borderColor: '#444',\r\n    borderRadius: 8,\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 12,\r\n    color: '#fff',\r\n    fontSize: 16,\r\n  },\r\n  withdrawButton: {\r\n    backgroundColor: '#4CAF50',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 8,\r\n    marginBottom: 12,\r\n  },\r\n  withdrawButtonDisabled: {\r\n    opacity: 0.6,\r\n  },\r\n  withdrawButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    marginLeft: 8,\r\n  },\r\n});\r\n\r\nexport default WalletScreen; ","import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst ReferralScreen = () => {\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <Text style={styles.title}>Refer a Friend</Text>\r\n      </View>\r\n      \r\n      <View style={styles.content}>\r\n        <Ionicons name=\"people\" size={64} color=\"#7ad7ff\" style={styles.icon} />\r\n        <Text style={styles.subtitle}>Coming Soon!</Text>\r\n        <Text style={styles.description}>\r\n          Invite your friends to Planet League and earn rewards together.\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#181c24',\r\n    paddingTop: 40,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 30,\r\n  },\r\n  backButton: {\r\n    marginRight: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 40,\r\n  },\r\n  icon: {\r\n    marginBottom: 20,\r\n  },\r\n  subtitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 12,\r\n  },\r\n  description: {\r\n    fontSize: 16,\r\n    color: '#ccc',\r\n    textAlign: 'center',\r\n    lineHeight: 24,\r\n  },\r\n});\r\n\r\nexport default ReferralScreen; ","import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst SettingsScreen = () => {\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <Text style={styles.title}>Settings</Text>\r\n      </View>\r\n      \r\n      <View style={styles.content}>\r\n        <Ionicons name=\"settings\" size={64} color=\"#7ad7ff\" style={styles.icon} />\r\n        <Text style={styles.subtitle}>Coming Soon!</Text>\r\n        <Text style={styles.description}>\r\n          Customize your Planet League experience with various settings and preferences.\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#181c24',\r\n    paddingTop: 40,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 30,\r\n  },\r\n  backButton: {\r\n    marginRight: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 40,\r\n  },\r\n  icon: {\r\n    marginBottom: 20,\r\n  },\r\n  subtitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 12,\r\n  },\r\n  description: {\r\n    fontSize: 16,\r\n    color: '#ccc',\r\n    textAlign: 'center',\r\n    lineHeight: 24,\r\n  },\r\n});\r\n\r\nexport default SettingsScreen; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  Alert,\r\n  ActivityIndicator,\r\n  RefreshControl,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport leaderboardService from '../services/leaderboardService';\r\nimport authService from '../services/authService';\r\n\r\nconst LeaderboardScreen = ({ navigation, route }) => {\r\n  const initialTab = route?.params?.initialTab || 'global';\r\n  const [activeTab, setActiveTab] = useState(initialTab);\r\n  const [globalLeaderboard, setGlobalLeaderboard] = useState([]);\r\n  const [tournaments, setTournaments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [userRank, setUserRank] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [activeTab]);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (activeTab === 'global') {\r\n        await loadGlobalLeaderboard();\r\n      } else {\r\n        await loadTournaments();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n      Alert.alert('Error', 'Failed to load data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadGlobalLeaderboard = async () => {\r\n    try {\r\n      // Use the shared service for consistent data\r\n      const leaderboardData = leaderboardService.getFullLeaderboard();\r\n      setGlobalLeaderboard(leaderboardData);\r\n      \r\n      // Get current user's rank\r\n      const currentUser = authService.getCurrentUser();\r\n      if (currentUser) {\r\n        const rank = leaderboardService.getUserRank(currentUser.uid);\r\n        setUserRank(rank);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading global leaderboard:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const loadTournaments = async () => {\r\n    try {\r\n      // Use the shared service for consistent data\r\n      const tournamentsData = leaderboardService.getAllTournaments();\r\n      setTournaments(tournamentsData);\r\n    } catch (error) {\r\n      console.error('Error loading tournaments:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const onRefresh = async () => {\r\n    setRefreshing(true);\r\n    await loadData();\r\n    setRefreshing(false);\r\n  };\r\n\r\n  const handleTournamentEntry = async (tournament) => {\r\n    try {\r\n      const currentUser = authService.getCurrentUser();\r\n      if (!currentUser) {\r\n        Alert.alert('Error', 'You must be logged in to enter tournaments.');\r\n        return;\r\n      }\r\n\r\n      if (tournament.entryFee > 0) {\r\n        // Simulate balance check - in real app this would check Firestore\r\n        const currentBalance = 1000; // Simulated balance\r\n\r\n        if (currentBalance < tournament.entryFee) {\r\n          Alert.alert(\r\n            'Insufficient Balance',\r\n            `You need ${tournament.entryFee} $PLT to enter this tournament. Your current balance: ${currentBalance} $PLT`\r\n          );\r\n          return;\r\n        }\r\n\r\n        // Confirm entry\r\n        Alert.alert(\r\n          'Enter Tournament',\r\n          `Join \"${tournament.name}\" for ${tournament.entryFee} $PLT?`,\r\n          [\r\n            { text: 'Cancel', style: 'cancel' },\r\n            { text: 'Enter', onPress: () => processTournamentEntry(tournament) }\r\n          ]\r\n        );\r\n      } else {\r\n        // Free tournament\r\n        Alert.alert(\r\n          'Enter Tournament',\r\n          `Join \"${tournament.name}\" for free?`,\r\n          [\r\n            { text: 'Cancel', style: 'cancel' },\r\n            { text: 'Enter', onPress: () => processTournamentEntry(tournament) }\r\n          ]\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error('Error handling tournament entry:', error);\r\n      Alert.alert('Error', 'Failed to process tournament entry. Please try again.');\r\n    }\r\n  };\r\n\r\n  const processTournamentEntry = async (tournament) => {\r\n    try {\r\n      const currentUser = authService.getCurrentUser();\r\n      \r\n      // Use the service to enter tournament\r\n      const result = await leaderboardService.enterTournament(tournament.id, currentUser.uid);\r\n      \r\n      Alert.alert('Success', result.message);\r\n      \r\n      // If tournament is active, navigate to tournament screen\r\n      if (tournament.status === 'active') {\r\n        navigation.navigate('TournamentScreen', { tournamentId: tournament.id });\r\n      } else {\r\n        // For upcoming tournaments, just refresh the list\r\n        loadTournaments();\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error processing tournament entry:', error);\r\n      Alert.alert('Error', error.message || 'Failed to enter tournament. Please try again.');\r\n    }\r\n  };\r\n\r\n  const renderLeaderboardItem = ({ item, index }) => (\r\n    <View style={styles.leaderboardItem}>\r\n      <View style={styles.rankContainer}>\r\n        <Text style={[\r\n          styles.rankText,\r\n          index < 3 ? styles.topRankText : null\r\n        ]}>\r\n          #{item.rank}\r\n        </Text>\r\n        {index < 3 && (\r\n          <Ionicons \r\n            name=\"trophy\" \r\n            size={20} \r\n            color={index === 0 ? '#FFD700' : index === 1 ? '#C0C0C0' : '#CD7F32'} \r\n          />\r\n        )}\r\n      </View>\r\n      \r\n      <View style={styles.playerInfo}>\r\n        <Text style={styles.playerIcon}>{item.profileIcon}</Text>\r\n        <View style={styles.playerDetails}>\r\n          <Text style={styles.playerName}>{item.username}</Text>\r\n          <Text style={styles.playerStats}>\r\n            Level {item.level} • {item.gamesPlayed} games • {item.winRate}% win rate\r\n          </Text>\r\n        </View>\r\n      </View>\r\n      \r\n      <View style={styles.scoreContainer}>\r\n        <Text style={styles.scoreText}>{item.totalScore.toLocaleString()}</Text>\r\n        <Text style={styles.scoreLabel}>pts</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const renderTournamentItem = ({ item }) => (\r\n    <View style={styles.tournamentCard}>\r\n      <View style={styles.tournamentHeader}>\r\n        <Text style={styles.tournamentName}>{item.name}</Text>\r\n        <View style={[\r\n          styles.statusBadge,\r\n          { backgroundColor: item.status === 'active' ? '#00ff88' : item.status === 'upcoming' ? '#ffaa00' : '#888888' }\r\n        ]}>\r\n          <Text style={styles.statusText}>{item.status.toUpperCase()}</Text>\r\n        </View>\r\n      </View>\r\n      \r\n      <Text style={styles.tournamentGame}>{item.game}</Text>\r\n      <Text style={styles.tournamentDescription}>{item.description}</Text>\r\n      \r\n      <View style={styles.tournamentDetails}>\r\n        <View style={styles.detailItem}>\r\n          <Ionicons name=\"trophy\" size={16} color=\"#FFD700\" />\r\n          <Text style={styles.detailText}>Prize Pool: {item.prizePool.toLocaleString()} $PLT</Text>\r\n        </View>\r\n        \r\n        <View style={styles.detailItem}>\r\n          <Ionicons name=\"people\" size={16} color=\"#00ff88\" />\r\n          <Text style={styles.detailText}>\r\n            {item.currentParticipants}/{item.maxParticipants} participants\r\n          </Text>\r\n        </View>\r\n        \r\n        <View style={styles.detailItem}>\r\n          <Ionicons name=\"calendar\" size={16} color=\"#ffaa00\" />\r\n          <Text style={styles.detailText}>\r\n            {item.startDate.toLocaleDateString()} - {item.endDate.toLocaleDateString()}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n      \r\n      {item.entryFee > 0 && (\r\n        <View style={styles.entryFeeContainer}>\r\n          <Text style={styles.entryFeeText}>Entry Fee: {item.entryFee} $PLT</Text>\r\n        </View>\r\n      )}\r\n      \r\n      <TouchableOpacity\r\n        style={[\r\n          styles.entryButton,\r\n          item.status !== 'upcoming' && item.status !== 'active' ? styles.disabledButton : null\r\n        ]}\r\n        onPress={() => handleTournamentEntry(item)}\r\n        disabled={item.status !== 'upcoming' && item.status !== 'active'}\r\n      >\r\n        <Text style={styles.entryButtonText}>\r\n          {item.status === 'upcoming' || item.status === 'active' ? 'Enter Tournament' : 'Registration Closed'}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <Text style={styles.headerTitle}>Leaderboards</Text>\r\n        <View style={styles.headerSpacer} />\r\n      </View>\r\n\r\n      {/* Tab Navigation */}\r\n      <View style={styles.tabContainer}>\r\n        <TouchableOpacity\r\n          style={[styles.tab, activeTab === 'global' && styles.activeTab]}\r\n          onPress={() => setActiveTab('global')}\r\n        >\r\n          <Ionicons \r\n            name=\"trophy\" \r\n            size={20} \r\n            color={activeTab === 'global' ? '#00ff88' : '#888888'} \r\n          />\r\n          <Text style={[styles.tabText, activeTab === 'global' && styles.activeTabText]}>\r\n            Global\r\n          </Text>\r\n        </TouchableOpacity>\r\n        \r\n        <TouchableOpacity\r\n          style={[styles.tab, activeTab === 'tournaments' && styles.activeTab]}\r\n          onPress={() => setActiveTab('tournaments')}\r\n        >\r\n          <Ionicons \r\n            name=\"game-controller\" \r\n            size={20} \r\n            color={activeTab === 'tournaments' ? '#00ff88' : '#888888'} \r\n          />\r\n          <Text style={[styles.tabText, activeTab === 'tournaments' && styles.activeTabText]}>\r\n            Tournaments\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Content */}\r\n      <ScrollView\r\n        style={styles.content}\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n        }\r\n      >\r\n        {loading ? (\r\n          <View style={styles.loadingContainer}>\r\n            <ActivityIndicator size=\"large\" color=\"#00ff88\" />\r\n            <Text style={styles.loadingText}>Loading...</Text>\r\n          </View>\r\n        ) : (\r\n          <>\r\n            {activeTab === 'global' && (\r\n              <View style={styles.globalTab}>\r\n                {userRank && (\r\n                  <View style={styles.userRankCard}>\r\n                    <Text style={styles.userRankTitle}>Your Rank</Text>\r\n                    <Text style={styles.userRankText}>#{userRank}</Text>\r\n                  </View>\r\n                )}\r\n                \r\n                <FlatList\r\n                  data={globalLeaderboard}\r\n                  renderItem={renderLeaderboardItem}\r\n                  keyExtractor={(item) => item.id}\r\n                  scrollEnabled={false}\r\n                  showsVerticalScrollIndicator={false}\r\n                />\r\n              </View>\r\n            )}\r\n            \r\n            {activeTab === 'tournaments' && (\r\n              <View style={styles.tournamentsTab}>\r\n                <FlatList\r\n                  data={tournaments}\r\n                  renderItem={renderTournamentItem}\r\n                  keyExtractor={(item) => item.id}\r\n                  scrollEnabled={false}\r\n                  showsVerticalScrollIndicator={false}\r\n                />\r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#0a0a0a',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    paddingTop: 60,\r\n    paddingBottom: 20,\r\n    backgroundColor: '#1a1a1a',\r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  headerTitle: {\r\n    flex: 1,\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    marginRight: 40,\r\n  },\r\n  headerSpacer: {\r\n    width: 40,\r\n  },\r\n  tabContainer: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#1a1a1a',\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 10,\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: 12,\r\n    marginHorizontal: 5,\r\n    borderRadius: 8,\r\n  },\r\n  activeTab: {\r\n    backgroundColor: '#2a2a2a',\r\n  },\r\n  tabText: {\r\n    marginLeft: 8,\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#888888',\r\n  },\r\n  activeTabText: {\r\n    color: '#00ff88',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: 50,\r\n  },\r\n  loadingText: {\r\n    color: '#888888',\r\n    fontSize: 16,\r\n    marginTop: 10,\r\n  },\r\n  globalTab: {\r\n    paddingTop: 20,\r\n  },\r\n  userRankCard: {\r\n    backgroundColor: '#1a1a1a',\r\n    padding: 20,\r\n    borderRadius: 12,\r\n    marginBottom: 20,\r\n    alignItems: 'center',\r\n  },\r\n  userRankTitle: {\r\n    color: '#888888',\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n  },\r\n  userRankText: {\r\n    color: '#00ff88',\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n  },\r\n  leaderboardItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#1a1a1a',\r\n    padding: 15,\r\n    borderRadius: 12,\r\n    marginBottom: 10,\r\n  },\r\n  rankContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: 50,\r\n  },\r\n  rankText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#888888',\r\n    marginRight: 5,\r\n  },\r\n  topRankText: {\r\n    color: '#FFD700',\r\n  },\r\n  playerInfo: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginLeft: 10,\r\n  },\r\n  playerIcon: {\r\n    fontSize: 24,\r\n    marginRight: 12,\r\n  },\r\n  playerDetails: {\r\n    flex: 1,\r\n  },\r\n  playerName: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#fff',\r\n    marginBottom: 2,\r\n  },\r\n  playerStats: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n  },\r\n  scoreContainer: {\r\n    alignItems: 'flex-end',\r\n  },\r\n  scoreText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#00ff88',\r\n  },\r\n  scoreLabel: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n  },\r\n  tournamentsTab: {\r\n    paddingTop: 20,\r\n  },\r\n  tournamentCard: {\r\n    backgroundColor: '#1a1a1a',\r\n    padding: 20,\r\n    borderRadius: 12,\r\n    marginBottom: 15,\r\n  },\r\n  tournamentHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  tournamentName: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    flex: 1,\r\n  },\r\n  statusBadge: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 4,\r\n    borderRadius: 6,\r\n  },\r\n  statusText: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n  },\r\n  tournamentGame: {\r\n    fontSize: 16,\r\n    color: '#00ff88',\r\n    marginBottom: 8,\r\n  },\r\n  tournamentDescription: {\r\n    fontSize: 14,\r\n    color: '#888888',\r\n    marginBottom: 15,\r\n    lineHeight: 20,\r\n  },\r\n  tournamentDetails: {\r\n    marginBottom: 15,\r\n  },\r\n  detailItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  detailText: {\r\n    fontSize: 14,\r\n    color: '#888888',\r\n    marginLeft: 8,\r\n  },\r\n  entryFeeContainer: {\r\n    backgroundColor: '#2a2a2a',\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    marginBottom: 15,\r\n    alignItems: 'center',\r\n  },\r\n  entryFeeText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#ffaa00',\r\n  },\r\n  entryButton: {\r\n    backgroundColor: '#00ff88',\r\n    paddingVertical: 12,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: '#444444',\r\n  },\r\n  entryButtonText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n  },\r\n});\r\n\r\nexport default LeaderboardScreen; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Alert,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport leaderboardService from '../services/leaderboardService';\r\nimport authService from '../services/authService';\r\n\r\nconst TournamentScreen = () => {\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const { tournamentId } = route.params;\r\n  \r\n  const [tournament, setTournament] = useState(null);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [matches, setMatches] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userParticipant, setUserParticipant] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadTournamentData();\r\n  }, [tournamentId]);\r\n\r\n  const loadTournamentData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Get tournament details\r\n      const tournamentData = leaderboardService.getTournamentById(tournamentId);\r\n      setTournament(tournamentData);\r\n\r\n      // Simulate participants data\r\n      const mockParticipants = generateMockParticipants(tournamentData);\r\n      setParticipants(mockParticipants);\r\n\r\n      // Simulate matches data\r\n      const mockMatches = generateMockMatches(tournamentData, mockParticipants);\r\n      setMatches(mockMatches);\r\n\r\n      // Check if current user is a participant\r\n      const currentUser = authService.getCurrentUser();\r\n      if (currentUser) {\r\n        const user = mockParticipants.find(p => p.userId === currentUser.uid);\r\n        setUserParticipant(user);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error loading tournament data:', error);\r\n      Alert.alert('Error', 'Failed to load tournament data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateMockParticipants = (tournament) => {\r\n    const participantNames = [\r\n      'ProGamer123', 'SpaceWarrior', 'GalacticHero', 'CosmicExplorer',\r\n      'NebulaGuardian', 'QuantumWizard', 'StellarDragon', 'MeteorMiner',\r\n      'AlienBotanist', 'RocketPup', 'AstroCat', 'CosmicRacer',\r\n      'NebulaPilot', 'StellarKnight', 'QuantumMage', 'SpaceDefender'\r\n    ];\r\n\r\n    const currentUser = authService.getCurrentUser();\r\n    const participants = [];\r\n\r\n    for (let i = 0; i < tournament.currentParticipants; i++) {\r\n      const isCurrentUser = currentUser && i === 0; // Make current user first participant\r\n      participants.push({\r\n        id: `p${i + 1}`,\r\n        userId: isCurrentUser ? currentUser.uid : `user${i + 1}`,\r\n        username: isCurrentUser ? (currentUser.displayName || 'You') : participantNames[i],\r\n        profileIcon: ['👑', '🚀', '⭐', '🌌', '🛡️', '🔮', '🐉', '⛏️', '🌱', '🐕', '🐱', '🏎️', '✈️', '⚔️', '🧙‍♂️', '🛸'][i],\r\n        level: Math.floor(Math.random() * 20) + 5,\r\n        winRate: Math.floor(Math.random() * 40) + 40,\r\n        gamesPlayed: Math.floor(Math.random() * 100) + 50,\r\n        status: 'active', // active, eliminated, winner\r\n        seed: i + 1,\r\n        isCurrentUser\r\n      });\r\n    }\r\n\r\n    return participants;\r\n  };\r\n\r\n  const generateMockMatches = (tournament, participants) => {\r\n    const matches = [];\r\n    const rounds = Math.ceil(Math.log2(participants.length));\r\n    \r\n    for (let round = 1; round <= rounds; round++) {\r\n      const roundMatches = [];\r\n      const matchesInRound = Math.ceil(participants.length / Math.pow(2, round));\r\n      \r\n      for (let match = 1; match <= matchesInRound; match++) {\r\n        const matchId = `r${round}m${match}`;\r\n        const player1Index = (match - 1) * 2;\r\n        const player2Index = player1Index + 1;\r\n        \r\n        const player1 = participants[player1Index];\r\n        const player2 = participants[player2Index];\r\n        \r\n        if (player1 && player2) {\r\n          // Simulate match result based on player stats\r\n          const player1Score = player1.level * 10 + player1.winRate;\r\n          const player2Score = player2.level * 10 + player2.winRate;\r\n          const winner = player1Score > player2Score ? player1 : player2;\r\n          \r\n          roundMatches.push({\r\n            id: matchId,\r\n            round,\r\n            player1,\r\n            player2,\r\n            winner,\r\n            status: round === 1 ? 'completed' : 'upcoming', // First round completed, others upcoming\r\n            player1Score: round === 1 ? Math.floor(Math.random() * 100) + 50 : null,\r\n            player2Score: round === 1 ? Math.floor(Math.random() * 100) + 50 : null,\r\n            startTime: round === 1 ? new Date(Date.now() - Math.random() * 24 * 60 * 60 * 1000) : null,\r\n            duration: round === 1 ? Math.floor(Math.random() * 10) + 5 : null\r\n          });\r\n        }\r\n      }\r\n      \r\n      matches.push({\r\n        round,\r\n        matches: roundMatches,\r\n        title: round === 1 ? 'Round 1' : round === 2 ? 'Quarter Finals' : round === 3 ? 'Semi Finals' : 'Finals'\r\n      });\r\n    }\r\n    \r\n    return matches;\r\n  };\r\n\r\n  const renderParticipant = (participant, index) => (\r\n    <View key={participant.id} style={styles.participantItem}>\r\n      <View style={styles.participantRank}>\r\n        <Text style={styles.rankText}>#{participant.seed}</Text>\r\n      </View>\r\n      \r\n      <View style={styles.participantInfo}>\r\n        <Text style={styles.participantIcon}>{participant.profileIcon}</Text>\r\n        <View style={styles.participantDetails}>\r\n          <Text style={[\r\n            styles.participantName,\r\n            participant.isCurrentUser && styles.currentUserText\r\n          ]}>\r\n            {participant.username} {participant.isCurrentUser && '(You)'}\r\n          </Text>\r\n          <Text style={styles.participantStats}>\r\n            Level {participant.level} • {participant.winRate}% win rate\r\n          </Text>\r\n        </View>\r\n      </View>\r\n      \r\n      <View style={styles.participantStatus}>\r\n        <View style={[\r\n          styles.statusBadge,\r\n          { backgroundColor: participant.status === 'active' ? '#00ff88' : '#ff4444' }\r\n        ]}>\r\n          <Text style={styles.statusText}>{participant.status.toUpperCase()}</Text>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const renderMatch = (match) => (\r\n    <View key={match.id} style={styles.matchItem}>\r\n      <View style={styles.matchHeader}>\r\n        <Text style={styles.matchTitle}>Match #{match.id}</Text>\r\n        <View style={[\r\n          styles.matchStatus,\r\n          { backgroundColor: match.status === 'completed' ? '#00ff88' : '#ffaa00' }\r\n        ]}>\r\n          <Text style={styles.matchStatusText}>{match.status.toUpperCase()}</Text>\r\n        </View>\r\n      </View>\r\n      \r\n      <View style={styles.matchPlayers}>\r\n        <View style={[\r\n          styles.playerCard,\r\n          match.winner?.id === match.player1?.id && styles.winnerCard\r\n        ]}>\r\n          <Text style={styles.playerIcon}>{match.player1?.profileIcon}</Text>\r\n          <View style={styles.playerInfo}>\r\n            <Text style={styles.playerName}>{match.player1?.username}</Text>\r\n            <Text style={styles.playerLevel}>Level {match.player1?.level}</Text>\r\n          </View>\r\n          {match.player1Score !== null && (\r\n            <Text style={styles.playerScore}>{match.player1Score}</Text>\r\n          )}\r\n        </View>\r\n        \r\n        <View style={styles.vsContainer}>\r\n          <Text style={styles.vsText}>VS</Text>\r\n        </View>\r\n        \r\n        <View style={[\r\n          styles.playerCard,\r\n          match.winner?.id === match.player2?.id && styles.winnerCard\r\n        ]}>\r\n          <Text style={styles.playerIcon}>{match.player2?.profileIcon}</Text>\r\n          <View style={styles.playerInfo}>\r\n            <Text style={styles.playerName}>{match.player2?.username}</Text>\r\n            <Text style={styles.playerLevel}>Level {match.player2?.level}</Text>\r\n          </View>\r\n          {match.player2Score !== null && (\r\n            <Text style={styles.playerScore}>{match.player2Score}</Text>\r\n          )}\r\n        </View>\r\n      </View>\r\n      \r\n      {match.status === 'completed' && (\r\n        <View style={styles.matchDetails}>\r\n          <Text style={styles.matchDetailText}>\r\n            Winner: {match.winner?.username} • Duration: {match.duration} min\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n\r\n  const renderRound = (round) => (\r\n    <View key={round.round} style={styles.roundContainer}>\r\n      <Text style={styles.roundTitle}>{round.title}</Text>\r\n      {round.matches.map(renderMatch)}\r\n    </View>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#00ff88\" />\r\n        <Text style={styles.loadingText}>Loading tournament...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (!tournament) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Text style={styles.errorText}>Tournament not found</Text>\r\n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\r\n          <Text style={styles.backButtonText}>Go Back</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#ffffff\" />\r\n        </TouchableOpacity>\r\n        <Text style={styles.headerTitle}>Tournament</Text>\r\n        <View style={styles.headerSpacer} />\r\n      </View>\r\n\r\n      <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>\r\n        {/* Tournament Info */}\r\n        <View style={styles.tournamentInfo}>\r\n          <View style={styles.tournamentHeader}>\r\n            <Ionicons name=\"trophy\" size={32} color=\"#FFD700\" />\r\n            <View style={styles.tournamentTitleContainer}>\r\n              <Text style={styles.tournamentName}>{tournament.name}</Text>\r\n              <Text style={styles.tournamentGame}>{tournament.game}</Text>\r\n            </View>\r\n            <View style={[\r\n              styles.statusBadge,\r\n              { backgroundColor: tournament.status === 'active' ? '#00ff88' : '#ffaa00' }\r\n            ]}>\r\n              <Text style={styles.statusText}>{tournament.status.toUpperCase()}</Text>\r\n            </View>\r\n          </View>\r\n          \r\n          <Text style={styles.tournamentDescription}>{tournament.description}</Text>\r\n          \r\n          <View style={styles.tournamentStats}>\r\n            <View style={styles.statItem}>\r\n              <Ionicons name=\"trophy\" size={20} color=\"#FFD700\" />\r\n              <Text style={styles.statText}>{tournament.prizePool.toLocaleString()} $PLT</Text>\r\n            </View>\r\n            <View style={styles.statItem}>\r\n              <Ionicons name=\"people\" size={20} color=\"#00ff88\" />\r\n              <Text style={styles.statText}>{participants.length}/{tournament.maxParticipants}</Text>\r\n            </View>\r\n            <View style={styles.statItem}>\r\n              <Ionicons name=\"calendar\" size={20} color=\"#ffaa00\" />\r\n              <Text style={styles.statText}>\r\n                {tournament.startDate.toLocaleDateString()} - {tournament.endDate.toLocaleDateString()}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        {/* User Status */}\r\n        {userParticipant && (\r\n          <View style={styles.userStatusCard}>\r\n            <Text style={styles.userStatusTitle}>Your Status</Text>\r\n            <View style={styles.userStatusContent}>\r\n              <Text style={styles.userStatusIcon}>{userParticipant.profileIcon}</Text>\r\n              <View style={styles.userStatusInfo}>\r\n                <Text style={styles.userStatusName}>{userParticipant.username}</Text>\r\n                <Text style={styles.userStatusDetails}>\r\n                  Seed #{userParticipant.seed} • Level {userParticipant.level}\r\n                </Text>\r\n              </View>\r\n              <View style={[\r\n                styles.userStatusBadge,\r\n                { backgroundColor: userParticipant.status === 'active' ? '#00ff88' : '#ff4444' }\r\n              ]}>\r\n                <Text style={styles.userStatusText}>{userParticipant.status.toUpperCase()}</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        )}\r\n\r\n        {/* Participants */}\r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>Participants ({participants.length})</Text>\r\n          <View style={styles.participantsList}>\r\n            {participants.map(renderParticipant)}\r\n          </View>\r\n        </View>\r\n\r\n        {/* Tournament Bracket */}\r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>Tournament Bracket</Text>\r\n          <View style={styles.bracketContainer}>\r\n            {matches.map(renderRound)}\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#0a0a0a',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n    backgroundColor: '#1a1a1a',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#333333',\r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  headerTitle: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    marginLeft: -40,\r\n  },\r\n  headerSpacer: {\r\n    width: 40,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#0a0a0a',\r\n  },\r\n  loadingText: {\r\n    color: '#ffffff',\r\n    fontSize: 16,\r\n    marginTop: 16,\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#0a0a0a',\r\n  },\r\n  errorText: {\r\n    color: '#ffffff',\r\n    fontSize: 18,\r\n    marginBottom: 20,\r\n  },\r\n  tournamentInfo: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 12,\r\n    padding: 20,\r\n    marginTop: 20,\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  tournamentHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  tournamentTitleContainer: {\r\n    flex: 1,\r\n    marginLeft: 12,\r\n  },\r\n  tournamentName: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 4,\r\n  },\r\n  tournamentGame: {\r\n    fontSize: 16,\r\n    color: '#00ff88',\r\n  },\r\n  statusBadge: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 8,\r\n  },\r\n  statusText: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    color: '#000000',\r\n  },\r\n  tournamentDescription: {\r\n    fontSize: 14,\r\n    color: '#cccccc',\r\n    lineHeight: 20,\r\n    marginBottom: 16,\r\n  },\r\n  tournamentStats: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  statItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  statText: {\r\n    fontSize: 14,\r\n    color: '#ffffff',\r\n    marginLeft: 8,\r\n  },\r\n  userStatusCard: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    marginTop: 16,\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  userStatusTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 12,\r\n  },\r\n  userStatusContent: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  userStatusIcon: {\r\n    fontSize: 24,\r\n    marginRight: 12,\r\n  },\r\n  userStatusInfo: {\r\n    flex: 1,\r\n  },\r\n  userStatusName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#00ff88',\r\n    marginBottom: 4,\r\n  },\r\n  userStatusDetails: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n  },\r\n  userStatusBadge: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 4,\r\n    borderRadius: 6,\r\n  },\r\n  userStatusText: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    color: '#000000',\r\n  },\r\n  section: {\r\n    marginTop: 24,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 16,\r\n  },\r\n  participantsList: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 12,\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  participantItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#333333',\r\n  },\r\n  participantRank: {\r\n    width: 40,\r\n  },\r\n  rankText: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: '#888888',\r\n  },\r\n  participantInfo: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginLeft: 8,\r\n  },\r\n  participantIcon: {\r\n    fontSize: 20,\r\n    marginRight: 12,\r\n  },\r\n  participantDetails: {\r\n    flex: 1,\r\n  },\r\n  participantName: {\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n    color: '#ffffff',\r\n    marginBottom: 2,\r\n  },\r\n  currentUserText: {\r\n    color: '#00ff88',\r\n  },\r\n  participantStats: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n  },\r\n  participantStatus: {\r\n    marginLeft: 12,\r\n  },\r\n  bracketContainer: {\r\n    backgroundColor: '#1a1a1a',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    borderWidth: 1,\r\n    borderColor: '#333333',\r\n  },\r\n  roundContainer: {\r\n    marginBottom: 24,\r\n  },\r\n  roundTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    marginBottom: 16,\r\n  },\r\n  matchItem: {\r\n    backgroundColor: '#2a2a2a',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 12,\r\n    borderWidth: 1,\r\n    borderColor: '#444444',\r\n  },\r\n  matchHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 12,\r\n  },\r\n  matchTitle: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n  },\r\n  matchStatus: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 4,\r\n    borderRadius: 6,\r\n  },\r\n  matchStatusText: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    color: '#000000',\r\n  },\r\n  matchPlayers: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  playerCard: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#333333',\r\n    padding: 12,\r\n    borderRadius: 8,\r\n  },\r\n  winnerCard: {\r\n    backgroundColor: '#00ff88',\r\n  },\r\n  playerIcon: {\r\n    fontSize: 20,\r\n    marginRight: 8,\r\n  },\r\n  playerInfo: {\r\n    flex: 1,\r\n  },\r\n  playerName: {\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n    color: '#ffffff',\r\n    marginBottom: 2,\r\n  },\r\n  playerLevel: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n  },\r\n  playerScore: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#00ff88',\r\n  },\r\n  vsContainer: {\r\n    paddingHorizontal: 12,\r\n  },\r\n  vsText: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: '#ffaa00',\r\n  },\r\n  matchDetails: {\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#444444',\r\n    paddingTop: 8,\r\n  },\r\n  matchDetailText: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n  },\r\n  backButton: {\r\n    backgroundColor: '#333333',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n  },\r\n  backButtonText: {\r\n    color: '#ffffff',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n});\r\n\r\nexport default TournamentScreen; ","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\n\nimport SplashScreen from './src/screens/SplashScreen';\nimport LoginScreen from './src/screens/LoginScreen';\nimport UsernameScreen from './src/screens/UsernameScreen';\nimport OnboardingScreen from './src/screens/OnboardingScreen';\nimport TabNavigator from './src/navigation/TabNavigator';\nimport WalletScreen from './src/screens/WalletScreen';\nimport ReferralScreen from './src/screens/ReferralScreen';\nimport SettingsScreen from './src/screens/SettingsScreen';\nimport LeaderboardScreen from './src/screens/LeaderboardScreen';\nimport TournamentScreen from './src/screens/TournamentScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <StatusBar style=\"light\" />\n      <Stack.Navigator \n        initialRouteName=\"Splash\"\n        screenOptions={{\n          headerShown: false,\n        }}\n      >\n        <Stack.Screen name=\"Splash\" component={SplashScreen} />\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Username\" component={UsernameScreen} />\n        <Stack.Screen name=\"Onboarding\" component={OnboardingScreen} />\n        <Stack.Screen name=\"MainApp\" component={TabNavigator} />\n        <Stack.Screen \n          name=\"WalletScreen\" \n          component={WalletScreen}\n          options={{\n            headerShown: false,\n          }}\n        />\n        <Stack.Screen \n          name=\"ReferralScreen\" \n          component={ReferralScreen}\n          options={{\n            headerShown: false,\n          }}\n        />\n        <Stack.Screen \n          name=\"SettingsScreen\" \n          component={SettingsScreen}\n          options={{\n            headerShown: false,\n          }}\n        />\n        <Stack.Screen \n          name=\"LeaderboardScreen\" \n          component={LeaderboardScreen}\n          options={{\n            headerShown: false,\n          }}\n        />\n        <Stack.Screen \n          name=\"TournamentScreen\" \n          component={TournamentScreen}\n          options={{\n            headerShown: false,\n          }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n} ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [298], () => (__webpack_require__(9958)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["width","height","Dimensions","get","styles","StyleSheet","create","container","flex","backgroundImage","gradientOverlay","justifyContent","paddingVertical","content","alignItems","paddingHorizontal","title","fontSize","fontWeight","color","textAlign","letterSpacing","textShadowColor","textShadowOffset","textShadowRadius","marginBottom","tagline","buttonContainer","paddingBottom","button","borderRadius","overflow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","buttonGradient","buttonText","SplashScreen","navigation","_jsx","View","style","children","ImageBackground","source","uri","resizeMode","_jsxs","LinearGradient","colors","Text","TouchableOpacity","onPress","handleGetStarted","navigate","activeOpacity","start","x","y","end","users","id","email","password","username","isNewUser","createdAt","lastSignIn","currentUser","isValidEmail","test","isValidPassword","length","authService","signInWithGoogle","async","Promise","resolve","setTimeout","mockUser","displayName","Math","random","Date","toISOString","success","user","signInWithX","signInWithEmail","error","message","find","u","toLowerCase","createUserWithEmail","newUser","now","push","getCurrentUser","updateUsername","userIndex","findIndex","signOut","getAllUsers","resetUsers","scrollContainer","flexGrow","background","header","flexDirection","paddingTop","backButton","backButtonText","logoContainer","logo","backgroundColor","logoText","logoTitle","socialContainer","socialButton","googleButton","googleButtonText","xButton","xButtonText","divider","dividerLine","dividerText","marginHorizontal","inputContainer","input","borderWidth","borderColor","testInfo","padding","testInfoText","primaryButton","primaryButtonGradient","primaryButtonText","footerText","lineHeight","LoginScreen","setEmail","useState","setPassword","loading","setLoading","KeyboardAvoidingView","behavior","ScrollView","contentContainerStyle","handleBack","goBack","result","Alert","alert","disabled","TextInput","placeholder","placeholderTextColor","value","onChangeText","keyboardType","autoCapitalize","autoCorrect","editable","secureTextEntry","trim","createResult","ActivityIndicator","takenUsernames","usernameService","checkUsername","available","some","taken","setUsername","userId","availabilityCheck","updatedAt","debouncedCheckUsername","debounce","func","delay","timeoutId","args","clearTimeout","apply","callback","Object","assign","getTakenUsernames","resetTakenUsernames","subtitle","inputWrapper","position","paddingRight","inputSuccess","inputError","indicator","right","top","transform","translateY","checkmark","xmark","errorText","marginTop","buttonDisabled","UsernameScreen","availability","setAvailability","fadeAnim","Animated","Value","debouncedCheck","useCallback","useEffect","setValue","text","timing","toValue","duration","useNativeDriver","maxLength","autoFocus","renderAvailabilityIndicator","size","opacity","featuresContainer","featureText","OnboardingScreen","userData","level","xp","pltBalance","profileIcon","gamesPlayed","stickersCollected","achievements","featuredContent","description","icon","reward","gradient","badge","players","active","priority","userQuests","progress","target","status","featuredGames","featured","popularity","isNew","isPopular","firestoreService","subscribeToUserData","console","warn","interval","setInterval","clearInterval","subscribeToFeaturedContent","subscribeToUserQuests","subscribeToFeaturedGames","subscribeToAllGames","subscribeToAllQuests","updateUserData","updates","completeQuest","questId","questIndex","q","Error","quest","completedAt","floor","getCraftingPreview","elementIds","filledSlots","preview","elementTypes","uniqueElements","Set","name","rarity","successRate","sort","join","elements","performCraft","isSuccess","subscribeToUserElements","simulatedElements","count","GLOBAL_LEADERBOARD_DATA","rank","totalScore","winRate","TOURNAMENTS_DATA","game","prizePool","entryFee","maxParticipants","currentParticipants","startDate","endDate","rewards","first","second","third","getTopLeaderboard","slice","getFullLeaderboard","getUserRank","userInLeaderboard","player","getActiveTournaments","filter","t","getUpcomingTournaments","getAllTournaments","getTournamentsForHub","this","getTournamentById","tournamentId","enterTournament","tournament","borderBottomWidth","borderBottomColor","profileSection","marginRight","profileIconText","userInfo","xpSection","xpBarContainer","xpBar","xpBarFill","xpText","pltSection","pltContainer","pltIcon","pltAmount","pltLabel","TopBar","onProfilePress","useNavigation","xpPerLevel","currentLevelXp","xpProgress","handleWalletPress","toLocaleString","screenWidth","cardWidth","marginVertical","seeAllText","scrollContent","carouselItem","cardContainer","cardGradient","minHeight","cardContent","cardHeader","cardBadge","cardReward","cardMain","cardIcon","cardTitle","cardDescription","cardFooter","cardStats","gap","statText","playButton","playButtonText","pagination","paginationDot","paginationDotActive","emptyContainer","emptyText","FeaturedCarousel","onItemPress","activeIndex","setActiveIndex","scrollViewRef","useRef","ref","horizontal","showsHorizontalScrollIndicator","onScroll","event","scrollPosition","nativeEvent","contentOffset","index","round","scrollEventThrottle","decelerationRate","snapToInterval","snapToAlignment","map","renderFeaturedItem","item","_","current","scrollTo","animated","scrollToIndex","questsList","questItem","questHeader","questIconContainer","questIcon","questInfo","questTitle","questDescription","questReward","rewardAmount","rewardLabel","progressContainer","progressBar","progressFill","progressFillCompleted","progressText","minWidth","completedBadge","completedText","emptyIcon","emptyTitle","emptyDescription","QuestsWidget","quests","onQuestPress","onSeeAllPress","displayedQuests","showsVerticalScrollIndicator","progressPercentage","isCompleted","min","userRankCard","userRankTitle","userRankText","leaderboardList","leaderboardItem","rankContainer","rankText","topRankText","playerInfo","marginLeft","playerIcon","playerDetails","playerName","playerStats","scoreContainer","scoreText","scoreLabel","LeaderboardWidget","leaderboardData","userRank","displayedLeaderboard","renderLeaderboardItem","Ionicons","tournamentsList","paddingLeft","tournamentsContent","tournamentCard","tournamentHeader","tournamentIconContainer","statusBadge","statusText","tournamentName","tournamentGame","tournamentDetails","detailRow","detailText","entryFeeContainer","entryFeeText","TournamentsWidget","tournaments","onTournamentPress","displayedTournaments","isActive","isUpcoming","toUpperCase","loadingContainer","loadingText","MainHubScreen","setUserData","setFeaturedContent","setUserQuests","setLeaderboardData","setTournaments","setUserRank","refreshing","setRefreshing","unsubscribeUser","data","unsubscribeFeatured","unsubscribeQuests","loadLeaderboardData","loadTournamentsData","topLeaderboard","leaderboardService","uid","hubTournaments","handleProfilePress","refreshControl","RefreshControl","onRefresh","tintColor","handleFeaturedSeeAll","handleQuestSeeAll","handleLeaderboardSeeAll","toLocaleDateString","handleTournamentsSeeAll","initialTab","gamesList","gameCard","comingSoonCard","gameHeader","gameIcon","gameInfo","gameName","gameStatus","rewardContainer","rewardText","gameDescription","GamesScreen","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","getAuth","getFirestore","GoogleAuthProvider","RECIPES","ELEMENT_ICONS","fire","water","earth","air","lightning","ice","shadow","light","mainContent","inventoryPanel","borderRightWidth","borderRightColor","panelTitle","inventoryScroll","draggableElement","elementIcon","elementName","elementCount","craftingArea","craftingTitle","craftingSlots","flexWrap","craftingSlot","margin","emptySlot","borderStyle","emptySlotText","filledSlot","slotElementIcon","slotElementName","previewContainer","previewTitle","previewContent","previewIcon","previewName","previewRarity","previewSuccessRate","previewReward","craftButtonContainer","craftButton","craftButtonDisabled","craftButtonText","clearButton","clearButtonText","resultContainer","successResult","failureResult","resultText","elementCard","ForgeScreen","userElements","setUserElements","setCraftingSlots","craftingPreview","setCraftingPreview","isCrafting","setIsCrafting","craftingResult","setCraftingResult","unsubscribe","slot","addElementToSlot","element","slotIndex","newSlots","updatedElements","el","removeElementFromSlot","CraftingSlot","onRemove","emptySlotIndex","toFixed","clearAllSlots","forEach","elementIndex","maxHeight","r","idx","e","USER","MENU_ITEMS","label","screen","url","action","statsCard","avatarContainer","avatar","userDetails","statsGrid","statItem","statNumber","statLabel","section","sectionTitle","achievementCard","lockedAchievement","achievementHeader","achievementIcon","achievementInfo","achievementName","achievementDescription","unlockedBadge","unlockedText","achievementDate","fontStyle","menuItem","menuItemContent","menuIcon","menuLabel","ProfileScreen","userStats","Linking","openURL","log","replace","navError","reset","routes","handleMenuPress","unlocked","date","achievement","STICKERS","Array","from","i","season","USER_STICKERS","stickerGrid","stickerRow","stickerCard","stickerImageContainer","stickerImage","stickerOwned","stickerSilhouette","stickerText","crownContainer","crown","crownText","stickerName","stickerRarity","pageIndicator","pageDot","pageDotActive","modalOverlay","modalContent","modalStickerContainer","modalStickerImage","modalStickerText","modalStickerName","modalStickerRarity","modalStickerCount","listButton","listButtonText","closeButton","closeButtonText","StickerAlbumScreen","stickers","setStickers","userStickers","setUserStickers","selectedSticker","setSelectedSticker","modalVisible","setModalVisible","currentPage","setCurrentPage","totalPages","ceil","isOwned","stickerId","getOwnedCount","FlatList","renderItem","renderSticker","owned","charAt","numberOfLines","keyExtractor","numColumns","columnWrapperStyle","Modal","animationType","transparent","visible","onRequestClose","_Fragment","handleListOnMarketplace","STORE_ITEMS","tab","contents","price","TABS","fontFamily","balanceBar","balanceText","tabBar","maxWidth","alignSelf","tabActive","tabText","tabTextActive","list","card","itemName","itemContents","itemPrice","buyButton","buyButtonText","modalBackdrop","modalTitle","modalItemName","modalItemContents","modalItemPrice","modalButtonRow","modalButton","modalButtonText","StoreScreen","activeTab","setActiveTab","selectedItem","setSelectedItem","setResult","userBalance","setUserBalance","items","SEASON_PASS_REWARDS","free","type","amount","itemId","premium","USER_DATA","seasonPassLevel","hasPremiumPass","claimedRewards","levelInfo","levelLabel","upgradeButton","upgradeButtonDisabled","upgradeButtonText","scrollView","trackContainer","levelContainer","levelHeader","levelBadge","levelBadgeCompleted","levelText","levelTextCompleted","progressLine","rewardsContainer","rewardRow","trackLabel","rewardItem","rewardClaimed","rewardClaimable","rewardFuture","rewardLocked","rewardIcon","rewardTextClaimed","rewardTextFuture","rewardTextLocked","claimedIcon","SeasonPassScreen","setRewards","isClaimed","track","includes","isClaimable","handleClaimReward","prev","RewardItem","isFuture","isPremiumLocked","getRewardIcon","getRewardColor","getRewardText","LevelItem","freeReward","premiumReward","isFreeClaimed","isFreeClaimable","isPremiumClaimed","isPremiumClaimable","isFutureLevel","handleUpgradeToPremium","levelData","Tab","createBottomTabNavigator","TabNavigator","Navigator","screenOptions","route","tabBarIcon","focused","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","borderTopColor","borderTopWidth","tabBarLabelStyle","headerShown","Screen","component","options","functions","getFunctions","firestore","plt_balance","wallet_connected","wallet_address","on_chain_balance","PLT_CONTRACT","headerTitle","headerSpacer","balanceSection","balanceTitle","balanceAmount","balanceLabel","connectButton","connectButtonText","walletInfo","walletAddress","walletLabel","walletAddressText","onChainBalance","onChainLabel","balanceRow","onChainAmount","onChainSymbol","disconnectButton","disconnectButtonText","withdrawalInput","inputLabel","amountInput","withdrawButton","withdrawButtonDisabled","withdrawButtonText","WalletScreen","withdrawalAmount","setWithdrawalAmount","isConnecting","setIsConnecting","isWithdrawing","setIsWithdrawing","loadingBalance","setLoadingBalance","loadUserData","userDocRef","doc","userDoc","getDoc","exists","userDocData","address","substring","handleDisconnectWallet","mockAddress","toString","substr","buttonIcon","parseFloat","isNaN","initiateWithdrawalFunction","httpsCallable","transactionId","newBalance","ReferralScreen","SettingsScreen","tabContainer","activeTabText","globalTab","tournamentsTab","tournamentDescription","detailItem","entryButton","disabledButton","entryButtonText","LeaderboardScreen","params","globalLeaderboard","setGlobalLeaderboard","loadData","loadGlobalLeaderboard","loadTournaments","tournamentsData","processTournamentEntry","scrollEnabled","renderTournamentItem","currentBalance","handleTournamentEntry","errorContainer","tournamentInfo","tournamentTitleContainer","tournamentStats","userStatusCard","userStatusTitle","userStatusContent","userStatusIcon","userStatusInfo","userStatusName","userStatusDetails","userStatusBadge","userStatusText","participantsList","participantItem","participantRank","participantInfo","participantIcon","participantDetails","participantName","currentUserText","participantStats","participantStatus","bracketContainer","roundContainer","roundTitle","matchItem","matchHeader","matchTitle","matchStatus","matchStatusText","matchPlayers","playerCard","winnerCard","playerLevel","playerScore","vsContainer","vsText","matchDetails","matchDetailText","TournamentScreen","useRoute","setTournament","participants","setParticipants","matches","setMatches","userParticipant","setUserParticipant","loadTournamentData","tournamentData","mockParticipants","generateMockParticipants","mockMatches","generateMockMatches","p","participantNames","isCurrentUser","seed","rounds","log2","roundMatches","matchesInRound","pow","match","matchId","player1Index","player2Index","player1","player2","winner","player1Score","player2Score","startTime","renderMatch","renderParticipant","participant","Stack","createStackNavigator","App","NavigationContainer","StatusBar","initialRouteName","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}